{"version":3,"sources":["../../../src/encodings.ts","../../../../src/utils/errors.ts","../../../../src/utils/gatewayRegistry.ts","../../../../src/APIs/blockbook.ts","../../../../src/utils/evmTxSubmitter.ts","../../../../src/script/script.ts","../../../../src/utils/types.ts","../../../src/errors.ts","../../../../src/pack/marshal.ts","../../../src/unmarshal.ts","../../../../src/APIs/API.ts","../../../src/config.ts","../../../../src/utils/inputAndOutputTypes.ts","../../../../src/methods/index.ts","../../../../src/rpc/jsonRpc.ts","../../../src/rpcUrls.ts","../../../src/provider.ts","../../../../src/APIs/insight.ts","../../../../src/utils/lotus.ts","../../../../src/script/opcodes.ts","../../../../src/APIs/blockstream.ts","../../../../src/APIs/bitcoinDotCom.ts","../../../src/fixSignature.ts","../../../src/renVMHashes.ts","../../../src/bitcoin.ts","../../../src/bitcoincash.ts","../../../src/digibyte.ts","../../../src/dogecoin.ts","../../../src/zcash.ts","../../../../src/interfaces/chain.ts","../../../../src/interfaces/logger.ts","../../../../src/interfaces/eventEmitter.ts","../../../../src/interfaces/renNetwork.ts","../../../../src/interfaces/types.ts","../../../src/memoize.ts","../../../../../src/libraries/promiEvent/index.ts","../../../src/promiEvent.ts","../../../src/txSubmitter.ts","../../../src/filecoin.ts","../../../src/terra.ts","../../../src/renVMTxSubmitter.ts","../../../../src/script/index.ts","../../../../src/pack/pack.ts","../../../../src/utils/abi.ts","../../../../../src/utils/payloads/evmPayloadHandlers.ts","../../../../src/utils/utils.ts","../../../../src/utils/filfox.ts","../../../../src/api/terraDev.ts","../../../../src/api/types.ts","../../../src/assert.ts","../../../src/common.ts","../../../../src/contracts/index.ts","../../../../src/utils/generic.ts","../../../src/base.ts","lib/constants.ts","components/controllers/Accounts.tsx","../../../src/defaultDepositHandler.ts","../../../src/gateway.ts","../../../src/fees.ts","../../../src/index.ts","../../../src/arbitrum.ts","../../../src/avalanche.ts","../../../src/fantom.ts","../../../src/goerli.ts","../../../src/polygon.ts","../../../src/bsc.ts","../../../src/ethereum.ts","lib/renJS.ts","state/renState.tsx","components/views/AccountList.tsx","components/controllers/AccountSection.tsx","components/views/Dropdown.tsx","components/views/AssetSelection.tsx","components/views/Spinner.tsx","components/views/TokenSelection.tsx","components/views/CreateGateway.tsx","components/views/GatewaySummary.tsx","components/views/ViewDepositGateway.tsx","components/controllers/ChainTxHandler.tsx","components/controllers/CurrentGateway.tsx","components/controllers/GatewaySection.tsx","components/views/GatewayTx.tsx","components/controllers/GatewayTxController.tsx","components/views/GatewayTxList.tsx","components/controllers/TransactionsSection.tsx","components/controllers/App.tsx","index.tsx","../../../src/gatewayTransaction.ts","../../../../src/APIs/sochain.ts","../../../../src/APIs/blockchair.ts"],"names":["hexString","ETHEREUM_ERROR","GatewayRegistryLookup","RenJSError","error","Mint","a","txid","Opcode","this","testnet","LogLevel","RenNetwork","TxStatus","asset","PackPrimitive","EVMParam","value","abi","NETWORK","process","REACT_APP_NETWORK","Testnet","Accounts","get","Goerli","Ethereum","getEVMChain","ChainClass","network","config","configMap","Error","name","rpcUrl","rpcUrls","url","match","replace","chain","provider","providers","JsonRpcProvider","connectionRequired","accounts","createGateway","renJS","newGatewayState","chains","from","to","BinanceSmartChain","Polygon","Avalanche","Arbitrum","Fantom","Bitcoin","Account","amount","convertToWei","GatewayAddress","toAddress","Address","gateway","RenState","createContainer","useState","RenJS","ethereum","binanceSmartChain","polygon","avalanche","fantom","arbitrum","bitcoin","defaultChains","setChains","key","initialValue","item","window","localStorage","getItem","JSON","parse","console","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","localTxs","setLocalTxs","localTxsLoaded","setLocalTxsLoaded","loadingLocalTxs","setLoadingLocalTxs","transactions","setTransactions","injectedWeb3","setInjectedWeb3","injectedWeb3Address","setInjectedWeb3Address","addTransaction","useCallback","tx","txs","toLowerCase","hash","params","done","timestamp","Date","now","transactionDoneCallback","useEffect","withChains","Object","values","map","connect","address","chainObject","withProvider","setInjectedWeb3AndConnect","signer","ethers","Web3Provider","getSigner","getAddress","toLoad","length","Promise","allSettled","List","sortBy","gatewayTransaction","toArray","then","results","forEach","result","status","finally","AccountList","web3Account","connectWeb3Account","className","target","rel","href","onClick","AccountSection","useContainer","connectWeb3","detectEthereumProvider","enable","Asset","classNames","classes","filter","Boolean","join","Dropdown","option","validOptions","onSelectOption","onCancelOption","as","Button","disabled","label","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","validOption","Item","active","AssetSelection","undefined","Spinner","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","TokenSelection","CreateGateway","connectFrom","assets","createGatewayParams","validFromOptions","validToOptions","updateCreateGatewayParams","handleCreateGateway","connectingFrom","setConnectingFrom","connectingFromError","setConnectingFromError","creatingGateway","setCreatingGateway","errorCreatingGateway","setErrorCreatingGateway","connectedFrom","setConnectedFrom","onSelectAssetOption","onSelectFromOption","onSelectToOption","onCancelAssetOption","onCancelFromOption","onCancelToOption","onConnectFrom","onAmountChange","e","onToAddressChange","onCreateGateway","toAddressRequired","type","onChange","String","message","GatewaySummary","fromAsset","fromChain","toAsset","toChain","conversion","ViewDepositGateway","gatewayAddress","ChainTxHandler","autoSubmit","onDone","submitting","setSubmitting","waiting","setWaiting","errorSubmitting","setErrorSubmitting","errorWaiting","setErrorWaiting","wrongNetwork","setWrongNetwork","switchedNetwork","setSwitchedNetwork","confirmations","setConfirmations","wait","on","submit","ChainTransactionStatus","Ready","txConfig","gasLimit","catch","calledWait","setCalledWait","BigNumber","request","method","toNumber","chainId","switchNetwork","gatewayTarget","isDefined","Done","Reverted","revertReason","response","txStatus","CurrentGateway","setDone","approved","setApproved","transactionDetected","setTransactionDetected","balance","setBalance","outputAmount","setOutputAmount","minimumAmount","setMinimumAmount","assetDecimals","decimals","getBalance","shiftedBy","toFixed","fees","estimateOutput","onGatewayDone","onApprovalDone","setup","approval","isZero","in","mintChains","Chains","reduce","acc","lockChain","mintChain","includes","fromOptions","assetOrigin","toOptions","GatewaySection","currentGateway","setCurrentGateway","eventEmitter","removeListener","setCreateGatewayParams","setValidFromOptions","setValidToOptions","newParams","newFromOptions","x","newToOptions","GatewayTx","txHash","inTxDone","inTx","renVMDone","renVM","outTxDone","outTx","onInDone","onRenVMDone","onOutDone","transaction","transactionExplorerLink","txidFormatted","GatewayTxController","inDone","setInDone","setRenVMDone","outDone","setOutDone","out","GatewayTxList","TransactionsSection","App","ReactDOM","render","StrictMode","Provider","document","getElementById","SoChainNetwork","SoChain","BlockchairNetwork"],"mappings":"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","file":"static/js/main.5abccd37.chunk.js","sourcesContent":["import { assert, assertType } from \"./assert\";\nimport { doesntError } from \"./common\";\n/**\n * Remove 0x prefix from a hex string. If the input doesn't have a 0x prefix,\n * it's returned unchanged.\n *\n * @param hex The hex value to be prefixed.\n */\nexport const strip0x = (hex) => {\n    // Type validation\n    assertType(\"string\", { hex });\n    return hex.substring(0, 2) === \"0x\" ? hex.slice(2) : hex;\n};\n/**\n * Add a 0x prefix to a hex value, converting to a string first. If the input\n * is already prefixed, it's returned unchanged.\n *\n * @param hex The hex value to be prefixed.\n */\nexport const Ox = (hex, { prefix } = { prefix: \"0x\" }) => {\n    let hexString = typeof hex === \"number\"\n        ? hex.toString(16)\n        : typeof hex === \"string\"\n            ? hex\n            : hex.toString(\"hex\");\n    if (hexString.length % 2 === 1) {\n        hexString = \"0\" + hexString;\n    }\n    return hexString.substring(0, 2) === prefix\n        ? hexString\n        : `${prefix}${hexString}`;\n};\n/**\n * Convert a hex string to a Buffer.\n */\nexport const fromHex = (hex) => {\n    assertType(\"string\", { hex });\n    return Buffer.from(strip0x(hex), \"hex\");\n};\n/**\n * Convert a base64 string to a Buffer.\n */\nexport const fromBase64 = (base64) => {\n    assertType(\"string\", {\n        base64,\n    });\n    return Buffer.from(base64, \"base64\");\n};\n/**\n * Unpadded alternate base64 encoding defined in RFC 4648, commonly used in\n * URLs.\n */\nexport const toURLBase64 = (input) => {\n    assertType(\"Buffer\", {\n        input,\n    });\n    return (Buffer.isBuffer(input) ? Buffer.from(input) : fromHex(input))\n        .toString(\"base64\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=+$/, \"\");\n};\nexport const isBase64 = doesntError((input, options = {}) => {\n    const buffer = Buffer.from(input, \"base64\");\n    assert(options.length === undefined || buffer.length === options.length, `Expected ${String(options.length)} bytes.`);\n    assert(buffer.toString(\"base64\") === input);\n});\nexport const isURLBase64 = doesntError((input, options = {}) => {\n    const buffer = Buffer.from(input, \"base64\");\n    assert(options.length === undefined || buffer.length === options.length, `Expected ${String(options.length)} bytes.`);\n    assert(toURLBase64(buffer) === input);\n});\nexport const isHex = doesntError((input, options = {}) => {\n    if (options.prefix) {\n        assert(input.slice(0, 2) === \"0x\");\n        input = input.slice(2);\n    }\n    const buffer = Buffer.from(input, \"hex\");\n    assert(options.length === undefined || buffer.length === options.length, `Expected ${String(options.length)} bytes.`);\n    assert(buffer.toString(\"hex\") === input);\n});\n//# sourceMappingURL=encodings.js.map","export var ETHEREUM_ERROR;\n(function (ETHEREUM_ERROR) {\n    ETHEREUM_ERROR[\"ASSET_NOT_SUPPORTED\"] = \"ASSET_NOT_SUPPORTED\";\n    ETHEREUM_ERROR[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n})(ETHEREUM_ERROR || (ETHEREUM_ERROR = {}));\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ErrorWithCode, Ox } from \"@renproject/utils\";\nimport { getGatewayRegistryInstance } from \"../contracts\";\nimport { ETHEREUM_ERROR } from \"./errors\";\n/**\n * Utilities for fetching gateway contract addresses and token addresses.\n */\n/** The equivalent to `address(0x0)` in Solidity. */\nconst EMPTY_ADDRESS = \"0x\" + \"00\".repeat(20);\nvar GatewayRegistryLookup;\n(function (GatewayRegistryLookup) {\n    GatewayRegistryLookup[\"MintGateway\"] = \"Mint Gateway\";\n    GatewayRegistryLookup[\"LockGateway\"] = \"Lock Gateway\";\n    GatewayRegistryLookup[\"RenAsset\"] = \"Ren Asset\";\n    GatewayRegistryLookup[\"LockAsset\"] = \"Lock Asset\";\n})(GatewayRegistryLookup || (GatewayRegistryLookup = {}));\nconst gatewayRegistryMethods = {\n    [GatewayRegistryLookup.MintGateway]: \"getMintGatewayBySymbol\",\n    [GatewayRegistryLookup.LockGateway]: \"getLockGatewayBySymbol\",\n    [GatewayRegistryLookup.RenAsset]: \"getRenAssetBySymbol\",\n    [GatewayRegistryLookup.LockAsset]: \"getLockAssetBySymbol\",\n};\nconst createGatewayRegistryFetcher = (lookup) => (network, provider, asset) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const registry = getGatewayRegistryInstance(provider, network.addresses.GatewayRegistry);\n        const registryAddress = Ox(yield registry[gatewayRegistryMethods[lookup]](asset));\n        if (!registryAddress || registryAddress === EMPTY_ADDRESS) {\n            throw new ErrorWithCode(`${asset} not supported on ${network.selector} - unable to get ${asset} ${lookup}`, ETHEREUM_ERROR.ASSET_NOT_SUPPORTED);\n        }\n        return registryAddress;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            error.message = `Error looking up ${asset} ${lookup}${error.message ? `: ${String(error.message)}` : \".\"}`;\n            error.code = ETHEREUM_ERROR.NETWORK_ERROR;\n        }\n        throw error;\n    }\n});\nexport const getMintGateway = createGatewayRegistryFetcher(GatewayRegistryLookup.MintGateway);\nexport const getLockGateway = createGatewayRegistryFetcher(GatewayRegistryLookup.LockGateway);\nexport const getRenAsset = createGatewayRegistryFetcher(GatewayRegistryLookup.RenAsset);\nexport const getLockAsset = createGatewayRegistryFetcher(GatewayRegistryLookup.LockAsset);\n//# sourceMappingURL=gatewayRegistry.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport https from \"https\";\nimport { isDefined } from \"@renproject/utils\";\nimport { DEFAULT_TIMEOUT, fixUTXO, fixValue, sortUTXOs, } from \"./API\";\nexport class Blockbook {\n    constructor(url) {\n        this.fetchHeight = () => __awaiter(this, void 0, void 0, function* () {\n            return (yield axios.get(`${this.url}`, {\n                timeout: DEFAULT_TIMEOUT,\n            })).data.bestHeight.toString();\n        });\n        this.fetchUTXOs = (address) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/utxo/${address}`;\n            const response = yield axios.get(url, {\n                // TODO: Remove when certificate is fixed.\n                httpsAgent: new https.Agent({\n                    rejectUnauthorized: false,\n                }),\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const data = typeof response.data === \"string\"\n                ? JSON.parse(response.data)\n                : response.data;\n            return (yield Promise.all(data\n                .map((utxo) => ({\n                txid: utxo.txid,\n                amount: isDefined(utxo.satoshis)\n                    ? utxo.satoshis.toString()\n                    : isDefined(utxo.amount)\n                        ? fixValue(utxo.amount, 8).toFixed()\n                        : undefined,\n                txindex: utxo.vout.toString(),\n                height: utxo.height && utxo.height > 0\n                    ? utxo.height.toString()\n                    : null,\n            }))\n                // If the amount is undefined, fetch the UTXO again.\n                // This is due to the Digibyte explorer not returning\n                // amounts correctly when fetching UTXOs.\n                .map((utxo) => isDefined(utxo.amount)\n                ? utxo\n                : this.fetchUTXO(utxo.txid, utxo.txindex)))).sort(sortUTXOs);\n        });\n        // fetchTXs = async (address: string): Promise<Array<{ tx: InputChainTransaction, height: string }>> => {\n        //     const url = `${this.url}/txs/?address=${address}`;\n        //     const response = await axios.get<FetchTXsResult>(url, {\n        //         // TODO: Remove when certificate is fixed.\n        //         httpsAgent: new https.Agent({\n        //             rejectUnauthorized: false,\n        //         }),\n        //         timeout: DEFAULT_TIMEOUT,\n        //     });\n        //     const data: FetchTXsResult =\n        //         typeof response.data === \"string\"\n        //             ? JSON.parse(response.data)\n        //             : response.data;\n        //     const received: Array<{ tx: InputChainTransaction, height: number | null }> = [];\n        //     for (const tx of data.txs) {\n        //         for (let i = 0; i < tx.vout.length; i++) {\n        //             const vout = tx.vout[i];\n        //             if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n        //                 received.push({\n        //                     txid: tx.txid,\n        //                     amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n        //                     txindex: i.toString(),\n        //                     height: tx.blockheight\n        //                         ? tx.blockheight\n        //                         : null,\n        //                 });\n        //             }\n        //         }\n        //     }\n        //     return received.sort(sortUTXOs);\n        // };\n        this.fetchUTXO = (txid, txindex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/tx/${txid}`;\n            const tx = (yield axios.get(url, { timeout: DEFAULT_TIMEOUT })).data;\n            return fixUTXO({\n                txid,\n                amount: tx.vout[parseInt(txindex, 10)].value.toString(),\n                txindex,\n                height: tx.blockheight && tx.blockheight > 0\n                    ? tx.blockheight.toString()\n                    : null,\n            }, 8);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/tx/send`;\n            const response = yield axios.post(url, { rawtx: txHex }, { timeout: DEFAULT_TIMEOUT });\n            if (response.data.error) {\n                throw new Error(response.data.error);\n            }\n            return response.data.txid;\n        });\n        this.url = url.replace(/\\/$/, \"\");\n    }\n}\n//# sourceMappingURL=blockbook.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Contract } from \"ethers\";\nimport { Logger } from \"ethers/lib/utils\";\nimport { ChainTransactionStatus, eventEmitter, isDefined, isErrorWithCode, newPromiEvent, } from \"@renproject/utils\";\nimport { txHashToChainTransaction } from \"./generic\";\n/** Fix numeric values in the transaction config. */\nexport const fixEvmTransactionConfig = (...txConfigs) => {\n    let result = {};\n    for (const txConfig of txConfigs) {\n        result = Object.assign(Object.assign({}, result), txConfig);\n        if (isDefined(result.value)) {\n            result.value = result.value.toString();\n        }\n        if (isDefined(result.gasPrice)) {\n            result.gasPrice = result.gasPrice.toString();\n        }\n    }\n    return result;\n};\n/**\n * Call a method on an EVM contract from the provided signer.\n *\n * @param signer An Ethers signer to make the call from.\n * @param to The EVM contract's address.\n * @param abi The ABI of the method being called.\n * @param params The parameters for the method, as defined by the ABI.\n * @param txConfig Optional EVM transaction config.\n * @returns An unconfirmed transaction response.\n */\nexport const callContract = (signer, to, abi, params, txConfig) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!abi.name) {\n        throw new Error(`ABI must include method name.`);\n    }\n    const contract = new Contract(to, [abi], signer);\n    return yield contract[abi.name](...params, fixEvmTransactionConfig(txConfig));\n});\n/**\n * EVMTxSubmitter handles submitting and waiting for EVM transactions.\n */\nexport class EVMTxSubmitter {\n    constructor({ network, signer, chain, payload, target, getPayloadHandler, getParams, onReceipt, findExistingTransaction, }) {\n        this.network = network;\n        this.signer = signer;\n        this.chain = chain;\n        this.payload = payload;\n        this.target = target;\n        this.getPayloadHandler = getPayloadHandler;\n        this.getParams = getParams;\n        this.onReceipt = onReceipt;\n        this.findExistingTransaction = findExistingTransaction;\n        this.eventEmitter = eventEmitter();\n        this.status = {\n            chain,\n            status: ChainTransactionStatus.Ready,\n            confirmations: 0,\n            target: 0,\n        };\n    }\n    updateStatus(status) {\n        this.status = Object.assign(Object.assign({}, this.status), status);\n        this.eventEmitter.emit(\"status\", this.status);\n        return this.status;\n    }\n    submit(options = {}) {\n        const promiEvent = newPromiEvent(this.eventEmitter);\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.findExistingTransaction && this.signer.provider) {\n                const existingTransaction = yield this.findExistingTransaction();\n                if (existingTransaction) {\n                    if (existingTransaction.txidFormatted === \"\") {\n                        this.updateStatus({\n                            status: ChainTransactionStatus.Done,\n                            target: this.target,\n                            confirmations: this.target,\n                        });\n                        return this.status;\n                    }\n                    this.tx = yield this.signer.provider.getTransaction(existingTransaction.txidFormatted);\n                }\n            }\n            this.tx = yield this.getPayloadHandler(this.payload.type).submit(this.network, this.signer, this.payload, this.getParams(), options, this.getPayloadHandler);\n            this.updateStatus({\n                status: ChainTransactionStatus.Confirming,\n                transaction: txHashToChainTransaction(this.chain, this.tx.hash),\n                target: this.target,\n                confirmations: this.tx.confirmations,\n            });\n            return this.status;\n        }))()\n            .then(promiEvent.resolve)\n            .catch(promiEvent.reject);\n        return promiEvent;\n    }\n    wait(target) {\n        const promiEvent = newPromiEvent(this.eventEmitter);\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.status.status === ChainTransactionStatus.Ready) {\n                throw new Error(`Must call \".submit\" first.`);\n            }\n            target = isDefined(target) ? target : this.target;\n            // Wait for each confirmation until the target is reached.\n            while (this.tx &&\n                (this.tx.confirmations < target || this.onReceipt)) {\n                try {\n                    const receipt = yield this.tx.wait(Math.min(this.tx.confirmations + 1, target));\n                    if (this.onReceipt) {\n                        const onReceipt = this.onReceipt;\n                        this.onReceipt = undefined;\n                        onReceipt(receipt);\n                    }\n                    const existingConfirmations = this.tx.confirmations;\n                    this.tx.confirmations = receipt.confirmations;\n                    if (receipt.confirmations > existingConfirmations) {\n                        this.updateStatus(Object.assign(Object.assign({}, this.status), { status: this.tx.confirmations < this.target\n                                ? ChainTransactionStatus.Confirming\n                                : ChainTransactionStatus.Done, transaction: txHashToChainTransaction(this.chain, this.tx.hash), target: this.target, confirmations: this.tx.confirmations }));\n                    }\n                }\n                catch (error) {\n                    if (isErrorWithCode(error)) {\n                        if (error.code === Logger.errors.TRANSACTION_REPLACED) {\n                            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion,@typescript-eslint/no-explicit-any\n                            const replacement = error\n                                .replacement;\n                            const previousTx = this.tx;\n                            this.tx = replacement;\n                            this.updateStatus({\n                                status: ChainTransactionStatus.Confirming,\n                                transaction: txHashToChainTransaction(this.chain, replacement.hash),\n                                target: target,\n                                confirmations: replacement.confirmations,\n                                replaced: txHashToChainTransaction(this.chain, previousTx.hash),\n                            });\n                            continue;\n                        }\n                        else if (error.code === Logger.errors.CALL_EXCEPTION) {\n                            this.updateStatus({\n                                status: ChainTransactionStatus.Reverted,\n                                transaction: txHashToChainTransaction(this.chain, this.tx.hash),\n                                target: target,\n                                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion,@typescript-eslint/no-explicit-any\n                                confirmations: error.receipt\n                                    .confirmations,\n                                revertReason: error.message,\n                            });\n                            throw error;\n                        }\n                    }\n                    console.error(error);\n                    continue;\n                }\n            }\n            if (this.status.status !== ChainTransactionStatus.Done &&\n                this.tx &&\n                this.tx.confirmations >= this.target) {\n                this.updateStatus({\n                    status: ChainTransactionStatus.Done,\n                });\n            }\n            return this.status;\n        }))()\n            .then(promiEvent.resolve)\n            .catch(promiEvent.reject);\n        return promiEvent;\n    }\n}\n//# sourceMappingURL=evmTxSubmitter.js.map","import { hash160, sha256 } from \"../utils/utils\";\nimport { Opcode } from \"./opcodes\";\nconst checksum = (hash) => sha256(sha256(hash)).slice(0, 4);\nexport class Script {\n    constructor() {\n        this.OP = Opcode;\n        this.script = Buffer.from([]);\n    }\n    addOp(op) {\n        this.script = Buffer.concat([this.script, Buffer.from([op])]);\n        return this;\n    }\n    addData(data) {\n        this.script = Buffer.concat([\n            this.script,\n            Buffer.from([data.length]),\n            data,\n        ]);\n        return this;\n    }\n    toBuffer() {\n        return this.script;\n    }\n    toScriptHashOut() {\n        return new Script()\n            .addOp(Script.OP.OP_HASH160)\n            .addData(hash160(this.toBuffer()))\n            .addOp(Script.OP.OP_EQUAL)\n            .toBuffer();\n    }\n    toAddress(prefix) {\n        // Hash\n        const hash = hash160(this.toBuffer());\n        // Prepend prefix\n        const hashWithPrefix = Buffer.concat([prefix, hash]);\n        // Append checksum\n        const hashWithChecksum = Buffer.concat([\n            hashWithPrefix,\n            checksum(hashWithPrefix),\n        ]);\n        return hashWithChecksum;\n    }\n}\nScript.OP = Opcode;\n//# sourceMappingURL=script.js.map","export const isEvmNetworkConfig = (renNetwork) => !!renNetwork.addresses;\n//# sourceMappingURL=types.js.map","// RenJS error codes. Chain classes have their own error codes.\nexport var RenJSError;\n(function (RenJSError) {\n    // General errors.\n    RenJSError[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    RenJSError[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    RenJSError[\"PARAMETER_ERROR\"] = \"PARAMETER_ERROR\";\n    RenJSError[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n    RenJSError[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    RenJSError[\"TRANSACTION_NOT_FOUND\"] = \"TRANSACTION_NOT_FOUND\";\n})(RenJSError || (RenJSError = {}));\n/**\n * An ErrorWithCode is an Error instance with an additional `code` field.\n * Because this is a common pattern with various implementations provided\n * by libraries, checking if an Error is an ErrorWithCode should be done using\n * `isErrorWithCode(error)` instead of `error instanceof ErrorWithCode`.\n */\nexport class ErrorWithCode extends Error {\n    /**\n     * @param message An error message, passed on to the Error constructor.\n     * @param code An error code, defined in a standard manner to allow for\n     * easier error handling.\n     */\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\n/**\n * Check if the provided value is an Error instance and has a code field which\n * contains a string.\n */\nexport const isErrorWithCode = (error) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror instanceof Error && typeof error.code === \"string\";\n/**\n * Add an error code to an existing Error instance.\n */\nexport const withCode = (error, code) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error.code = code;\n    return error;\n};\nconst hasOwnProperty = (\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nobject, property) => object.hasOwnProperty(property);\nconst invalidError = (errorMessage) => errorMessage === \"\" ||\n    errorMessage === \"null\" ||\n    errorMessage === \"undefined\";\n/**\n * Attempt to extract a more meaningful error from a thrown error, such as\n * the body of a network response.\n */\nexport const extractError = (error) => {\n    if (error && typeof error === \"object\") {\n        if (hasOwnProperty(error, \"response\") && error.response) {\n            const extractedError = extractError(error.response);\n            if (!invalidError(extractedError)) {\n                return extractedError;\n            }\n        }\n        if (hasOwnProperty(error, \"data\") && error.data) {\n            const extractedError = extractError(error.data);\n            if (!invalidError(extractedError)) {\n                return extractedError;\n            }\n        }\n        if (hasOwnProperty(error, \"error\") && error.error) {\n            const extractedError = extractError(error.error);\n            if (!invalidError(extractedError)) {\n                return extractedError;\n            }\n        }\n        if (hasOwnProperty(error, \"context\") && error.context) {\n            const extractedError = extractError(error.context);\n            if (!invalidError(extractedError)) {\n                return extractedError;\n            }\n        }\n        if (hasOwnProperty(error, \"message\") && error.message) {\n            const extractedError = extractError(error.message);\n            if (!invalidError(extractedError)) {\n                return extractedError;\n            }\n        }\n        if (hasOwnProperty(error, \"statusText\") && error.statusText) {\n            const extractedError = extractError(error.statusText);\n            if (!invalidError(extractedError)) {\n                return extractedError;\n            }\n        }\n    }\n    try {\n        if (typeof error === \"string\") {\n            if (error.slice(0, 7) === \"Error: \") {\n                error = error.slice(7);\n            }\n            return error;\n        }\n        return JSON.stringify(error);\n    }\n    catch (innerError) {\n        // Ignore JSON error\n    }\n    return String(error);\n};\n//# sourceMappingURL=errors.js.map","import BigNumber from \"bignumber.js\";\nimport { toNBytes } from \"../common\";\nimport { fromBase64 } from \"../encodings\";\nimport { isPackListType, isPackStructType, PackPrimitive, } from \"./pack\";\n// === Pack Types ==============================================================\n/**\n * Convert a PackType string to its numeric ID, as defined in the Go reference\n * implementation.\n * (https://github.com/renproject/pack/blob/e0f417fbbd472eccd99e4bf304b19dc04a31a950/kind.go#L19)\n */\nexport const marshalPackType = (type) => {\n    switch (type) {\n        case \"nil\":\n            return 0;\n        // KindBool is the kind of all Bool values.\n        case PackPrimitive.Bool:\n            return 1;\n        // KindU8 is the kind of all U8 values.\n        case PackPrimitive.U8:\n            return 2;\n        // KindU16 is the kind of all U16 values.\n        case PackPrimitive.U16:\n            return 3;\n        // KindU32 is the kind of all U32 values.\n        case PackPrimitive.U32:\n            return 4;\n        // KindU64 is the kind of all U64 values.\n        case PackPrimitive.U64:\n            return 5;\n        // KindU128 is the kind of all U128 values.\n        case PackPrimitive.U128:\n            return 6;\n        // KindU256 is the kind of all U256 values.\n        case PackPrimitive.U256:\n            return 7;\n        // KindString is the kind of all utf8 strings.\n        case PackPrimitive.Str:\n            return 10;\n        // KindBytes is the kind of all dynamic byte arrays.\n        case PackPrimitive.Bytes:\n            return 11;\n        // KindBytes32 is the kind of all 32-byte arrays.\n        case PackPrimitive.Bytes32:\n            return 12;\n        // KindBytes65 is the kind of all 65-byte arrays.\n        case PackPrimitive.Bytes65:\n            return 13;\n        // KindStruct is the kind of all struct values. It is abstract, because it does\n        // not specify the fields in the struct.\n        case \"struct\":\n            return 20;\n        // KindList is the kind of all list values. It is abstract, because it does\n        // not specify the type of the elements in the list.\n        case \"list\":\n            return 21;\n    }\n    throw new Error(`Unknown type ${String(type)}.`);\n};\n/**\n * Convert a JavaScript number to a big-endian Buffer of the provided length.\n */\nexport const marshalUint = (value, bits) => {\n    try {\n        return toNBytes(typeof value === \"number\"\n            ? value\n            : BigNumber.isBigNumber(value)\n                ? value.toFixed()\n                : value.toString(), bits / 8);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            error.message = `Unable to marshal uint${bits} '${String(value)}': ${String(error.message)}`;\n        }\n        throw error;\n    }\n};\nconst marshalU = (bits) => (value) => marshalUint(value, bits);\nexport const marshalU8 = marshalU(8);\nexport const marshalU16 = marshalU(16);\nexport const marshalU32 = marshalU(32);\nexport const marshalU64 = marshalU(64);\nexport const marshalU128 = marshalU(128);\nexport const marshalU256 = marshalU(256);\nconst withLength = (value) => Buffer.concat([marshalU32(value.length), value]);\n/**\n * Marshal a string, prefixed by its length.\n */\nexport const marshalString = (value) => withLength(Buffer.from(value));\n/**\n * Marshal a struct type by prefixing the `struct` pack type ID and the number\n * of struct entries, and then each field name followed by the field's\n * marshalled type definition.\n */\nexport const marshalPackStructType = (type) => {\n    const length = marshalU32(type.struct.length);\n    return Buffer.concat([\n        Buffer.from([marshalPackType(\"struct\")]),\n        length,\n        ...type.struct.map((field) => {\n            const keys = Object.keys(field);\n            if (keys.length === 0) {\n                throw new Error(`Invalid struct field with no entries.`);\n            }\n            if (keys.length > 1) {\n                throw new Error(`Invalid struct field with multiple entries.`);\n            }\n            const key = Object.keys(field)[0];\n            const fieldType = field[key];\n            return Buffer.concat([\n                marshalString(key),\n                marshalPackTypeDefinition(fieldType),\n            ]);\n        }),\n    ]);\n};\n/**\n * Marshal a list type by concatenating the `list` pack type ID followed by the\n * marshalled type definition of the list's sub-type.\n */\nexport const marshalPackListType = (type) => Buffer.concat([\n    Buffer.from([marshalPackType(\"list\")]),\n    marshalPackTypeDefinition(type.list),\n]);\n/**\n * Marshal a pack type, as defined above for each type.\n */\nexport const marshalPackTypeDefinition = (type) => {\n    if (isPackStructType(type)) {\n        return marshalPackStructType(type);\n    }\n    else if (isPackListType(type)) {\n        return marshalPackListType(type);\n    }\n    else if (typeof type === \"string\") {\n        return Buffer.from([marshalPackType(type)]);\n    }\n    throw new Error(`Unable to marshal type ${String(type)}.`);\n};\n// === Pack Values =============================================================\n/**\n * Marshal a JavaScript value with an associated pack type into a Buffer.\n */\nexport const marshalPackPrimitive = (type, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue) => {\n    switch (type) {\n        // Booleans\n        case PackPrimitive.Bool:\n            return marshalU8(value ? 1 : 0);\n        // Integers\n        case PackPrimitive.U8:\n            return marshalU8(value);\n        case PackPrimitive.U16:\n            return marshalU16(value);\n        case PackPrimitive.U32:\n            return marshalU32(value);\n        case PackPrimitive.U64:\n            return marshalU64(value);\n        case PackPrimitive.U128:\n            return marshalU128(value);\n        case PackPrimitive.U256:\n            return marshalU256(value);\n        // Strings\n        case PackPrimitive.Str: {\n            return marshalString(value);\n        }\n        // Bytes\n        case PackPrimitive.Bytes: {\n            return withLength(Buffer.isBuffer(value)\n                ? Buffer.from(value)\n                : // Supports base64 url format\n                    fromBase64(value));\n        }\n        case PackPrimitive.Bytes32:\n        case PackPrimitive.Bytes65:\n            return Buffer.isBuffer(value)\n                ? Buffer.from(value)\n                : // Supports base64 url format\n                    fromBase64(value);\n    }\n};\n/**\n * Marshal a pack struct by concatenating the marshalled values of each of the\n * pack's fields.\n */\nexport const marshalPackStruct = (type, value) => Buffer.concat(type.struct.map((member) => {\n    const keys = Object.keys(member);\n    if (keys.length === 0) {\n        throw new Error(`Invalid struct member with no entries.`);\n    }\n    if (keys.length > 1) {\n        throw new Error(`Invalid struct member with multiple entries.`);\n    }\n    if (typeof value !== \"object\") {\n        throw new Error(`Invalid struct value of type \"${typeof value}\".`);\n    }\n    if (value === null) {\n        throw new Error(`Invalid struct value \"null\".`);\n    }\n    const key = Object.keys(member)[0];\n    const memberType = member[key];\n    try {\n        return marshalPackValue(memberType, value[key]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        if (error instanceof Error) {\n            error.message = `Unable to marshal struct field ${key}: ${String(error.message)}`;\n        }\n        throw error;\n    }\n}));\n/**\n * Marshal a pack list by concatenating the marshalled values of each of the\n * list's values.\n */\nexport const marshalListStruct = (type, value) => {\n    const subtype = type.list;\n    return Buffer.concat(value.map((element, i) => {\n        try {\n            return marshalPackValue(subtype, element);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                error.message = `Unable to marshal array element #${i}: ${String(error.message)}`;\n            }\n            throw error;\n        }\n    }));\n};\n/**\n * Marshal a pack value by using the marshalling defined for the provided\n * pack type.\n */\nexport const marshalPackValue = (type, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue) => {\n    if (isPackStructType(type)) {\n        return marshalPackStruct(type, value);\n    }\n    else if (isPackListType(type)) {\n        return marshalListStruct(type, value);\n    }\n    else if (typeof type === \"string\") {\n        if (type === \"nil\")\n            return Buffer.from([]);\n        return marshalPackPrimitive(type, value);\n    }\n    throw new Error(`Unknown value type ${String(type)}${!type ? ` for value ${String(value)}` : \"\"}`);\n};\n/**\n * Marshal a `{ t, v }` pair by concatenating the pack type-marshalling of `t`\n * followed by the pack value-marshalling of `v`.\n */\nexport const marshalTypedPackValue = ({ t, v }) => {\n    const marshalledType = marshalPackTypeDefinition(t);\n    const marshalledValue = marshalPackValue(t, v);\n    return Buffer.concat([marshalledType, marshalledValue]);\n};\n//# sourceMappingURL=marshal.js.map","import { fixSignature, unmarshalTypedPackValue, } from \"@renproject/utils\";\nexport const unmarshalRenVMTransaction = (tx) => {\n    // If the transaction has a signature output, apply standard signature fixes.\n    const out = unmarshalTypedPackValue(tx.out);\n    if (out && out.sig && Buffer.isBuffer(out.sig) && out.sig.length > 0) {\n        out.sig = fixSignature(out.sig);\n    }\n    return {\n        version: parseInt(tx.version),\n        hash: tx.hash,\n        selector: tx.selector,\n        in: unmarshalTypedPackValue(tx.in),\n        out,\n    };\n};\n//# sourceMappingURL=unmarshal.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\n// Default timeout for network requests.\nconst SECONDS = 1000;\nexport const DEFAULT_TIMEOUT = 30 * SECONDS;\n/**\n * sortUTXOs compares two UTXOs by height, then amount, then txid, then txindex.\n *\n * @returns a negative value to represent that a should come before b or a\n * positive value to represent that b should come before a, or 0 if a and b are\n * equal.\n */\nexport const sortUTXOs = (a, b) => {\n    const aHeight = a.height ? new BigNumber(a.height) : null;\n    const bHeight = b.height ? new BigNumber(b.height) : null;\n    // Compare heights first\n    if (aHeight) {\n        if (bHeight) {\n            if (!aHeight.isEqualTo(bHeight))\n                return bHeight.minus(aHeight).toNumber();\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (bHeight) {\n        return 1;\n    }\n    // If the heights are the same (same number of both null), compare amounts.\n    const aAmount = new BigNumber(a.amount);\n    const bAmount = new BigNumber(b.amount);\n    if (aAmount.isEqualTo(bAmount)) {\n        return bAmount.minus(aAmount).toNumber();\n    }\n    // If the heights and amounts are equal, compare txid.\n    if (a.txid !== b.txid) {\n        return a.txid <= b.txid ? -1 : 1;\n    }\n    // Fall back to the txindex. If the txid and txindex are the same for both\n    // transactions, then the two transactions represent the same transfer, and\n    // the returned value is `0`.\n    const aTxindex = new BigNumber(a.txindex);\n    const bTxindex = new BigNumber(b.txindex);\n    return bTxindex.minus(aTxindex).toNumber();\n};\n/**\n * fixValue turns a readable value, e.g. `0.0001` BTC, to the value in the smallest\n * unit, e.g. `10000` sats.\n *\n * @example\n * fixValue(0.0001, 8) = 10000;\n * @param value Value in the readable representation, e.g. `0.0001` BTC.\n * @param decimals The number of decimals to shift by, e.g. 8.\n */\nexport const fixValue = (value, decimals) => new BigNumber(value).shiftedBy(decimals).decimalPlaces(0);\n/**\n * fixUTXO calls {{fixValue}} on the value of the UTXO.\n */\nexport const fixUTXO = (tx, decimals) => (Object.assign(Object.assign({}, tx), { amount: fixValue(tx.amount, decimals).toFixed() }));\n/**\n * fixUTXOs maps over an array of UTXOs and calls {{fixValue}}.\n */\nexport const fixUTXOs = (utxos, decimals) => utxos.map((utxo) => fixUTXO(utxo, decimals));\nconst notNull = (x) => {\n    if (x === undefined || x === null) {\n        throw new Error(`Unexpected ${String(x)} value.`);\n    }\n    return x;\n};\nconst withPriority = (api, defaultPriority = 0) => api.api &&\n    api.priority !== undefined\n    ? api\n    : { api: api, priority: defaultPriority };\nexport class CombinedAPI {\n    constructor(apis = [], { priority = 0 } = {}) {\n        this.fetchUTXOs = (address, confirmations) => __awaiter(this, void 0, void 0, function* () {\n            return this.forEachAPI(\n            // Filter APIs with `fetchUTXOs`.\n            (api) => api.fetchUTXOs !== undefined, \n            // Call `fetchUTXOs` on the API.\n            (api) => __awaiter(this, void 0, void 0, function* () { return notNull(api.fetchUTXOs)(address, confirmations); }));\n        });\n        this.fetchTXs = (address, confirmations) => __awaiter(this, void 0, void 0, function* () {\n            return this.forEachAPI(\n            // Filter APIs with `fetchTXs`.\n            (api) => api.fetchTXs !== undefined, \n            // Call `fetchTXs` on the API.\n            (api) => __awaiter(this, void 0, void 0, function* () { return notNull(api.fetchTXs)(address, confirmations); }));\n        });\n        this.forEachAPI = (filter, onAPI) => __awaiter(this, void 0, void 0, function* () {\n            const apis = this.apis\n                .map((api, index) => ({ api, index }))\n                .filter(({ api }) => filter(api.api))\n                .sort(({ api: a }, { api: b }) => \n            // Sort by priority, and randomly for the same priority.\n            a.priority !== b.priority\n                ? a.priority - b.priority\n                : Math.random() * 2 - 1);\n            if (!apis.length) {\n                throw new Error(`No API available for call.`);\n            }\n            let firstError;\n            const previousIndices = [];\n            for (const { api, index } of apis) {\n                try {\n                    const result = yield onAPI(api.api);\n                    // If any previous API failed, it may be down or rate limited,\n                    // so its priority is reduced.\n                    for (const previousIndex of previousIndices) {\n                        this.apis[previousIndex].priority -= 5;\n                    }\n                    return result;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    previousIndices.push(index);\n                    firstError = firstError || error;\n                }\n            }\n            throw firstError;\n        });\n        this.apis = apis.map((api) => withPriority(api, priority));\n    }\n    /**\n     * Provide a new API to be used with the other APIs.\n     *\n     * @param api\n     * @param { priority } Optionally set the priority of the API, where a lower\n     * priority means it will be selected before other APIs.\n     */\n    withAPI(api, { priority = 0 } = {}) {\n        this.apis.push(withPriority(api, priority));\n        return this;\n    }\n    fetchHeight() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.forEachAPI(\n            // Filter APIs with `fetchHeight`.\n            (api) => api.fetchHeight !== undefined, \n            // Call `fetchHeight` on the API.\n            (api) => __awaiter(this, void 0, void 0, function* () { return notNull(api.fetchHeight)(); }));\n        });\n    }\n    fetchUTXO(txid, txindex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.forEachAPI(\n            // Filter APIs with `fetchUTXO`.\n            (api) => api.fetchUTXO !== undefined, \n            // Call `fetchUTXO` on the API.\n            (api) => __awaiter(this, void 0, void 0, function* () { return notNull(api.fetchUTXO)(txid, txindex); }));\n        });\n    }\n    broadcastTransaction(hex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.forEachAPI(\n            // Filter APIs with `broadcastTransaction`.\n            (api) => api.broadcastTransaction !== undefined, \n            // Call `broadcastTransaction` on the API.\n            (api) => __awaiter(this, void 0, void 0, function* () { return notNull(api.broadcastTransaction)(hex); }));\n        });\n    }\n}\n//# sourceMappingURL=API.js.map","import { LogLevel, nullLogger, SECONDS } from \"@renproject/utils\";\nexport { LogLevel } from \"@renproject/utils\";\nexport const defaultRenJSConfig = {\n    logLevel: LogLevel.Debug,\n    logger: nullLogger,\n    networkDelay: 15 * SECONDS,\n    // loadCompletedDeposits: false as boolean,\n};\n// Check that defaultRenJSConfig is a valid RenJSConfig object, while\n// still allowing typescript to infer its type from is value.\n// Therefore it knows that `defaultRenJSConfig.logger` is not potentially\n// undefined.\nconst _check = defaultRenJSConfig;\n//# sourceMappingURL=config.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InputType, isContractChain, OutputType, RenJSError, withCode, } from \"@renproject/utils\";\n/**\n * Detect whether the transaction is a lock-and-mint, burn-and-release or\n * burn-and-mint.\n */\nexport const getInputAndOutputTypes = ({ asset, fromChain, toChain, }) => __awaiter(void 0, void 0, void 0, function* () {\n    if (yield toChain.isLockAsset(asset)) {\n        if (!isContractChain(fromChain)) {\n            throw withCode(new Error(`Cannot burn from non-contract chain ${fromChain.chain}.`), RenJSError.PARAMETER_ERROR);\n        }\n        if (!(yield fromChain.isMintAsset(asset))) {\n            throw withCode(new Error(`Asset '${asset}' is not supported on ${fromChain.chain}.`), RenJSError.PARAMETER_ERROR);\n        }\n        return {\n            inputType: InputType.Burn,\n            outputType: OutputType.Release,\n            selector: `${asset}/from${fromChain.chain}`,\n        };\n    }\n    else if (yield fromChain.isLockAsset(asset)) {\n        if (!isContractChain(toChain)) {\n            throw withCode(new Error(`Cannot mint to non-contract chain ${toChain.chain}.`), RenJSError.PARAMETER_ERROR);\n        }\n        if (!(yield toChain.isMintAsset(asset))) {\n            throw withCode(new Error(`Asset '${asset}' is not supported on ${toChain.chain}.`), RenJSError.PARAMETER_ERROR);\n        }\n        return {\n            inputType: InputType.Lock,\n            outputType: OutputType.Mint,\n            selector: `${asset}/to${toChain.chain}`,\n        };\n    }\n    else {\n        throw withCode(new Error(`Burning and minting is not supported yet.`), RenJSError.NOT_IMPLEMENTED);\n        // if (!isContractChain(toChain)) {\n        //     throw withCode(\n        //         new Error(\n        //             `Cannot mint to non-contract chain ${toChain.chain}.`,\n        //         ),\n        //         RenJSError.PARAMETER_ERROR,\n        //     );\n        // }\n        // if (!(await toChain.isMintAsset(asset))) {\n        //     throw withCode(\n        //         new Error(\n        //             `Asset '${asset}' is not supported on ${toChain.chain}.`,\n        //         ),\n        //         RenJSError.PARAMETER_ERROR,\n        //     );\n        // }\n        // if (!isContractChain(fromChain)) {\n        //     throw withCode(\n        //         new Error(\n        //             `Cannot burn from non-contract chain ${fromChain.chain}.`,\n        //         ),\n        //         RenJSError.PARAMETER_ERROR,\n        //     );\n        // }\n        // if (!(await fromChain.isMintAsset(asset))) {\n        //     throw withCode(\n        //         new Error(\n        //             `Asset '${asset}' is not supported on ${fromChain.chain}.`,\n        //         ),\n        //         RenJSError.PARAMETER_ERROR,\n        //     );\n        // }\n        // return {\n        //     inputType: InputType.Burn,\n        //     outputType: OutputType.Mint,\n        //     selector: `${asset}/from${fromChain.chain}To${toChain.chain}`,\n        // };\n    }\n});\n//# sourceMappingURL=inputAndOutputTypes.js.map","import { PackPrimitive, } from \"@renproject/utils\";\nexport * from \"./ren_queryBlockState\";\nexport var RPCMethod;\n(function (RPCMethod) {\n    // MethodSubmitGateway submits the details of a gateway to the lightnode,\n    // used for recovering mints that didn't get submitted to RenVM.\n    RPCMethod[\"SubmitGateway\"] = \"ren_submitGateway\";\n    // MethodSubmitTx submits a new transaction to the Darknode for acceptance\n    // into the transaction pool.\n    RPCMethod[\"SubmitTx\"] = \"ren_submitTx\";\n    // MethodQueryTx returns the latest information about a transaction\n    // identified by a transaction hash.\n    RPCMethod[\"QueryTx\"] = \"ren_queryTx\";\n    // MethodQueryTxs returns pages of transactions with optional filtering by\n    // status and tags.\n    RPCMethod[\"QueryTxs\"] = \"ren_queryTxs\";\n    // MethodQueryBlock returns a block identified by the block height.\n    RPCMethod[\"QueryBlock\"] = \"ren_queryBlock\";\n    // MethodQueryBlocks returns recently committed blocks.\n    RPCMethod[\"QueryBlocks\"] = \"ren_queryBlocks\";\n    // MethodQueryConfig returns the node configuration.\n    RPCMethod[\"QueryConfig\"] = \"ren_queryConfig\";\n    // MethodQueryState returns the contract state.\n    RPCMethod[\"QueryState\"] = \"ren_queryState\";\n    // MethodQueryBlockState returns the contract state.\n    RPCMethod[\"QueryBlockState\"] = \"ren_queryBlockState\";\n})(RPCMethod || (RPCMethod = {}));\nexport const burnParamsType = {\n    struct: [\n        {\n            amount: PackPrimitive.U256,\n        },\n        {\n            to: PackPrimitive.Str,\n        },\n        {\n            nonce: PackPrimitive.Bytes32,\n        },\n    ],\n};\nexport const crossChainParamsType = {\n    struct: [\n        {\n            txid: PackPrimitive.Bytes,\n        },\n        {\n            txindex: PackPrimitive.U32,\n        },\n        {\n            amount: PackPrimitive.U256,\n        },\n        {\n            payload: PackPrimitive.Bytes,\n        },\n        {\n            phash: PackPrimitive.Bytes32,\n        },\n        {\n            to: PackPrimitive.Str,\n        },\n        {\n            nonce: PackPrimitive.Bytes32,\n        },\n        {\n            nhash: PackPrimitive.Bytes32,\n        },\n        {\n            gpubkey: PackPrimitive.Bytes,\n        },\n        {\n            ghash: PackPrimitive.Bytes32,\n        },\n    ],\n};\nexport const submitGatewayType = {\n    struct: [\n        {\n            payload: PackPrimitive.Bytes,\n        },\n        {\n            phash: PackPrimitive.Bytes32,\n        },\n        {\n            to: PackPrimitive.Str,\n        },\n        {\n            nonce: PackPrimitive.Bytes32,\n        },\n        {\n            nhash: PackPrimitive.Bytes32,\n        },\n        {\n            gpubkey: PackPrimitive.Bytes,\n        },\n        {\n            ghash: PackPrimitive.Bytes32,\n        },\n    ],\n};\n// The following lines will throw a type error if RenVMResponses or RenVMParams\n// aren't defined for all RPC methods.\n() => { };\n() => { };\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { extractError, LogLevel, nullLogger, SECONDS, tryNTimes, } from \"@renproject/utils\";\nconst generatePayload = (method, params) => ({\n    id: 1,\n    jsonrpc: \"2.0\",\n    method,\n    params,\n});\nexport class HttpProvider {\n    /**\n     * Create a new HttpProvider.\n     *\n     * @param endpointOrProvider A URI for a RenVM JSON-RPC endpoint, or another\n     * HttpProvider to forward calls to.\n     * @param logger Optionally pass a logger object.\n     */\n    constructor(endpointOrProvider, logger = nullLogger) {\n        this.sendMessage = (method, request, retry = 2, timeout = 120 * SECONDS) => __awaiter(this, void 0, void 0, function* () {\n            const endpoint = this.endpointOrProvider;\n            if (typeof endpoint !== \"string\") {\n                return endpoint.sendMessage(method, request, retry, timeout);\n            }\n            const payload = generatePayload(method, request);\n            if (\n            // Check level before doing expensive JSON call.\n            this.logger.getLevel &&\n                this.logger.getLevel() <= LogLevel.Debug) {\n                this.logger.debug(\"[request]\", JSON.stringify(payload, null, \"    \"));\n            }\n            try {\n                const response = yield tryNTimes(() => __awaiter(this, void 0, void 0, function* () {\n                    return axios.post(endpoint, payload, \n                    // Use a 120 second timeout. This could be reduced, but\n                    // should be done based on the method, since some requests\n                    // may take a long time, especially on a slow connection.\n                    { timeout });\n                }), retry, 1 * SECONDS);\n                if (response.status !== 200) {\n                    throw this.responseError(`Unexpected status code ${String(response.status)} returned from node.`, response);\n                }\n                if (response.data.error) {\n                    throw new Error(response.data.error);\n                }\n                if (response.data.result === undefined) {\n                    throw new Error(`Empty result returned from node.`);\n                }\n                if (this.logger.getLevel &&\n                    this.logger.getLevel() <= LogLevel.Debug) {\n                    this.logger.debug(\"[response]\", JSON.stringify(response.data.result, null, \"    \"));\n                }\n                return response.data.result;\n            }\n            catch (error) {\n                // Re-throw error to avoid internal axios stack-trace.\n                throw new Error(extractError(error));\n            }\n        });\n        this.responseError = (msg, response) => {\n            const error = new Error(msg);\n            error.response = response;\n            return error;\n        };\n        this.logger = logger;\n        if (typeof endpointOrProvider === \"string\" &&\n            endpointOrProvider.indexOf(\"://\") === -1) {\n            throw new Error(`Invalid node URL without protocol: ${endpointOrProvider}.`);\n        }\n        this.endpointOrProvider = endpointOrProvider;\n    }\n}\n//# sourceMappingURL=jsonRpc.js.map","import { RenNetwork } from \"@renproject/utils\";\nexport const renRpcUrls = {\n    [RenNetwork.Mainnet]: \"https://lightnode-mainnet.herokuapp.com\",\n    [RenNetwork.Testnet]: \"https://lightnode-testnet.herokuapp.com\",\n    [RenNetwork.Devnet]: \"https://lightnode-devnet.herokuapp.com/\",\n};\n//# sourceMappingURL=rpcUrls.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertType, memoize, nullLogger, RenJSError, toURLBase64, unmarshalTypedPackValue, withCode, } from \"@renproject/utils\";\nimport { RPCMethod, submitGatewayType, } from \"./methods\";\nimport { HttpProvider } from \"./rpc/jsonRpc\";\nimport { renRpcUrls } from \"./rpcUrls\";\nimport { unmarshalRenVMTransaction, } from \"./unmarshal\";\nexport class RenVMProvider extends HttpProvider {\n    constructor(endpointOrProvider, logger = nullLogger) {\n        super(\n        // Check if the first parameter is a provider to forward calls to.\n        typeof endpointOrProvider !== \"string\"\n            ? endpointOrProvider\n            : renRpcUrls[endpointOrProvider] || endpointOrProvider);\n        this.queryBlock = (blockHeight, retry) => __awaiter(this, void 0, void 0, function* () {\n            return (yield this.sendMessage(RPCMethod.QueryBlock, { blockHeight }, retry)).block;\n        });\n        this.queryBlocks = (blockHeight, n, retry) => __awaiter(this, void 0, void 0, function* () {\n            return (yield this.sendMessage(RPCMethod.QueryBlocks, { blockHeight, n }, retry)).blocks;\n        });\n        this.submitGateway = (gateway, tx, retry) => __awaiter(this, void 0, void 0, function* () {\n            return this.sendMessage(RPCMethod.SubmitGateway, { gateway, tx }, retry);\n        });\n        this.submitTx = (tx, retry) => __awaiter(this, void 0, void 0, function* () {\n            return this.sendMessage(RPCMethod.SubmitTx, { tx }, retry);\n        });\n        this.queryTxs = (tags, page, pageSize, txStatus, retry) => __awaiter(this, void 0, void 0, function* () {\n            return (yield this.sendMessage(RPCMethod.QueryTxs, {\n                tags,\n                page: (page || 0).toString(),\n                pageSize: (pageSize || 0).toString(),\n                txStatus,\n            }, retry)).txs.map((tx) => unmarshalRenVMTransaction(tx));\n        });\n        this.queryConfig = (retry) => __awaiter(this, void 0, void 0, function* () {\n            return this.sendMessage(RPCMethod.QueryConfig, {}, retry);\n        });\n        this.queryBlockState = memoize((contract, retry) => __awaiter(this, void 0, void 0, function* () {\n            const { state } = yield this.sendMessage(RPCMethod.QueryBlockState, { contract }, retry);\n            return unmarshalTypedPackValue(state);\n        }));\n        this.submitGatewayDetails = (gateway, params, retries) => __awaiter(this, void 0, void 0, function* () {\n            const { selector, gHash, gPubKey, nHash, nonce, payload, pHash, to } = params;\n            assertType(\"Buffer\", {\n                gHash,\n                gPubKey,\n                nHash,\n                nonce,\n                payload,\n                pHash,\n            });\n            assertType(\"string\", { to });\n            const txIn = {\n                t: submitGatewayType,\n                v: {\n                    ghash: toURLBase64(gHash),\n                    gpubkey: toURLBase64(gPubKey),\n                    nhash: toURLBase64(nHash),\n                    nonce: toURLBase64(nonce),\n                    payload: toURLBase64(payload),\n                    phash: toURLBase64(pHash),\n                    to,\n                },\n            };\n            const tx = {\n                selector: selector,\n                version: \"1\",\n                // TODO: Fix types\n                in: txIn,\n            };\n            yield this.submitGateway(gateway, tx, retries);\n            return gateway;\n        });\n        /**\n         * Queries the result of a RenVM transaction and unmarshals the result into\n         * a [[LockAndMintTransaction]] or [[BurnAndReleaseTransaction]].\n         *\n         * @param txHash The transaction hash in URL-base64.\n         */\n        this.queryTx = (txHash, retries) => __awaiter(this, void 0, void 0, function* () {\n            assertType(\"string\", { txHash });\n            let response;\n            try {\n                response = yield this.sendMessage(RPCMethod.QueryTx, { txHash }, retries);\n            }\n            catch (error) {\n                if (error.message.match(/^invalid params: /)) {\n                    throw withCode(error, RenJSError.PARAMETER_ERROR);\n                }\n                else if (error.message.match(/not found$/)) {\n                    throw withCode(error, RenJSError.TRANSACTION_NOT_FOUND);\n                }\n                else {\n                    throw withCode(error, RenJSError.UNKNOWN_ERROR);\n                }\n            }\n            try {\n                return {\n                    tx: unmarshalRenVMTransaction(response.tx),\n                    txStatus: response.txStatus,\n                };\n            }\n            catch (error) {\n                throw withCode(error, RenJSError.INTERNAL_ERROR);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        });\n        /**\n         * selectShard fetches the public key for the RenVM shard handling\n         * the provided contract.\n         */\n        this.selectShard = (asset) => __awaiter(this, void 0, void 0, function* () {\n            let blockState;\n            try {\n                // Call the ren_queryBlockState RPC.\n                blockState = yield this.queryBlockState(asset, 5);\n            }\n            catch (error) {\n                throw withCode(new Error(`Error fetching RenVM shards: ${String(error.message)}`), RenJSError.NETWORK_ERROR);\n            }\n            if (!blockState[asset]) {\n                throw new Error(`No RenVM block state found for ${asset}.`);\n            }\n            const pubKey = blockState[asset].shards[0].pubKey;\n            if (!pubKey || pubKey.length === 0) {\n                throw new Error(`Unable to fetch RenVM public key for ${asset}.`);\n            }\n            assertType(\"Buffer\", { pubKey });\n            return {\n                gPubKey: toURLBase64(pubKey),\n            };\n        });\n        this.getNetwork = () => __awaiter(this, void 0, void 0, function* () { return (yield this.queryConfig()).network; });\n        this.getConfirmationTarget = (chainName) => __awaiter(this, void 0, void 0, function* () {\n            const renVMConfig = yield this.sendMessage(RPCMethod.QueryConfig, {});\n            return parseInt(renVMConfig.confirmations[chainName], 10);\n        });\n        this.logger = logger;\n    }\n}\n//# sourceMappingURL=provider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport BigNumber from \"bignumber.js\";\nimport https from \"https\";\nimport { isDefined } from \"@renproject/utils\";\nimport { DEFAULT_TIMEOUT, fixUTXO, fixValue, sortUTXOs, } from \"./API\";\nexport class Insight {\n    constructor(url) {\n        this.fetchHeight = () => __awaiter(this, void 0, void 0, function* () {\n            return (yield axios.get(`${this.url}/sync`, {\n                timeout: DEFAULT_TIMEOUT,\n            })).data.height.toString();\n        });\n        this.fetchUTXOs = (address, confirmations = 0) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/addr/${address}/utxo`;\n            const response = yield axios.get(url, {\n                // TODO: Remove when certificate is fixed.\n                httpsAgent: new https.Agent({\n                    rejectUnauthorized: false,\n                }),\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const data = typeof response.data === \"string\"\n                ? JSON.parse(response.data)\n                : response.data;\n            const height = new BigNumber(yield this.fetchHeight());\n            return (yield Promise.all(data\n                .filter((utxo) => confirmations === 0 ||\n                utxo.confirmations >= confirmations)\n                .map((utxo) => ({\n                txid: utxo.txid,\n                txindex: utxo.vout.toString(),\n                amount: isDefined(utxo.satoshis)\n                    ? utxo.satoshis.toString()\n                    : isDefined(utxo.amount)\n                        ? fixValue(utxo.amount, 8).toFixed()\n                        : undefined,\n                height: utxo.confirmations && utxo.confirmations > 0\n                    ? height\n                        .minus(utxo.confirmations)\n                        .plus(1)\n                        .toFixed()\n                    : null,\n            }))\n                // If the amount is undefined, fetch the UTXO again.\n                // This is due to the Digibyte explorer not returning\n                // amounts correctly when fetching UTXOs.\n                .map((utxo) => isDefined(utxo.amount)\n                ? utxo\n                : this.fetchUTXO(utxo.txid, utxo.txindex)))).sort(sortUTXOs);\n        });\n        this.fetchTXs = (address) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/txs/?address=${address}`;\n            const response = yield axios.get(url, {\n                // TODO: Remove when certificate is fixed.\n                httpsAgent: new https.Agent({\n                    rejectUnauthorized: false,\n                }),\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const data = typeof response.data === \"string\"\n                ? JSON.parse(response.data)\n                : response.data;\n            const received = [];\n            for (const tx of data.txs) {\n                for (let i = 0; i < tx.vout.length; i++) {\n                    const vout = tx.vout[i];\n                    if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n                        received.push({\n                            txid: tx.txid,\n                            txindex: i.toString(),\n                            amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n                            height: tx.blockheight && tx.blockheight > 0\n                                ? tx.blockheight.toString()\n                                : null,\n                        });\n                    }\n                }\n            }\n            return received.sort(sortUTXOs);\n        });\n        this.fetchUTXO = (txid, txindex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/tx/${txid}`;\n            const tx = (yield axios.get(url, { timeout: DEFAULT_TIMEOUT })).data;\n            return fixUTXO({\n                txid,\n                amount: tx.vout[parseInt(txindex, 10)].value.toString(),\n                txindex,\n                height: tx.blockheight && tx.blockheight > 0\n                    ? tx.blockheight.toString()\n                    : null,\n            }, 8);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.url}/tx/send`;\n            const response = yield axios.post(url, { rawtx: txHex }, { timeout: DEFAULT_TIMEOUT });\n            if (response.data.error) {\n                throw new Error(response.data.error);\n            }\n            return response.data.txid;\n        });\n        this.url = url.replace(/\\/$/, \"\");\n    }\n}\n//# sourceMappingURL=insight.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const getHeight = (client) => __awaiter(void 0, void 0, void 0, function* () {\n    const chainHead = yield client.request(\"ChainHead\");\n    return chainHead.Height;\n});\nexport const fetchDeposits = (client, address, \n// params: string | undefined | null,\naddressPrefix, fromHeight, latestHeight) => __awaiter(void 0, void 0, void 0, function* () {\n    const latestTXs = yield client.request(\"StateListMessages\", {\n        Version: 0,\n        To: address,\n        From: null,\n        Nonce: 0,\n        Value: \"0\",\n        GasPrice: \"0\",\n        GasLimit: 0,\n        Method: 0,\n        Params: undefined,\n    }, [], fromHeight);\n    return yield Promise.all((latestTXs || []).map((cid) => __awaiter(void 0, void 0, void 0, function* () { return fetchMessage(client, cid[\"/\"], addressPrefix, latestHeight); })));\n});\nexport const fetchMessage = (client, cid, addressPrefix, height) => __awaiter(void 0, void 0, void 0, function* () {\n    const [details, receipt, { Height: chainHeight }] = yield Promise.all([\n        client.request(\"ChainGetMessage\", { \"/\": cid }),\n        client.request(\"StateSearchMsg\", { \"/\": cid }).catch(() => undefined),\n        height ? { Height: height } : client.request(\"ChainHead\"),\n    ]);\n    // Fix addresses.\n    details.To = details.To.replace(/^f/, addressPrefix);\n    details.From = details.From.replace(/^f/, addressPrefix);\n    const tx = {\n        cid,\n        amount: details.Value,\n        params: details.Params || \"\",\n        nonce: details.Nonce,\n        confirmations: receipt ? chainHeight - receipt.Height : 0,\n    };\n    return tx;\n});\n//# sourceMappingURL=lotus.js.map","export var Opcode;\n(function (Opcode) {\n    Opcode[Opcode[\"OP_FALSE\"] = 0] = \"OP_FALSE\";\n    Opcode[Opcode[\"OP_0\"] = 0] = \"OP_0\";\n    Opcode[Opcode[\"OP_PUSHDATA1\"] = 76] = \"OP_PUSHDATA1\";\n    Opcode[Opcode[\"OP_PUSHDATA2\"] = 77] = \"OP_PUSHDATA2\";\n    Opcode[Opcode[\"OP_PUSHDATA4\"] = 78] = \"OP_PUSHDATA4\";\n    Opcode[Opcode[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    Opcode[Opcode[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    Opcode[Opcode[\"OP_TRUE\"] = 81] = \"OP_TRUE\";\n    Opcode[Opcode[\"OP_1\"] = 81] = \"OP_1\";\n    Opcode[Opcode[\"OP_2\"] = 82] = \"OP_2\";\n    Opcode[Opcode[\"OP_3\"] = 83] = \"OP_3\";\n    Opcode[Opcode[\"OP_4\"] = 84] = \"OP_4\";\n    Opcode[Opcode[\"OP_5\"] = 85] = \"OP_5\";\n    Opcode[Opcode[\"OP_6\"] = 86] = \"OP_6\";\n    Opcode[Opcode[\"OP_7\"] = 87] = \"OP_7\";\n    Opcode[Opcode[\"OP_8\"] = 88] = \"OP_8\";\n    Opcode[Opcode[\"OP_9\"] = 89] = \"OP_9\";\n    Opcode[Opcode[\"OP_10\"] = 90] = \"OP_10\";\n    Opcode[Opcode[\"OP_11\"] = 91] = \"OP_11\";\n    Opcode[Opcode[\"OP_12\"] = 92] = \"OP_12\";\n    Opcode[Opcode[\"OP_13\"] = 93] = \"OP_13\";\n    Opcode[Opcode[\"OP_14\"] = 94] = \"OP_14\";\n    Opcode[Opcode[\"OP_15\"] = 95] = \"OP_15\";\n    Opcode[Opcode[\"OP_16\"] = 96] = \"OP_16\";\n    Opcode[Opcode[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    Opcode[Opcode[\"OP_VER\"] = 98] = \"OP_VER\";\n    Opcode[Opcode[\"OP_IF\"] = 99] = \"OP_IF\";\n    Opcode[Opcode[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    Opcode[Opcode[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    Opcode[Opcode[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    Opcode[Opcode[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    Opcode[Opcode[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    Opcode[Opcode[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    Opcode[Opcode[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    Opcode[Opcode[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    Opcode[Opcode[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    Opcode[Opcode[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    Opcode[Opcode[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    Opcode[Opcode[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    Opcode[Opcode[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    Opcode[Opcode[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    Opcode[Opcode[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    Opcode[Opcode[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    Opcode[Opcode[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    Opcode[Opcode[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    Opcode[Opcode[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    Opcode[Opcode[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    Opcode[Opcode[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    Opcode[Opcode[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    Opcode[Opcode[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    Opcode[Opcode[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    Opcode[Opcode[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    Opcode[Opcode[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    Opcode[Opcode[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    Opcode[Opcode[\"OP_SUBSTR\"] = 127] = \"OP_SUBSTR\";\n    Opcode[Opcode[\"OP_LEFT\"] = 128] = \"OP_LEFT\";\n    Opcode[Opcode[\"OP_RIGHT\"] = 129] = \"OP_RIGHT\";\n    Opcode[Opcode[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    Opcode[Opcode[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    Opcode[Opcode[\"OP_AND\"] = 132] = \"OP_AND\";\n    Opcode[Opcode[\"OP_OR\"] = 133] = \"OP_OR\";\n    Opcode[Opcode[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    Opcode[Opcode[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    Opcode[Opcode[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    Opcode[Opcode[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    Opcode[Opcode[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    Opcode[Opcode[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    Opcode[Opcode[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    Opcode[Opcode[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    Opcode[Opcode[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    Opcode[Opcode[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    Opcode[Opcode[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    Opcode[Opcode[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    Opcode[Opcode[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    Opcode[Opcode[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    Opcode[Opcode[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    Opcode[Opcode[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    Opcode[Opcode[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    Opcode[Opcode[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    Opcode[Opcode[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    Opcode[Opcode[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    Opcode[Opcode[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    Opcode[Opcode[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    Opcode[Opcode[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    Opcode[Opcode[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    Opcode[Opcode[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    Opcode[Opcode[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    Opcode[Opcode[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    Opcode[Opcode[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    Opcode[Opcode[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    Opcode[Opcode[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    Opcode[Opcode[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    Opcode[Opcode[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    Opcode[Opcode[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    Opcode[Opcode[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    Opcode[Opcode[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    Opcode[Opcode[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    Opcode[Opcode[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    Opcode[Opcode[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    Opcode[Opcode[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    Opcode[Opcode[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    Opcode[Opcode[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    Opcode[Opcode[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    Opcode[Opcode[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    Opcode[Opcode[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    Opcode[Opcode[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    Opcode[Opcode[\"OP_NOP2\"] = 177] = \"OP_NOP2\";\n    Opcode[Opcode[\"OP_NOP3\"] = 178] = \"OP_NOP3\";\n    Opcode[Opcode[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    Opcode[Opcode[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    Opcode[Opcode[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    Opcode[Opcode[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    Opcode[Opcode[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    Opcode[Opcode[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    Opcode[Opcode[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    Opcode[Opcode[\"OP_PUBKEYHASH\"] = 253] = \"OP_PUBKEYHASH\";\n    Opcode[Opcode[\"OP_PUBKEY\"] = 254] = \"OP_PUBKEY\";\n    Opcode[Opcode[\"OP_INVALIDOPCODE\"] = 255] = \"OP_INVALIDOPCODE\";\n})(Opcode || (Opcode = {}));\n//# sourceMappingURL=opcodes.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { DEFAULT_TIMEOUT, sortUTXOs } from \"./API\";\nexport class Blockstream {\n    constructor({ testnet = false, apiKey = undefined } = {}) {\n        this.fetchHeight = () => __awaiter(this, void 0, void 0, function* () {\n            return (yield axios.get(this.getAPIUrl(`/blocks/tip/height`), {\n                timeout: DEFAULT_TIMEOUT,\n            })).data.toString();\n        });\n        this.fetchUTXO = (txid, txindex) => __awaiter(this, void 0, void 0, function* () {\n            const utxo = (yield axios.get(this.getAPIUrl(`/tx/${txid}`), {\n                timeout: DEFAULT_TIMEOUT,\n            })).data;\n            return {\n                txid,\n                amount: utxo.vout[parseInt(txindex, 10)].value.toString(),\n                txindex,\n                height: utxo.status.confirmed\n                    ? utxo.status.block_height.toString()\n                    : null,\n            };\n        });\n        this.fetchUTXOs = (address) => __awaiter(this, void 0, void 0, function* () {\n            const response = yield axios.get(this.getAPIUrl(`/address/${address}/utxo`), { timeout: DEFAULT_TIMEOUT });\n            return response.data\n                .map((utxo) => ({\n                txid: utxo.txid,\n                amount: utxo.value.toString(),\n                txindex: utxo.vout.toString(),\n                height: utxo.status.confirmed\n                    ? utxo.status.block_height.toString()\n                    : null,\n            }))\n                .sort(sortUTXOs);\n        });\n        this.fetchTXs = (address) => __awaiter(this, void 0, void 0, function* () {\n            const response = yield axios.get(this.getAPIUrl(`/address/${address}/txs`), { timeout: DEFAULT_TIMEOUT });\n            const received = [];\n            for (const tx of response.data) {\n                for (let i = 0; i < tx.vout.length; i++) {\n                    const vout = tx.vout[i];\n                    if (vout.scriptpubkey_address === address) {\n                        received.push({\n                            txid: tx.txid,\n                            amount: vout.value.toString(),\n                            txindex: i.toString(),\n                            height: tx.status.confirmed\n                                ? tx.status.block_height.toString()\n                                : null,\n                        });\n                    }\n                }\n            }\n            return received.sort(sortUTXOs);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const response = yield axios.post(this.getAPIUrl(`/tx`), txHex, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            return response.data;\n        });\n        this.testnet = testnet;\n        this.apiKey = apiKey;\n    }\n    getAPIUrl(path) {\n        return `https://blockstream.info/${this.testnet ? \"testnet/\" : \"\"}api${path}${this.apiKey ? `?key=${this.apiKey}` : \"\"}`;\n    }\n}\n//# sourceMappingURL=blockstream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { DEFAULT_TIMEOUT, fixUTXO, fixUTXOs, fixValue, sortUTXOs, } from \"./API\";\nexport class BitcoinDotCom {\n    constructor({ testnet = false } = {}) {\n        this.testnet = testnet;\n    }\n    endpoint() {\n        return this.testnet\n            ? \"https://trest.bitcoin.com/v2/\"\n            : \"https://rest.bitcoin.com/v2/\";\n    }\n    endpointV2() {\n        return this.testnet\n            ? \"https://explorer-tbch.api.bitcoin.com/tbch/v1\"\n            : \"https://explorer.api.bitcoin.com/bch/v1\";\n    }\n    fetchHeight() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpointV2()}/blockchain/getBlockCount`;\n            const response = yield axios.get(url, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            return response.data.toString();\n        });\n    }\n    fetchUTXO(txid, txindex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpointV2()}/tx/${txid}`;\n            const response = yield axios.get(url, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const utxo = response.data;\n            return fixUTXO({\n                txid: txid,\n                amount: utxo.vout[parseInt(txindex, 10)].value.toString(),\n                txindex: txindex,\n                height: utxo.blockheight && utxo.blockheight > 0\n                    ? utxo.blockheight.toString()\n                    : null,\n            }, 8);\n        });\n    }\n    fetchUTXOs(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpointV2()}/addr/${address}/utxo`;\n            const response = yield axios.get(url, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            return fixUTXOs(response.data.map((utxo) => ({\n                txid: utxo.txid,\n                amount: utxo.amount.toString(),\n                txindex: utxo.vout.toString(),\n                height: utxo.height && utxo.height > 0\n                    ? utxo.height.toString()\n                    : null,\n            })), 8).sort(sortUTXOs);\n        });\n    }\n    fetchTXs(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint().replace(/\\/$/, \"\")}/address/transactions/${address}`;\n            const { data } = yield axios.get(url, {\n                timeout: DEFAULT_TIMEOUT,\n            });\n            const received = [];\n            for (const tx of data.txs) {\n                for (let i = 0; i < tx.vout.length; i++) {\n                    const vout = tx.vout[i];\n                    if (vout.scriptPubKey.addresses.indexOf(address) >= 0) {\n                        received.push({\n                            txid: tx.txid,\n                            amount: fixValue(parseFloat(vout.value), 8).toFixed(),\n                            txindex: i.toString(),\n                            height: tx.blockheight && tx.blockheight > 0\n                                ? tx.blockheight.toString()\n                                : null,\n                        });\n                    }\n                }\n            }\n            return received.sort(sortUTXOs);\n        });\n    }\n    broadcastTransaction(hexEncodedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint().replace(/\\/$/, \"\")}/rawtransactions/sendRawTransaction`;\n            const response = yield axios.post(url, { hexes: [hexEncodedTransaction] }, { timeout: DEFAULT_TIMEOUT });\n            if (response.data.error) {\n                throw new Error(response.data.error);\n            }\n            return response.data[0];\n        });\n    }\n}\n//# sourceMappingURL=bitcoinDotCom.js.map","import BigNumber from \"bignumber.js\";\nimport { assertType } from \"./assert\";\nimport { toNBytes } from \"./common\";\nimport { Ox } from \"./encodings\";\n/**\n * Normalize the `s` and `v` values of the signature.\n */\nexport const fixSignature = (signature) => {\n    assertType(\"Buffer\", { signature });\n    const r = signature.slice(0, 32);\n    const s = signature.slice(32, 64);\n    let v = signature.slice(64, 65)[0];\n    let sBN = new BigNumber(Ox(s), 16);\n    // Normalize v value\n    v = ((v || 0) % 27) + 27;\n    // The size of the field that secp256k1 is defined over.\n    const secp256k1n = new BigNumber(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16);\n    // For a given key, there are two valid signatures for each signed message.\n    // We always take the one with the lower `s`.\n    // Check if s > secp256k1n/2 (57896044618658097711785492504343953926418782139537452191302581570759080747168.5)\n    if (sBN.gt(secp256k1n.div(2))) {\n        // Take s = -s % secp256k1n\n        sBN = secp256k1n.minus(sBN);\n        // Switch v\n        v = v === 27 ? 28 : 27;\n    }\n    return Buffer.concat([r, toNBytes(sBN, 32), Buffer.from([v])]);\n};\n//# sourceMappingURL=fixSignature.js.map","import createHash from \"create-hash\";\nimport { keccak256 as jsKeccak256 } from \"js-sha3\";\nimport { assertType } from \"./assert\";\nimport { padBuffer, toNBytes } from \"./common\";\nimport { marshalString, marshalTypedPackValue } from \"./pack/marshal\";\n/**\n * Return the keccak256 hash of an array of buffers. The inputs are concatenated\n * before being hashed.\n */\nexport const keccak256 = (...msg) => {\n    assertType(\"Buffer[]\", { msg });\n    return Buffer.from(jsKeccak256.buffer(Buffer.concat(msg)));\n};\nexport const sha256 = (...msg) => {\n    assertType(\"Buffer[]\", { msg });\n    return createHash(\"sha256\").update(Buffer.concat(msg)).digest();\n};\n/**\n * Creating a RenVM transaction involves calculating several hashes, used to\n * tie/commit the transaction to particular data.\n *\n * Transactions can be associated with a payload which specifies what should\n * be done with the transaction ones it's complete - e.g. after renBTC is\n * minted on Ethereum, it should be swapped for ETH. This payload can be\n * of arbitrary-length, so it's hashed to a 32-byte value using the phash\n * (or payload hash).\n *\n * The shash (or selector hash) is the hash of the selector\n * (e.g. \"BTC/toEthereum\").\n *\n * The ghash (gateway hash) links the payload/phash, the selector/shash,\n * the transaction's recipient and the nonce into a single value that is then\n * used to create a unique gateway address (for deposit-based transactions).\n *\n * The nhash (nonce hash) hashes the nonce, txid and txindex in order to create\n * a unique identifier of the deposit/input transaction.\n *\n * The sighash (signature hash) ties all these together, hashing the phash,\n * the amount being minted/released, the transaction's recipient, the shash and\n * the nhash. It's then signed by RenVM, and re-calculated in the gateway\n * contracts in order to spend the signature. When burning-and-releasing, the\n * sighash is empty.\n */\n/**\n * Calculate the RenVM pHash (payload hash) from a payload (alias for keccak256).\n */\nexport const generatePHash = keccak256;\n/**\n * Calculate the RenVM sHash (selector hash). Normalizes the selector to remove\n * the origin-chain for burn-and-mints.\n *\n * @example\n * ```\n * generateSHash(\"BTC/toEthereum\") === keccak256(\"BTC/toEthereum\")\n * generateSHash(\"BTC/fromFantomToEthereum\") === keccak256(\"BTC/toEthereum\")\n * ```\n */\nexport const generateSHash = (selector) => {\n    assertType(\"string\", { selector });\n    const toSelector = Buffer.from(selector.replace(/\\/.*To/, \"/to\"));\n    return keccak256(toSelector);\n};\n/**\n * Calculate the RenVM gHash (gateway hash) - keccak256(pHash, sHash, to, nonce)\n *\n * NOTICE: Since RenJS v2, the interface has changed such that:\n * 1. the first parameter is the pHash instead of the payload, and\n * 2. the second and third parameters (sHash and to) have been swapped.\n */\nexport const generateGHash = (pHash, sHash, to, nonce) => {\n    assertType(\"Buffer\", { pHash, nonce, sHash, to });\n    return keccak256(pHash, sHash, to, nonce);\n};\n/**\n * Calculate the RenVM nHash (nonce hash), calculated as\n * `keccak256(nonce, txid, toNBytes(txindex, 4))`\n */\nexport const generateNHash = (nonce, txid, txindex) => {\n    assertType(\"Buffer\", { nonce, txid });\n    assertType(\"string\", { txindex });\n    return keccak256(nonce, txid, toNBytes(txindex, 4));\n};\n/**\n * Calculate the RenVM sigHash (signature hash).\n */\nexport const generateSighash = (pHash, amount, to, sHash, nHash) => {\n    assertType(\"Buffer\", { pHash, nHash, sHash, to });\n    assertType(\"BigNumber\", { amount });\n    if (pHash.length !== 32) {\n        throw new Error(`Invalid pHash length - ${pHash.length} instead of 32.`);\n    }\n    if (sHash.length !== 32) {\n        throw new Error(`Invalid pHash length - ${sHash.length} instead of 32.`);\n    }\n    if (nHash.length !== 32) {\n        throw new Error(`Invalid pHash length - ${nHash.length} instead of 32.`);\n    }\n    const encoded = Buffer.concat([\n        pHash,\n        toNBytes(amount, 32),\n        sHash,\n        padBuffer(to, 32),\n        nHash,\n    ]);\n    return keccak256(encoded);\n};\n/**\n * Calculate the hash of a RenVM transaction.\n */\nexport const generateTransactionHash = (version, selector, packValue) => {\n    assertType(\"string\", { version, selector });\n    return sha256(marshalString(version), marshalString(selector), marshalTypedPackValue(packValue));\n};\n//# sourceMappingURL=renVMHashes.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { Blockchair } from \"./APIs/blockchair\";\nimport { Blockstream } from \"./APIs/blockstream\";\nimport { SoChain } from \"./APIs/sochain\";\nimport { BitcoinBaseChain } from \"./base\";\nimport { resolveBitcoinNetworkConfig, StandardBitcoinExplorer, } from \"./utils/utils\";\nexport const BitcoinMainnet = {\n    label: \"Bitcoin\",\n    selector: \"Bitcoin\",\n    nativeAsset: {\n        name: \"Bitcoin\",\n        symbol: \"BTC\",\n        decimals: 8,\n    },\n    explorer: StandardBitcoinExplorer(\"https://live.blockcypher.com/btc/\"),\n    p2shPrefix: Buffer.from([0x05]),\n    providers: [\n        new Blockstream(),\n        new Blockchair(),\n        { api: new SoChain(), priority: 15 },\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"BTC\", \"mainnet\"),\n};\nexport const BitcoinTestnet = {\n    label: \"Bitcoin Testnet\",\n    selector: \"Bitcoin\",\n    nativeAsset: {\n        name: \"Testnet Bitcoin\",\n        symbol: \"BTC\",\n        decimals: 8,\n    },\n    isTestnet: true,\n    explorer: StandardBitcoinExplorer(\"https://live.blockcypher.com/btc-testnet/\"),\n    p2shPrefix: Buffer.from([0xc4]),\n    providers: [\n        new Blockstream({ testnet: true }),\n        // new Blockchair(BlockchairNetwork.BITCOIN_TESTNET),\n        // { api: new SoChain(SoChainNetwork.BTCTEST), priority: 15 },\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"BTC\", \"testnet\"),\n};\nexport const BitcoinConfigMap = {\n    [RenNetwork.Mainnet]: BitcoinMainnet,\n    [RenNetwork.Testnet]: BitcoinTestnet,\n    [RenNetwork.Devnet]: BitcoinTestnet,\n};\n/**\n * The Bitcoin class adds support for the asset BTC.\n */\nexport class Bitcoin extends BitcoinBaseChain {\n    constructor(network) {\n        super(resolveBitcoinNetworkConfig(Bitcoin.configMap, network));\n        this.configMap = BitcoinConfigMap;\n        this.assets = Bitcoin.assets;\n    }\n}\nBitcoin.chain = \"Bitcoin\";\nBitcoin.configMap = BitcoinConfigMap;\nBitcoin.assets = {\n    BTC: \"BTC\",\n};\n//# sourceMappingURL=bitcoin.js.map","import { isMainnetAddress, isTestnetAddress, isValidAddress, toCashAddress, } from \"bchaddrjs\";\nimport bs58 from \"bs58\";\nimport { RenNetwork } from \"@renproject/utils\";\nimport { BitcoinDotCom } from \"./APIs/bitcoinDotCom\";\nimport { Blockchair, BlockchairNetwork } from \"./APIs/blockchair\";\nimport { BitcoinBaseChain } from \"./base\";\nimport { resolveBitcoinNetworkConfig, StandardBitcoinExplorer, } from \"./utils/utils\";\nexport const BitcoinCashMainnet = {\n    label: \"Bitcoin Cash\",\n    selector: \"BitcoinCash\",\n    nativeAsset: {\n        name: \"Bitcoin Cash\",\n        symbol: \"BCH\",\n        decimals: 8,\n    },\n    explorer: StandardBitcoinExplorer(\"https://explorer.bitcoin.com/bch/\"),\n    p2shPrefix: Buffer.from([0x05]),\n    providers: [\n        new BitcoinDotCom(),\n        new Blockchair(BlockchairNetwork.BITCOIN_CASH),\n    ],\n};\nexport const BitcoinCashTestnet = {\n    label: \"Bitcoin Cash Testnet\",\n    selector: \"BitcoinCash\",\n    nativeAsset: {\n        name: \"Testnet Bitcoin Cash\",\n        symbol: \"BCH\",\n        decimals: 8,\n    },\n    isTestnet: true,\n    explorer: StandardBitcoinExplorer(\"https://explorer.bitcoin.com/tbch/\"),\n    p2shPrefix: Buffer.from([0xc4]),\n    providers: [new BitcoinDotCom({ testnet: true })],\n};\nexport const BitcoinCashConfigMap = {\n    [RenNetwork.Mainnet]: BitcoinCashMainnet,\n    [RenNetwork.Testnet]: BitcoinCashTestnet,\n    [RenNetwork.Devnet]: BitcoinCashTestnet,\n};\nexport class BitcoinCash extends BitcoinBaseChain {\n    constructor(network) {\n        super(resolveBitcoinNetworkConfig(BitcoinCash.configMap, network));\n        this.configMap = BitcoinCashConfigMap;\n        this.assets = BitcoinCash.assets;\n    }\n    validateAddress(address) {\n        return isValidAddress(address) && this.network.isTestnet\n            ? isTestnetAddress(address)\n            : isMainnetAddress(address);\n    }\n    encodeAddress(bytes) {\n        return toCashAddress(bs58.encode(bytes));\n    }\n}\nBitcoinCash.chain = \"BitcoinCash\";\nBitcoinCash.configMap = BitcoinCashConfigMap;\nBitcoinCash.assets = {\n    BCH: \"BCH\",\n};\n//# sourceMappingURL=bitcoincash.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { Blockbook } from \"./APIs/blockbook\";\nimport { BitcoinBaseChain } from \"./base\";\nimport { resolveBitcoinNetworkConfig, StandardBitcoinExplorer, } from \"./utils/utils\";\nexport const DigiByteMainnet = {\n    label: \"DigiByte\",\n    selector: \"DigiByte\",\n    nativeAsset: {\n        name: \"DigiByte\",\n        symbol: \"DGB\",\n        decimals: 8,\n    },\n    explorer: StandardBitcoinExplorer(\"https://digiexplorer.info/\"),\n    p2shPrefix: Buffer.from([0x3f]),\n    providers: [\n        new Blockbook(\"https://multichain-web-proxy.herokuapp.com/digibyte-mainnet\"),\n        new Blockbook(\"https://digiexplorer.info/api\"),\n        new Blockbook(\"https://insight.digibyte.host/api\"), // TODO: test again, currently broken\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"DGB\", \"mainnet\"),\n};\nexport const DigiByteTestnet = {\n    label: \"DigiByte Testnet\",\n    selector: \"DigiByte\",\n    nativeAsset: {\n        name: \"Testnet DigiByte\",\n        symbol: \"DGB\",\n        decimals: 8,\n    },\n    isTestnet: true,\n    explorer: StandardBitcoinExplorer(\"`https://testnetexplorer.digibyteservers.io/\"),\n    p2shPrefix: Buffer.from([0x8c]),\n    providers: [\n        new Blockbook(\"https://testnetexplorer.digibyteservers.io/api\"),\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"DGB\", \"testnet\"),\n};\nexport const DigiByteConfigMap = {\n    [RenNetwork.Mainnet]: DigiByteMainnet,\n    [RenNetwork.Testnet]: DigiByteTestnet,\n    [RenNetwork.Devnet]: DigiByteTestnet,\n};\nexport class DigiByte extends BitcoinBaseChain {\n    constructor(network) {\n        super(resolveBitcoinNetworkConfig(DigiByte.configMap, network));\n        this.configMap = DigiByteConfigMap;\n        this.assets = DigiByte.assets;\n    }\n}\nDigiByte.chain = \"DigiByte\";\nDigiByte.configMap = DigiByteConfigMap;\nDigiByte.assets = {\n    DGB: \"DGB\",\n};\n//# sourceMappingURL=digibyte.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { Blockchair, BlockchairNetwork } from \"./APIs/blockchair\";\nimport { SoChain, SoChainNetwork } from \"./APIs/sochain\";\nimport { BitcoinBaseChain } from \"./base\";\nimport { resolveBitcoinNetworkConfig, SoChainExplorer } from \"./utils/utils\";\nexport const DogecoinMainnet = {\n    label: \"Dogecoin\",\n    selector: \"Dogecoin\",\n    nativeAsset: {\n        name: \"Dogecoin\",\n        symbol: \"DOGE\",\n        decimals: 8,\n    },\n    explorer: SoChainExplorer(\"doge\", \"DOGE\"),\n    p2shPrefix: Buffer.from([0x16]),\n    providers: [\n        new Blockchair(BlockchairNetwork.DOGECOIN),\n        { api: new SoChain(SoChainNetwork.DOGE), priority: 15 },\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"DOGE\", \"mainnet\"),\n};\nexport const DogecoinTestnet = {\n    label: \"Dogecoin Testnet\",\n    selector: \"Dogecoin\",\n    nativeAsset: {\n        name: \"Testnet Dogecoin\",\n        symbol: \"DOGE\",\n        decimals: 8,\n    },\n    isTestnet: true,\n    explorer: SoChainExplorer(\"testnet/doge\", \"DOGETEST\"),\n    p2shPrefix: Buffer.from([0xc4]),\n    providers: [{ api: new SoChain(SoChainNetwork.DOGETEST), priority: 15 }],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"DOGE\", \"testnet\"),\n};\nexport const DogecoinConfigMap = {\n    [RenNetwork.Mainnet]: DogecoinMainnet,\n    [RenNetwork.Testnet]: DogecoinTestnet,\n    [RenNetwork.Devnet]: DogecoinTestnet,\n};\nexport class Dogecoin extends BitcoinBaseChain {\n    constructor(network) {\n        super(resolveBitcoinNetworkConfig(Dogecoin.configMap, network));\n        this.configMap = DogecoinConfigMap;\n        this.assets = Dogecoin.assets;\n    }\n}\nDogecoin.chain = \"Dogecoin\";\nDogecoin.configMap = DogecoinConfigMap;\nDogecoin.assets = {\n    DOGE: \"DOGE\",\n};\n//# sourceMappingURL=dogecoin.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { Blockbook } from \"./APIs/blockbook\";\nimport { Blockchair, BlockchairNetwork } from \"./APIs/blockchair\";\nimport { Insight } from \"./APIs/insight\";\nimport { SoChain, SoChainNetwork } from \"./APIs/sochain\";\nimport { BitcoinBaseChain } from \"./base\";\nimport { resolveBitcoinNetworkConfig, SoChainExplorer } from \"./utils/utils\";\nexport const ZcashMainnet = {\n    label: \"Zcash\",\n    selector: \"Zcash\",\n    nativeAsset: {\n        name: \"Zcash\",\n        symbol: \"ZEC\",\n        decimals: 8,\n    },\n    explorer: SoChainExplorer(\"zcash\", \"ZEC\"),\n    p2shPrefix: Buffer.from([0x1c, 0xbd]),\n    providers: [\n        new Blockbook(\"https://zecblockexplorer.com/api/\"),\n        new Blockchair(BlockchairNetwork.ZCASH),\n        { api: new SoChain(SoChainNetwork.ZEC), priority: 15 },\n        { api: new Insight(\"https://explorer.z.cash/api/\"), priority: 20 },\n        { api: new Insight(\"https://zechain.net/api/v1/\"), priority: 20 }, // TODO: test again, currently broken\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"ZEC\", \"mainnet\"),\n};\nexport const ZcashTestnet = {\n    label: \"Zcash Testnet\",\n    selector: \"Zcash\",\n    nativeAsset: {\n        name: \"Testnet Zcash\",\n        symbol: \"ZEC\",\n        decimals: 8,\n    },\n    isTestnet: true,\n    explorer: SoChainExplorer(\"testnet/zcash\", \"ZECTEST\"),\n    p2shPrefix: Buffer.from([0x1c, 0xba]),\n    providers: [\n        new Insight(\"https://explorer.testnet.z.cash/api/\"),\n        { api: new SoChain(SoChainNetwork.ZECTEST), priority: 15 },\n    ],\n    // validateAddress: (address: string) =>\n    //     validateAddress(address, \"ZEC\", \"testnet\"),\n};\nexport const ZcashConfigMap = {\n    [RenNetwork.Mainnet]: ZcashMainnet,\n    [RenNetwork.Testnet]: ZcashTestnet,\n    [RenNetwork.Devnet]: ZcashTestnet,\n};\nexport class Zcash extends BitcoinBaseChain {\n    constructor(network) {\n        super(resolveBitcoinNetworkConfig(Zcash.configMap, network));\n        this.configMap = ZcashConfigMap;\n        this.assets = Zcash.assets;\n    }\n}\nZcash.chain = \"Zcash\";\nZcash.configMap = ZcashConfigMap;\nZcash.assets = {\n    ZEC: \"ZEC\",\n};\n//# sourceMappingURL=zcash.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport var InputType;\n(function (InputType) {\n    InputType[\"Lock\"] = \"lock\";\n    InputType[\"Burn\"] = \"burn\";\n})(InputType || (InputType = {}));\nexport var OutputType;\n(function (OutputType) {\n    OutputType[\"Mint\"] = \"mint\";\n    OutputType[\"Release\"] = \"release\";\n})(OutputType || (OutputType = {}));\nexport const isDepositChain = (chain) => chain.createGatewayAddress !== undefined;\nexport const isContractChain = (chain) => chain.getInputTx !== undefined &&\n    // (chain as ContractChain).submitLock !== undefined &&\n    chain.getOutputTx !== undefined;\n//# sourceMappingURL=chain.js.map","/** Based on log levels from the `loglevel` npm package. */\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warn\"] = 3] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Silent\"] = 5] = \"Silent\";\n})(LogLevel || (LogLevel = {}));\nconst doNothing = () => { };\n/**\n * nullLogger is a helper utility to avoid having to check whether a logger is\n * defined.\n *\n * @example\n * ```\n * const logger = params.logger || nullLogger;\n * logger.debug(\"Test.\");\n * ```\n */\nexport const nullLogger = {\n    trace: doNothing,\n    debug: doNothing,\n    info: doNothing,\n    warn: doNothing,\n    error: doNothing,\n};\n//# sourceMappingURL=logger.js.map","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { EventEmitter } from \"events\";\n/** Interface for EventEmitter with well-typed events. */\nexport class EventEmitterTyped {\n}\n/** Create a new EventEmitterTyped */\nexport const eventEmitter = () => new EventEmitter();\n//# sourceMappingURL=eventEmitter.js.map","export var RenNetwork;\n(function (RenNetwork) {\n    RenNetwork[\"Mainnet\"] = \"mainnet\";\n    RenNetwork[\"Testnet\"] = \"testnet\";\n    RenNetwork[\"Devnet\"] = \"devnet\";\n})(RenNetwork || (RenNetwork = {}));\n//# sourceMappingURL=renNetwork.js.map","export var TxStatus;\n(function (TxStatus) {\n    // TxStatusNil is used for transactions that have not been seen, or are\n    // otherwise unknown.\n    TxStatus[\"TxStatusNil\"] = \"nil\";\n    // TxStatusConfirming is used for transactions that are currently waiting\n    // for their underlying blockchain transactions to be confirmed.\n    TxStatus[\"TxStatusConfirming\"] = \"confirming\";\n    // TxStatusPending is used for transactions that are waiting for consensus\n    // to be reached on when the transaction should be executed.\n    TxStatus[\"TxStatusPending\"] = \"pending\";\n    // TxStatusExecuting is used for transactions that are currently being\n    // executed.\n    TxStatus[\"TxStatusExecuting\"] = \"executing\";\n    // TxStatusReverted is used for transactions that were reverted during\n    // execution.\n    TxStatus[\"TxStatusReverted\"] = \"reverted\";\n    // TxStatusDone is used for transactions that have been successfully\n    // executed.\n    TxStatus[\"TxStatusDone\"] = \"done\";\n})(TxStatus || (TxStatus = {}));\nexport const TxStatusIndex = {\n    [TxStatus.TxStatusNil]: 0,\n    [TxStatus.TxStatusConfirming]: 1,\n    [TxStatus.TxStatusPending]: 2,\n    [TxStatus.TxStatusExecuting]: 3,\n    [TxStatus.TxStatusReverted]: 4,\n    [TxStatus.TxStatusDone]: 5,\n};\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { OrderedMap, Record } from \"immutable\";\nimport { MINUTES } from \"./common\";\n/**\n * Cache the result of an asynchronous function, with a default expiry of 5\n * minutes. Only one result is stored at a time.\n */\nexport const memoize = (fn, { expiry = (5 * MINUTES), entryLimit = 100 } = {\n    expiry: (5 * MINUTES),\n    entryLimit: 100,\n}) => {\n    const CacheRecord = Record({\n        timestamp: 0,\n        paramKey: null,\n        result: null,\n    });\n    let cacheMap = OrderedMap();\n    return (...params) => __awaiter(void 0, void 0, void 0, function* () {\n        const paramKey = JSON.stringify(params);\n        const cachedResult = cacheMap.get(paramKey);\n        const currentTime = Date.now() / 1000;\n        if (cachedResult &&\n            (expiry === false ||\n                currentTime - cachedResult.get(\"timestamp\") < expiry) &&\n            cachedResult.get(\"paramKey\") === paramKey) {\n            return cachedResult.get(\"result\");\n        }\n        else {\n            const result = yield fn(...params);\n            // Update cache\n            cacheMap = cacheMap.set(paramKey, CacheRecord({\n                timestamp: Date.now() / 1000,\n                paramKey,\n                result,\n            }));\n            if (cacheMap.size > entryLimit) {\n                cacheMap = cacheMap.slice(-entryLimit);\n            }\n            return result;\n        }\n    });\n};\n//# sourceMappingURL=memoize.js.map","/**\n * @file PromiEvent.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>, Samuel Furter <samuel@ethereum.org>\n * 2018\n */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventEmitter } from \"events\";\nimport { EventEmitterTyped } from \"../../interfaces/eventEmitter\";\n/** PromiEvent implementation, modified from the Web3 PromiEvent. */\nexport class Web3PromiEvent extends EventEmitterTyped {\n    /**\n     * Sets up the event emitter and the promise, as well as a proxy handler\n     * for routing method calls to the promise or event emitter.\n     */\n    constructor(eventEmitter) {\n        super();\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        this._cancelled = false;\n        this.eventEmitter =\n            eventEmitter ||\n                new EventEmitter();\n        return new Proxy(this, {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            get: this.proxyHandler,\n        });\n    }\n    /**\n     * Proxy handler to call the promise or eventEmitter methods\n     */\n    proxyHandler(target, name) {\n        if (name === \"resolve\" || name === \"reject\") {\n            // eslint-disable-next-line security/detect-object-injection\n            return target[name];\n        }\n        if (name === \"then\") {\n            return target.promise.then.bind(target.promise);\n        }\n        if (name === \"catch\") {\n            return target.promise.catch.bind(target.promise);\n        }\n        if (name === \"_cancel\") {\n            return () => {\n                this._cancelled = true;\n            };\n        }\n        if (name === \"_isCancelled\") {\n            return () => this._cancelled === true;\n        }\n        if (name === \"_resume\") {\n            return () => {\n                this._cancelled = false;\n            };\n        }\n        // eslint-disable-next-line security/detect-object-injection, @typescript-eslint/no-unsafe-member-access\n        if (target.eventEmitter[name]) {\n            // eslint-disable-next-line security/detect-object-injection, @typescript-eslint/no-unsafe-member-access\n            return target.eventEmitter[name];\n        }\n        return;\n    }\n}\nSymbol.toStringTag;\n//# sourceMappingURL=index.js.map","import { Web3PromiEvent } from \"./libraries/promiEvent\";\n/**\n * Helper function for creating new PromiEvents.\n */\nexport const newPromiEvent = (eventEmitter) => new Web3PromiEvent(eventEmitter);\n//# sourceMappingURL=promiEvent.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isDefined, SECONDS, sleep } from \"./common\";\nimport { eventEmitter } from \"./interfaces/eventEmitter\";\nimport { newPromiEvent } from \"./promiEvent\";\nexport var ChainTransactionStatus;\n(function (ChainTransactionStatus) {\n    ChainTransactionStatus[\"Ready\"] = \"ready\";\n    ChainTransactionStatus[\"Confirming\"] = \"confirming\";\n    ChainTransactionStatus[\"Done\"] = \"done\";\n    ChainTransactionStatus[\"Reverted\"] = \"reverted\";\n})(ChainTransactionStatus || (ChainTransactionStatus = {}));\n/**\n * The DefaultTxWaiter is a helper for when a chain transaction has already\n * been submitted.\n */\nexport class DefaultTxWaiter {\n    /**\n     * Requires a submitted chainTransaction, a chain object and the target\n     * confirmation count.\n     */\n    constructor({ chainTransaction, chain, target, }) {\n        this._chainTransaction = chainTransaction;\n        this._chain = chain;\n        this._target = target;\n        this.chain = chain.chain;\n        this.eventEmitter = eventEmitter();\n        this.status = Object.assign({ chain: chain.chain, status: ChainTransactionStatus.Confirming, target }, (chainTransaction ? { transaction: chainTransaction } : {}));\n    }\n    updateStatus(status) {\n        this.status = Object.assign(Object.assign({}, this.status), status);\n        this.eventEmitter.emit(\"status\", this.status);\n    }\n    setTransaction(chainTransaction) {\n        this._chainTransaction = chainTransaction;\n        this.updateStatus({\n            transaction: chainTransaction,\n        });\n    }\n    wait(target) {\n        const promiEvent = newPromiEvent(this.eventEmitter);\n        (() => __awaiter(this, void 0, void 0, function* () {\n            const tx = this._chainTransaction;\n            if (!tx) {\n                throw new Error(`Must call \".submit\" first.`);\n            }\n            target = isDefined(target) ? target : this._target;\n            let currentConfidenceRatio = -1;\n            while (true) {\n                const confidence = (yield this._chain.transactionConfidence(tx)).toNumber();\n                const confidenceRatio = target === 0 ? 1 : confidence / target;\n                // The confidence has increased.\n                if (confidenceRatio > currentConfidenceRatio) {\n                    if (confidenceRatio >= 1) {\n                        // Done.\n                        this.updateStatus(Object.assign(Object.assign({}, this.status), { confirmations: confidence, status: ChainTransactionStatus.Done }));\n                        break;\n                    }\n                    else {\n                        // Update status.\n                        currentConfidenceRatio = confidenceRatio;\n                        this.updateStatus(Object.assign(Object.assign({}, this.status), { confirmations: confidence }));\n                    }\n                }\n                yield sleep(15 * SECONDS);\n            }\n            return this.status;\n        }))()\n            .then(promiEvent.resolve)\n            .catch(promiEvent.reject);\n        return promiEvent;\n    }\n}\n//# sourceMappingURL=txSubmitter.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport { blake2b } from \"blakejs\";\nimport CID from \"cids\";\nimport elliptic from \"elliptic\";\nimport { decode as decodeAddress, encode as encodeAddress, validateAddressString, } from \"@glif/filecoin-address\";\nimport FilecoinClient from \"@glif/filecoin-rpc-client\";\nimport { assertType, doesntError, fromBase64, RenJSError, RenNetwork, SECONDS, sleep, toURLBase64, tryNTimes, withCode, } from \"@renproject/utils\";\nimport { Filfox } from \"./utils/filfox\";\nimport { fetchDeposits, fetchMessage, getHeight } from \"./utils/lotus\";\nexport const isFilecoinNetworkConfig = (renNetwork) => !!renNetwork.selector &&\n    !!renNetwork.nativeAsset &&\n    !!renNetwork.rpc &&\n    !!renNetwork.addressPrefix &&\n    !!renNetwork.explorer;\nexport const FilecoinMainnet = {\n    selector: \"Filecoin\",\n    nativeAsset: {\n        name: \"Filecoin\",\n        symbol: \"FIL\",\n        decimals: 18,\n    },\n    addressPrefix: \"f\",\n    explorer: \"https://filfox.info/en/\",\n    rpc: {\n        apiAddress: `https://multichain-web-proxy.herokuapp.com/mainnet`,\n    },\n    filfoxAPI: \"https://filfox.info/api/v1/\",\n};\nexport const FilecoinTestnet = {\n    selector: \"Filecoin\",\n    nativeAsset: {\n        name: \"Filecoin\",\n        symbol: \"FIL\",\n        decimals: 18,\n    },\n    addressPrefix: \"t\",\n    explorer: \"https://filfox.info/en/\",\n    rpc: {\n        apiAddress: `https://multichain-web-proxy.herokuapp.com/testnet`,\n    },\n};\nexport const FilecoinConfigMap = {\n    [RenNetwork.Mainnet]: FilecoinMainnet,\n    [RenNetwork.Testnet]: FilecoinTestnet,\n    [RenNetwork.Devnet]: FilecoinTestnet,\n};\nexport class Filecoin {\n    constructor(network, options = {}) {\n        this.assets = Filecoin.assets;\n        this.configMap = FilecoinConfigMap;\n        this.feeAsset = \"FIL\";\n        this.validateTransaction = doesntError((tx) => new CID(fromBase64(tx.txid)).bytes.length === 38 &&\n            tx.txindex === \"0\");\n        this.transactionExplorerLink = (transaction) => {\n            // TODO: Check network.\n            return `https://filfox.info/en/message/${transaction.txidFormatted}`;\n        };\n        const networkConfig = isFilecoinNetworkConfig(network)\n            ? network\n            : FilecoinConfigMap[network];\n        if (!networkConfig) {\n            if (typeof network === \"string\") {\n                throw new Error(`Invalid RenVM network ${network}.`);\n            }\n            else {\n                throw new Error(`Invalid Filecoin network config.`);\n            }\n        }\n        this.network = networkConfig;\n        this.chain = this.network.selector;\n        this.clientOptions = options;\n        this.client = new FilecoinClient(this.network.rpc);\n        if (this.network.filfoxAPI) {\n            this.filfox = new Filfox(this.network.filfoxAPI);\n        }\n    }\n    validateAddress(address) {\n        return validateAddressString(address);\n    }\n    addressExplorerLink(address) {\n        // TODO: Check network.\n        return `https://filfox.info/en/address/${address}`;\n    }\n    /**\n     * See [[LockChain.isLockAsset]].\n     */\n    isLockAsset(asset) {\n        return asset === this.feeAsset;\n    }\n    _assertAssetIsSupported(asset) {\n        if (!this.isLockAsset(asset)) {\n            throw new Error(`Asset ${asset} not supported on ${this.chain}.`);\n        }\n    }\n    /**\n     * See [[LockChain.assetDecimals]].\n     */\n    assetDecimals(asset) {\n        this._assertAssetIsSupported(asset);\n        return this.network.nativeAsset.decimals;\n    }\n    watchForDeposits(asset, fromPayload, address, onInput, _removeInput, listenerCancelled) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._assertAssetIsSupported(asset);\n            if (fromPayload.chain !== this.chain) {\n                throw new Error(`Invalid payload for chain ${fromPayload.chain} instead of ${this.chain}.`);\n            }\n            // If there's too many logs to catch-up on, fetch the transactions from\n            // Filfox (mainnet only)\n            let progress = 0;\n            while (true) {\n                if (listenerCancelled()) {\n                    return;\n                }\n                let height = 0;\n                try {\n                    height = yield getHeight(this.client);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    console.error(error);\n                }\n                const logLimit = 100;\n                const fromBlock = height - logLimit;\n                const logsToCatchUp = height - progress;\n                let fetched = false;\n                if (this.filfox && (logsToCatchUp > logLimit || height === 0)) {\n                    try {\n                        const size = 100;\n                        let page = 0;\n                        while (true) {\n                            const { deposits, totalCount } = yield tryNTimes(() => __awaiter(this, void 0, void 0, function* () {\n                                if (!this.filfox) {\n                                    throw new Error(`Filfox not defined.`);\n                                }\n                                return this.filfox.fetchDeposits(address, page, size);\n                            }), 5, 5 * SECONDS);\n                            yield Promise.all((deposits || []).map((tx) => __awaiter(this, void 0, void 0, function* () {\n                                return onInput({\n                                    chain: this.chain,\n                                    txid: toURLBase64(Buffer.from(new CID(tx.cid).bytes)),\n                                    txidFormatted: tx.cid,\n                                    txindex: \"0\",\n                                    amount: tx.amount,\n                                });\n                            })));\n                            if (size * (page + 1) >= totalCount) {\n                                break;\n                            }\n                            page += 1;\n                            yield sleep(10 * SECONDS);\n                        }\n                        fetched = true;\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                    catch (error) {\n                        // Ignore error.\n                    }\n                }\n                if (!fetched) {\n                    const txs = yield fetchDeposits(this.client, address, this.network.addressPrefix, fromBlock, height);\n                    yield Promise.all((txs || []).map((tx) => __awaiter(this, void 0, void 0, function* () {\n                        return onInput({\n                            chain: this.chain,\n                            txid: toURLBase64(Buffer.from(new CID(tx.cid).bytes)),\n                            txidFormatted: tx.cid,\n                            txindex: \"0\",\n                            amount: tx.amount,\n                        });\n                    })));\n                }\n                progress = height;\n                yield sleep(15 * SECONDS);\n            }\n        });\n    }\n    /**\n     * See [[LockChain.transactionConfidence]].\n     */\n    transactionConfidence(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cid = transaction.txidFormatted;\n            let msg;\n            try {\n                msg = yield fetchMessage(this.client, cid, this.network.addressPrefix);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                if (this.filfox) {\n                    try {\n                        msg = yield this.filfox.fetchMessage(cid);\n                    }\n                    catch (errorInner) {\n                        console.error(errorInner);\n                    }\n                }\n                throw error;\n            }\n            return new BigNumber(msg.confirmations);\n        });\n    }\n    isDepositAsset(asset) {\n        return asset === this.network.nativeAsset.symbol;\n    }\n    getBalance(asset, address) {\n        this._assertAssetIsSupported(asset);\n        if (!this.validateAddress(address)) {\n            throw new Error(`Invalid address ${address}.`);\n        }\n        // TODO: Implement.\n        return new BigNumber(0);\n    }\n    /**\n     * See [[LockChain.getGatewayAddress]].\n     */\n    createGatewayAddress(asset, fromPayload, shardPublicKey, gHash) {\n        this._assertAssetIsSupported(asset);\n        if (fromPayload.chain !== this.chain) {\n            throw new Error(`Invalid payload for chain ${fromPayload.chain} instead of ${this.chain}.`);\n        }\n        const ec = new elliptic.ec(\"secp256k1\");\n        // Decode compressed RenVM public key.\n        const renVMPublicKey = ec.keyFromPublic(shardPublicKey);\n        // Interpret gHash as a private key.\n        const gHashKey = ec.keyFromPrivate(gHash);\n        // If `NO_PARAMS_FLAG` is set, set renVM public key and gHash public key,\n        // and recreate key pair from resulting curve point.\n        const derivedPublicKey = ec.keyFromPublic(renVMPublicKey\n            .getPublic()\n            .add(gHashKey.getPublic()));\n        const bytes = Buffer.from(blake2b(Buffer.from(derivedPublicKey.getPublic(false, \"hex\"), \"hex\"), null, 20));\n        return this.bytesToAddress(bytes);\n    }\n    /**\n     * See [[LockChain.addressToBytes]].\n     */\n    addressToBytes(address) {\n        return Buffer.from(decodeAddress(address).str);\n    }\n    /**\n     * See [[LockChain.addressToBytes]].\n     */\n    bytesToAddress(bytes) {\n        if (bytes.length === 21) {\n            bytes = Buffer.from(bytes.slice(1, 21));\n        }\n        // secp256k1 protocol prefix\n        const protocol = 1;\n        const addressObject = {\n            str: Buffer.concat([Buffer.from([protocol]), bytes]),\n            protocol: () => protocol,\n            payload: () => bytes,\n        };\n        return encodeAddress(this.network.addressPrefix, addressObject);\n    }\n    formattedTransactionHash(tx) {\n        return new CID(fromBase64(tx.txid)).toString();\n    }\n    getOutputPayload(asset, _type, toPayload) {\n        this._assertAssetIsSupported(asset);\n        return {\n            to: toPayload.address,\n            toBytes: Buffer.from(new CID(toPayload.address).bytes),\n            payload: Buffer.from([]),\n        };\n    }\n    // Methods for initializing mints and burns ////////////////////////////////\n    /**\n     * When burning, you can call `Filecoin.Address(\"...\")` to make the address\n     * available to the burn params.\n     *\n     * @category Main\n     */\n    Address(address) {\n        // Type validation\n        assertType(\"string\", { address });\n        if (!this.validateAddress(address)) {\n            throw withCode(new Error(`Invalid ${this.chain} address: ${String(address)}`), RenJSError.PARAMETER_ERROR);\n        }\n        return {\n            chain: this.chain,\n            address,\n        };\n    }\n    /**\n     * When burning, you can call `Filecoin.Address(\"...\")` to make the address\n     * available to the burn params.\n     *\n     * @category Main\n     */\n    GatewayAddress() {\n        return {\n            chain: this.chain,\n        };\n    }\n}\nFilecoin.chain = \"Filecoin\";\nFilecoin.assets = {\n    FIL: \"FIL\",\n};\nFilecoin.configMap = FilecoinConfigMap;\n//# sourceMappingURL=filecoin.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport bech32 from \"bech32\";\nimport BigNumber from \"bignumber.js\";\nimport elliptic from \"elliptic\";\nimport { assertType, fromBase64, isHex, RenJSError, RenNetwork, toURLBase64, withCode, } from \"@renproject/utils\";\nimport { AccAddress, Key } from \"@terra-money/terra.js\";\nimport { TerraDev } from \"./api/terraDev\";\nimport { isTerraNetworkConfig } from \"./api/types\";\nexport const TerraMainnet = {\n    selector: \"Terra\",\n    chainId: \"columbus-5\",\n    nativeAsset: {\n        name: \"Luna\",\n        symbol: \"LUNA\",\n        decimals: 18,\n    },\n    explorer: \"https://finder.terra.money/columbus\",\n    apiUrl: \"https://fcd.terra.dev\",\n};\nexport const TerraTestnet = {\n    selector: \"Terra\",\n    chainId: \"bombay-12\",\n    nativeAsset: {\n        name: \"Luna\",\n        symbol: \"LUNA\",\n        decimals: 18,\n    },\n    explorer: \"https://finder.terra.money/bombay\",\n    apiUrl: \"https://bombay-fcd.terra.dev\",\n};\nexport const TerraConfigMap = {\n    [RenNetwork.Mainnet]: TerraMainnet,\n    [RenNetwork.Testnet]: TerraTestnet,\n    [RenNetwork.Devnet]: TerraTestnet,\n};\n/**\n * Terra implements the LockChain interface for Terra (https://terra.money)\n * and it's asset LUNA.\n */\nexport class Terra {\n    constructor(network) {\n        this.chain = Terra.chain;\n        this.name = Terra.chain;\n        this.configMap = TerraConfigMap;\n        this.assets = Terra.assets;\n        this.getBalance = (asset, address) => __awaiter(this, void 0, void 0, function* () {\n            this._assertAssetIsSupported(asset);\n            if (!this.validateAddress(address)) {\n                throw new Error(`Invalid address ${address}.`);\n            }\n            // TODO: Implement.\n            return new BigNumber(0);\n        });\n        const networkConfig = isTerraNetworkConfig(network)\n            ? network\n            : TerraConfigMap[network];\n        if (!networkConfig) {\n            if (typeof network === \"string\") {\n                throw new Error(`Invalid RenVM network ${network}.`);\n            }\n            else {\n                throw new Error(`Invalid Terra network config.`);\n            }\n        }\n        this.network = networkConfig;\n        this.chain = this.network.selector;\n        this.api = new TerraDev(this.network);\n    }\n    validateAddress(address) {\n        assertType(\"string\", { address: address });\n        return AccAddress.validate(address);\n    }\n    validateTransaction(transaction) {\n        return (isHex(typeof transaction === \"string\"\n            ? transaction\n            : transaction.txidFormatted, { length: 32 }) && fromBase64(transaction.txid).length === 32);\n    }\n    addressExplorerLink(address) {\n        return new URL(`/account/${address}`, /* base */ this.network.explorer)\n            .href;\n    }\n    transactionExplorerLink(transaction) {\n        return new URL(`/tx/${transaction.txidFormatted}`, \n        /* base */ this.network.explorer).href;\n    }\n    formattedTransactionHash(tx) {\n        return fromBase64(tx.txid).toString(\"hex\").toUpperCase();\n    }\n    isLockAsset(asset) {\n        return this.assets[asset] !== undefined;\n    }\n    /**\n     * See [[LockChain.isLockAsset]].\n     */\n    isDepositAsset(asset) {\n        return this.isLockAsset(asset);\n    }\n    _assertAssetIsSupported(asset) {\n        if (!this.isLockAsset(asset)) {\n            throw new Error(`Unsupported asset ${asset}.`);\n        }\n    }\n    /**\n     * See [[LockChain.assetDecimals]].\n     */\n    assetDecimals(asset) {\n        switch (asset) {\n            case Terra.assets.LUNA:\n                return 6;\n        }\n        throw new Error(`Unsupported asset ${String(asset)}.`);\n    }\n    /**\n     * See [[LockChain.getDeposits]].\n     */\n    watchForDeposits(asset, fromPayload, address, onInput, _removeInput, listenerCancelled) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._assertAssetIsSupported(asset);\n            if (fromPayload.chain !== this.chain) {\n                throw new Error(`Invalid payload for chain ${fromPayload.chain} instead of ${this.chain}.`);\n            }\n            while (true) {\n                if (listenerCancelled()) {\n                    return;\n                }\n                const txs = yield this.api.fetchDeposits(address);\n                yield Promise.all(txs.map((tx) => __awaiter(this, void 0, void 0, function* () {\n                    return onInput({\n                        chain: this.chain,\n                        txid: toURLBase64(Buffer.from(tx.hash, \"hex\")),\n                        txidFormatted: tx.hash.toUpperCase(),\n                        txindex: \"0\",\n                        amount: tx.amount,\n                    });\n                })));\n            }\n        });\n    }\n    /**\n     * See [[LockChain.transactionConfidence]].\n     */\n    transactionConfidence(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.network) {\n                throw new Error(`${this.name} object not initialized.`);\n            }\n            return yield this.api.fetchConfirmations(transaction.txidFormatted);\n        });\n    }\n    /**\n     * See [[LockChain.getGatewayAddress]].\n     */\n    createGatewayAddress(asset, fromPayload, shardPublicKey, gHash) {\n        this._assertAssetIsSupported(asset);\n        if (fromPayload.chain !== this.chain) {\n            throw new Error(`Invalid payload for chain ${fromPayload.chain} instead of ${this.chain}.`);\n        }\n        const ec = new elliptic.ec(\"secp256k1\");\n        // Decode compressed RenVM public key.\n        const renVMPublicKey = ec.keyFromPublic(shardPublicKey);\n        // Interpret gHash as a private key.\n        const gHashKey = ec.keyFromPrivate(gHash);\n        // If `NO_PARAMS_FLAG` is set, set renVM public key and gHash public key,\n        // and recreate key pair from resulting curve point.\n        const derivedPublicKey = ec.keyFromPublic(renVMPublicKey\n            .getPublic()\n            .add(gHashKey.getPublic()));\n        const newCompressedPublicKey = Buffer.from(derivedPublicKey.getPublic().encodeCompressed());\n        // @ts-expect-error `Cannot create an instance of an abstract class`\n        const address = new Key(newCompressedPublicKey);\n        return address.accAddress;\n    }\n    getOutputPayload(asset, _type, toPayload) {\n        this._assertAssetIsSupported(asset);\n        return {\n            to: toPayload.address,\n            toBytes: Buffer.from(bech32.fromWords(bech32.decode(toPayload.address).words)),\n            payload: Buffer.from([]),\n        };\n    }\n    // Methods for initializing mints and burns ////////////////////////////////\n    /**\n     * When burning, you can call `Terra.Address(\"...\")` to make the address\n     * available to the burn params.\n     *\n     * @category Main\n     */\n    Address(address) {\n        // Type validation\n        assertType(\"string\", { address });\n        if (!this.validateAddress(address)) {\n            throw withCode(new Error(`Invalid ${this.chain} address: ${String(address)}`), RenJSError.PARAMETER_ERROR);\n        }\n        return {\n            chain: this.chain,\n            address,\n        };\n    }\n    /**\n     * When burning, you can call `Terra.Address(\"...\")` to make the address\n     * available to the burn params.\n     *\n     * @category Main\n     */\n    GatewayAddress() {\n        return {\n            chain: this.chain,\n        };\n    }\n}\nTerra.chain = \"Terra\";\nTerra.configMap = TerraConfigMap;\n// The assets native to Terra.\nTerra.assets = {\n    LUNA: \"LUNA\",\n};\n//# sourceMappingURL=terra.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { crossChainParamsType, } from \"@renproject/provider\";\nimport { ChainTransactionStatus, eventEmitter, generateTransactionHash, newPromiEvent, SECONDS, sleep, toURLBase64, TxStatus, } from \"@renproject/utils\";\nexport const RENVM_CHAIN = \"RenVM\";\nclass RenVMTxSubmitter {\n    constructor(provider, selector, params, signatureCallback) {\n        this.chain = \"RenVM\";\n        this.version = \"1\";\n        this.updateStatus = (status) => {\n            this.status = Object.assign(Object.assign({}, this.status), status);\n            this.eventEmitter.emit(\"status\", this.status);\n            return this.status;\n        };\n        this.provider = provider;\n        this.selector = selector;\n        this.params = params;\n        this.eventEmitter = eventEmitter();\n        this.signatureCallback = signatureCallback;\n        this._hash = toURLBase64(generateTransactionHash(this.version, this.selector, this.params));\n        this.status = {\n            chain: RENVM_CHAIN,\n            status: ChainTransactionStatus.Ready,\n            target: 1,\n            transaction: {\n                chain: RENVM_CHAIN,\n                txid: this._hash,\n                txidFormatted: this._hash,\n                txindex: \"0\",\n            },\n        };\n    }\n    get tx() {\n        return {\n            hash: this._hash,\n            selector: this.selector,\n            version: this.version,\n            in: this.params,\n        };\n    }\n    submit() {\n        const promiEvent = newPromiEvent(this.eventEmitter);\n        (() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.provider.submitTx(this.tx);\n            }\n            catch (error) {\n                try {\n                    // Check if the darknodes have already seen the transaction\n                    yield this.provider.queryTx(this._hash);\n                    // TODO: Set status based on result.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (errorInner) {\n                    // Retry submitting to reduce chance of network issues\n                    // causing problems.\n                    yield this.provider.submitTx(this.tx, 2);\n                }\n            }\n            return this.updateStatus({\n                status: ChainTransactionStatus.Confirming,\n            });\n            // const response = {\n            //     version: parseInt(tx.version),\n            //     hash: tx.hash,\n            //     selector: tx.selector,\n            //     in: unmarshalTypedPackValue(tx.in),\n            // };\n        }))()\n            .then(promiEvent.resolve)\n            .catch(promiEvent.reject);\n        return promiEvent;\n    }\n    wait() {\n        const promiEvent = newPromiEvent(this.eventEmitter);\n        (() => __awaiter(this, void 0, void 0, function* () {\n            let tx;\n            let existingStatus = undefined;\n            while (true) {\n                try {\n                    tx = yield this.provider.queryTx(this._hash, 1);\n                    if (tx && tx.txStatus === TxStatus.TxStatusDone) {\n                        break;\n                    }\n                    if (tx.txStatus !== existingStatus ||\n                        !this.status.response) {\n                        try {\n                            existingStatus = tx.txStatus;\n                            this.updateStatus({\n                                response: tx,\n                                status: ChainTransactionStatus.Done,\n                            });\n                        }\n                        catch (error) {\n                            // Ignore non-critical error.\n                        }\n                    }\n                }\n                catch (error) {\n                    if (error instanceof Error &&\n                        /(not found)|(not available)/.exec(String((error || {}).message))) {\n                        // ignore\n                    }\n                    else {\n                        console.error(error);\n                        // TODO: throw unexpected errors\n                    }\n                }\n                yield sleep(15 * SECONDS);\n            }\n            const maybeCrossChainTx = tx;\n            if (maybeCrossChainTx.out &&\n                maybeCrossChainTx.out.revert &&\n                maybeCrossChainTx.out.revert.length > 0) {\n                const revertMessage = maybeCrossChainTx.out.revert;\n                this.updateStatus({\n                    status: ChainTransactionStatus.Reverted,\n                    revertReason: revertMessage,\n                });\n                throw new Error(`RenVM transaction reverted: ${revertMessage}`);\n            }\n            if (this.signatureCallback) {\n                try {\n                    this.signatureCallback(tx);\n                }\n                catch (error) {\n                    // TODO: Handle error.\n                }\n            }\n            return this.updateStatus({\n                response: tx,\n                status: ChainTransactionStatus.Done,\n            });\n        }))()\n            .then(promiEvent.resolve)\n            .catch(promiEvent.reject);\n        return promiEvent;\n    }\n}\nexport class RenVMCrossChainTxSubmitter extends RenVMTxSubmitter {\n    constructor(provider, selector, params, signatureCallback) {\n        super(provider, selector, {\n            t: crossChainParamsType,\n            v: {\n                txid: toURLBase64(params.txid),\n                txindex: params.txindex.toFixed(),\n                amount: params.amount.toFixed(),\n                payload: toURLBase64(params.payload),\n                phash: toURLBase64(params.phash),\n                to: params.to,\n                nonce: toURLBase64(params.nonce),\n                nhash: toURLBase64(params.nhash),\n                gpubkey: toURLBase64(params.gpubkey),\n                ghash: toURLBase64(params.ghash),\n            },\n        }, signatureCallback);\n    }\n}\n//# sourceMappingURL=renVMTxSubmitter.js.map","import { Script } from \"./script\";\nconst gatewayScript = (gGubKeyHash, gHash) => new Script()\n    .addData(gHash)\n    .addOp(Script.OP.OP_DROP)\n    .addOp(Script.OP.OP_DUP)\n    .addOp(Script.OP.OP_HASH160)\n    .addData(gGubKeyHash)\n    .addOp(Script.OP.OP_EQUALVERIFY)\n    .addOp(Script.OP.OP_CHECKSIG);\nexport const createAddressBuffer = (gGubKeyHash, gHash, prefix) => gatewayScript(gGubKeyHash, gHash).toAddress(prefix);\nexport const calculatePubKeyScript = (gGubKeyHash, gHash) => gatewayScript(gGubKeyHash, gHash).toScriptHashOut();\n//# sourceMappingURL=index.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport BigNumber from \"bignumber.js\";\nimport { fromBase64 } from \"../encodings\";\nexport var PackPrimitive;\n(function (PackPrimitive) {\n    PackPrimitive[\"Bool\"] = \"bool\";\n    PackPrimitive[\"U8\"] = \"u8\";\n    PackPrimitive[\"U16\"] = \"u16\";\n    PackPrimitive[\"U32\"] = \"u32\";\n    PackPrimitive[\"U64\"] = \"u64\";\n    PackPrimitive[\"U128\"] = \"u128\";\n    PackPrimitive[\"U256\"] = \"u256\";\n    PackPrimitive[\"Str\"] = \"string\";\n    PackPrimitive[\"Bytes\"] = \"bytes\";\n    PackPrimitive[\"Bytes32\"] = \"bytes32\";\n    PackPrimitive[\"Bytes65\"] = \"bytes65\";\n})(PackPrimitive || (PackPrimitive = {}));\n/**\n * Check that the passed-in value is a PackStructType - i.e. an object that has\n * a single field called `struct` which stores an array.\n */\nexport const isPackStructType = (type) => typeof type === \"object\" &&\n    type !== null &&\n    Object.keys(type).length === 1 &&\n    type.struct !== undefined &&\n    Array.isArray(type.struct);\n/**\n * Check that the passed-in value is a PackListType - i.e. an object that has\n * a single field called `list`.\n */\nexport const isPackListType = (type) => typeof type === \"object\" && type.list !== undefined;\n/**\n * Takes a pack primitive value (bool, uint, string or bytes) and convert it to\n * its corresponding JavaScript value (bool, BigNumber, string or Buffer).\n */\nexport const unmarshalPackPrimitive = (type, value) => {\n    switch (type) {\n        // Booleans\n        case PackPrimitive.Bool:\n            return value;\n        // Integers\n        case PackPrimitive.U8:\n        case PackPrimitive.U16:\n        case PackPrimitive.U32:\n        case PackPrimitive.U64:\n        case PackPrimitive.U128:\n        case PackPrimitive.U256:\n            return new BigNumber(value);\n        // Strings\n        case PackPrimitive.Str:\n            return value;\n        // Bytes\n        case PackPrimitive.Bytes:\n        case PackPrimitive.Bytes32:\n        case PackPrimitive.Bytes65:\n            return fromBase64(value);\n    }\n};\n/**\n * Takes a pack struct and converts it to a JavaScript object.\n */\nexport const unmarshalPackStruct = (type, value) => {\n    const struct = {};\n    for (const member of type.struct) {\n        const keys = Object.keys(member);\n        if (keys.length === 0) {\n            throw new Error(`Invalid struct member with no entries.`);\n        }\n        if (keys.length > 1) {\n            throw new Error(`Invalid struct member with multiple entries.`);\n        }\n        const key = Object.keys(member)[0];\n        const memberType = member[key];\n        if (value && !value.hasOwnProperty(key)) {\n            throw new Error(`Missing pack value for key ${key}.`);\n        }\n        struct[key] = unmarshalPackValue(memberType, value[key]);\n    }\n    return struct;\n};\n/**\n * Unmarshals a pack list.\n */\nexport const unmarshalPackList = (type, value) => value.map((element) => unmarshalPackValue(type.list, element));\n/**\n * Converts the passed-in value to its corresponding JavaScript value based on\n * the passed-in type.\n */\nexport const unmarshalPackValue = (type, value) => {\n    if (isPackListType(type)) {\n        return unmarshalPackList(type, value);\n    }\n    else if (isPackStructType(type)) {\n        return unmarshalPackStruct(type, value);\n    }\n    else if (typeof type === \"string\") {\n        if (type === \"nil\")\n            return null;\n        return unmarshalPackPrimitive(type, value);\n    }\n    let valueString;\n    try {\n        valueString = JSON.stringify(value);\n    }\n    catch (_error) {\n        valueString = String(value);\n    }\n    if (valueString.length > 20) {\n        valueString = `${valueString.slice(0, 17)}...`;\n    }\n    throw new Error(`Unknown value type ${String(type)}${!type ? ` for value ${valueString}` : \"\"}.`);\n};\n/**\n * Converts a { t, v } pack object, using `t` as a pack type and `v` as a pack\n * value.\n */\nexport const unmarshalTypedPackValue = ({ t, v }) => unmarshalPackValue(t, v);\n//# sourceMappingURL=pack.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { assertType } from \"@renproject/utils\";\nconst mintABITemplate = {\n    constant: false,\n    inputs: [\n        {\n            name: \"_amount\",\n            type: \"uint256\",\n        },\n        {\n            name: \"_nHash\",\n            type: \"bytes32\",\n        },\n        {\n            name: \"_sig\",\n            type: \"bytes\",\n        },\n    ],\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n};\nconst tupleRegex = /tuple\\(([a-zA-Z0-9]+(,[a-zA-Z0-9]+)*)\\)/;\n/**\n * If the type of an Ethereum arg matches `tuple(...)`, then it needs to include\n * a `components` array that provides the name and type of each of the tuple's\n * values. If it wasn't included, `fixTuple` will create the components array.\n */\nconst fixTuple = (argument) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { value } = argument, args = __rest(argument, [\"value\"]);\n    try {\n        // If type is `tuple(...)` but components haven't been\n        // been passed in, add them.\n        const match = args && args.type && tupleRegex.exec(args.type);\n        if (match && !argument.components) {\n            const types = match[1].split(\",\");\n            const components = [];\n            for (let i = 0; i < types.length; i++) {\n                components[i] = {\n                    name: String(i),\n                    type: types[i],\n                };\n            }\n            return Object.assign(Object.assign({}, args), { components });\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        console.error(error);\n    }\n    return args;\n};\nexport const payloadToABI = (methodName, payload) => {\n    // Type validation\n    assertType(\"string\", { methodName });\n    (payload || []).map(({ type, name }) => assertType(\"string\", { type, name }));\n    return [\n        {\n            name: methodName,\n            type: \"function\",\n            stateMutability: \"payable\",\n            inputs: [\n                ...(payload || []).map(fixTuple).map((value) => (Object.assign({ type: value.type, name: value.name }, (value.components\n                    ? {\n                        components: value.components,\n                    }\n                    : undefined)))),\n            ],\n            outputs: [],\n        },\n    ];\n};\nexport const payloadToMintABI = (methodName, payload) => {\n    // Type validation\n    assertType(\"string\", { methodName });\n    (payload || []).map(({ type, name }) => assertType(\"string\", { type, name }));\n    return Object.assign(Object.assign({}, mintABITemplate), { name: methodName, inputs: [\n            ...(payload || []).map(fixTuple).map((value) => (Object.assign({ type: value.type, name: value.name }, (value.components\n                ? {\n                    components: value.components,\n                }\n                : undefined)))),\n            ...(mintABITemplate.inputs ? mintABITemplate.inputs : []),\n        ] });\n};\nexport var OverrideContractCallError;\n(function (OverrideContractCallError) {\n    OverrideContractCallError[\"OverrideArrayLengthError\"] = \"Contract call override must be same length as contract calls array.\";\n})(OverrideContractCallError || (OverrideContractCallError = {}));\nexport const overrideContractCall = (contractCall, override) => {\n    const overrideParams = (override.contractParams || []).reduce((acc, param) => {\n        if (param.name) {\n            acc[param.name] = param;\n        }\n        return acc;\n    }, {});\n    let txConfig;\n    if (typeof contractCall.txConfig === \"object\" &&\n        typeof override.txConfig === \"object\") {\n        txConfig = Object.assign(Object.assign({}, contractCall.txConfig), override.txConfig);\n    }\n    else {\n        txConfig = override.txConfig || contractCall.txConfig;\n    }\n    return Object.assign(Object.assign(Object.assign({}, contractCall), override), { \n        // Clone txConfig\n        txConfig, \n        // Clone contractParams\n        values: Object.assign(Object.assign({}, contractCall.values), overrideParams) });\n};\nexport const overrideContractCalls = (contractCalls, override) => {\n    if (Array.isArray(override) && override.length !== contractCalls.length) {\n        throw new Error(OverrideContractCallError.OverrideArrayLengthError);\n    }\n    return contractCalls.map((contractCall, i) => {\n        const contractCallOverride = Array.isArray(override)\n            ? // If override is an array, there should be an array for each call.\n                override[i]\n            : // If there's only one override, apply it to the last contract call.\n                i === contractCalls.length - 1\n                    ? override\n                    : // Default to empty object.\n                        {};\n        return overrideContractCall(contractCall, contractCallOverride);\n    });\n};\n//# sourceMappingURL=abi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport { Contract } from \"ethers\";\nimport { fromHex, InputType, isDefined, OutputType, RenJSError, withCode, } from \"@renproject/utils\";\nimport { getERC20Instance } from \"../../contracts\";\nimport { payloadToABI } from \"../abi\";\nimport { fixEvmTransactionConfig } from \"../evmTxSubmitter\";\nimport { rawEncode } from \"../generic\";\nexport var EVMParam;\n(function (EVMParam) {\n    // Always available\n    EVMParam[\"EVM_TRANSACTION_TYPE\"] = \"__EVM_TRANSACTION_TYPE__\";\n    EVMParam[\"EVM_TOKEN_ADDRESS\"] = \"__EVM_TOKEN_ADDRESS__\";\n    EVMParam[\"EVM_TOKEN_DECIMALS\"] = \"__EVM_TOKEN_DECIMALS__\";\n    EVMParam[\"EVM_GATEWAY_IS_DEPOSIT_ASSET\"] = \"__EVM_GATEWAY_IS_DEPOSIT_ASSET__\";\n    EVMParam[\"EVM_GATEWAY_DEPOSIT_ADDRESS\"] = \"__EVM_GATEWAY_DEPOSIT_ADDRESS__\";\n    EVMParam[\"EVM_TRANSFER_WITH_LOG_CONTRACT\"] = \"__EVM_TRANSFER_WITH_LOG_CONTRACT__\";\n    EVMParam[\"EVM_ACCOUNT\"] = \"__EVM_ACCOUNT__\";\n    EVMParam[\"EVM_ACCOUNT_IS_CONTRACT\"] = \"__EVM_ACCOUNT_IS_CONTRACT__\";\n    EVMParam[\"EVM_GATEWAY\"] = \"__EVM_GATEWAY__\";\n    EVMParam[\"EVM_ASSET\"] = \"__EVM_ASSET__\";\n    // Available when minting or releasing\n    EVMParam[\"EVM_AMOUNT\"] = \"__EVM_AMOUNT__\";\n    EVMParam[\"EVM_NHASH\"] = \"__EVM_NHASH__\";\n    EVMParam[\"EVM_PHASH\"] = \"__EVM_PHASH__\";\n    EVMParam[\"EVM_SIGNATURE\"] = \"__EVM_SIGNATURE__\";\n    EVMParam[\"EVM_SIGNATURE_R\"] = \"__EVM_SIGNATURE_R__\";\n    EVMParam[\"EVM_SIGNATURE_S\"] = \"__EVM_SIGNATURE_S__\";\n    EVMParam[\"EVM_SIGNATURE_V\"] = \"__EVM_SIGNATURE_V__\";\n    // Available when locking or burning\n    EVMParam[\"EVM_TO_CHAIN\"] = \"__EVM_TO_CHAIN__\";\n    EVMParam[\"EVM_TO_ADDRESS\"] = \"__EVM_TO_ADDRESS__\";\n    EVMParam[\"EVM_TO_ADDRESS_BYTES\"] = \"__EVM_TO_ADDRESS_BYTES__\";\n    EVMParam[\"EVM_TO_PAYLOAD\"] = \"__EVM_TO_PAYLOAD__\";\n})(EVMParam || (EVMParam = {}));\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isEVMParam = (value) => Object.values(EVMParam).indexOf(value) >= 0;\nconst replaceRenParam = (value, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n    let valueOrParam = isEVMParam(value) ? evmParams[value] : value;\n    if (typeof valueOrParam === \"function\") {\n        valueOrParam = yield valueOrParam();\n    }\n    return valueOrParam;\n});\n// Replace contract address and parameter values with Ren parameters.\nconst resolveEvmContractParams = (payload, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n    return Object.assign(Object.assign({}, payload), { params: Object.assign(Object.assign({}, payload.params), { to: yield replaceRenParam(payload.params.to, evmParams), params: yield Promise.all(payload.params.params.map((value) => __awaiter(void 0, void 0, void 0, function* () {\n                return (Object.assign(Object.assign({}, value), { value: yield replaceRenParam(value.value, evmParams) }));\n            }))) }) });\n});\nexport const contractPayloadHandler = {\n    getSetup: (_network, _signer, payload, _evmParams, _getPayloadHandler) => payload.setup || {},\n    getPayload: (network, _signer, payload, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            payload = yield resolveEvmContractParams(payload, evmParams);\n        }\n        catch (error) {\n            throw withCode(new Error(`Error getting contract-call payload: ${String(error.message)}`), RenJSError.PARAMETER_ERROR);\n        }\n        const args = payload.params.params.filter((arg) => !arg.notInPayload);\n        for (const arg of args) {\n            if (arg.value === undefined) {\n                throw withCode(new Error(`Parameter '${arg.name}' is undefined.`), RenJSError.PARAMETER_ERROR);\n            }\n        }\n        const types = args.map((param) => param.type);\n        const values = args.map((param) => param.value);\n        let p;\n        try {\n            p = rawEncode(types, values);\n        }\n        catch (error) {\n            throw withCode(new Error(`Error encoding ${network.selector} parameters: ${String(error.message)}`), RenJSError.PARAMETER_ERROR);\n        }\n        return {\n            to: payload.params.to,\n            toBytes: fromHex(payload.params.to),\n            payload: p,\n        };\n    }),\n    submit: (network, signer, payload, evmParams, overrides) => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            payload = yield resolveEvmContractParams(payload, evmParams);\n        }\n        catch (error) {\n            throw withCode(new Error(`Error resolving parameters for contract-call : ${String(error.message)}`), RenJSError.PARAMETER_ERROR);\n        }\n        // Get parameter values, checking first if each value has been\n        // overridden.\n        const params = payload.params.params.map((x) => overrides.params && isDefined(overrides.params[x.name])\n            ? Object.assign(Object.assign({}, x), { value: overrides.params[x.name] }) : x);\n        const paramTypes = params.map((x) => x.type);\n        const paramValues = params.map((x) => x.value);\n        for (const param of params) {\n            if (param.value === undefined) {\n                throw withCode(new Error(`Parameter '${param.name}' is undefined.`), RenJSError.PARAMETER_ERROR);\n            }\n        }\n        try {\n            rawEncode(paramTypes, paramValues);\n        }\n        catch (error) {\n            throw withCode(new Error(`Error encoding ${network.selector} parameters: ${String(error.message)}`), RenJSError.PARAMETER_ERROR);\n        }\n        const abi = payloadToABI(payload.params.method, params)[0];\n        if (!abi.name) {\n            throw new Error(`ABI must include method name.`);\n        }\n        const contract = new Contract(payload.params.to.toLowerCase(), [abi], signer);\n        return yield contract[abi.name](...paramValues, fixEvmTransactionConfig(payload.params.txConfig, overrides.txConfig));\n    }),\n};\nconst getContractFromAccount = (network, payload, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n    const amount = isDefined(payload.params.amount)\n        ? new BigNumber(payload.params.amount)\n            .shiftedBy(payload.params.convertToWei\n            ? yield evmParams[EVMParam.EVM_TOKEN_DECIMALS]()\n            : 0)\n            .toFixed()\n        : undefined;\n    switch (evmParams[EVMParam.EVM_TRANSACTION_TYPE]) {\n        case InputType.Lock:\n            if (!amount) {\n                throw withCode(new Error(`Must provide amount to .Account()`), RenJSError.PARAMETER_ERROR);\n            }\n            if (evmParams[EVMParam.EVM_GATEWAY_IS_DEPOSIT_ASSET]) {\n                return {\n                    chain: network.selector,\n                    type: \"contract\",\n                    params: {\n                        to: EVMParam.EVM_TRANSFER_WITH_LOG_CONTRACT,\n                        method: \"transferWithLog\",\n                        params: [\n                            {\n                                type: \"address\",\n                                name: \"to\",\n                                value: EVMParam.EVM_GATEWAY_DEPOSIT_ADDRESS,\n                            },\n                        ],\n                        txConfig: {\n                            value: amount,\n                        },\n                    },\n                };\n            }\n            return {\n                chain: network.selector,\n                type: \"contract\",\n                params: {\n                    to: EVMParam.EVM_GATEWAY,\n                    method: \"lock\",\n                    params: [\n                        {\n                            type: \"string\",\n                            name: \"recipientAddress\",\n                            value: EVMParam.EVM_TO_ADDRESS,\n                        },\n                        {\n                            type: \"string\",\n                            name: \"recipientChain\",\n                            value: EVMParam.EVM_TO_CHAIN,\n                        },\n                        {\n                            type: \"bytes\",\n                            name: \"recipientPayload\",\n                            value: EVMParam.EVM_TO_PAYLOAD,\n                        },\n                        {\n                            type: \"uint256\",\n                            name: \"amount\",\n                            value: amount,\n                        },\n                    ],\n                },\n                setup: {\n                    approval: {\n                        chain: network.selector,\n                        type: \"approval\",\n                        params: {\n                            token: EVMParam.EVM_TOKEN_ADDRESS,\n                            spender: EVMParam.EVM_GATEWAY,\n                            amount: amount,\n                        },\n                    },\n                },\n            };\n        case InputType.Burn:\n            if (!amount) {\n                throw withCode(new Error(`Must provide amount to .Account()`), RenJSError.PARAMETER_ERROR);\n            }\n            return {\n                chain: network.selector,\n                type: \"contract\",\n                params: {\n                    to: EVMParam.EVM_GATEWAY,\n                    method: \"burn\",\n                    params: [\n                        {\n                            type: \"bytes\",\n                            name: \"to\",\n                            value: EVMParam.EVM_TO_ADDRESS_BYTES,\n                        },\n                        {\n                            type: \"uint256\",\n                            name: \"amount\",\n                            value: amount,\n                        },\n                    ],\n                },\n            };\n        case OutputType.Mint:\n            // if (\n            //     payload.params.address.toLowerCase() !==\n            //         (await evmParams[EVMParam.EVM_ACCOUNT]()).toLowerCase() ||\n            //     evmParams[EVMParam.EVM_ACCOUNT_IS_CONTRACT]\n            // ) {\n            //     return {\n            //         chain: network.selector,\n            //         type: \"contract\",\n            //         params: {\n            //             to: EVMParam.EVM_GATEWAY,\n            //             method: \"mint\",\n            //             params: [\n            //                 {\n            //                     type: \"bytes32\",\n            //                     name: \"pHash\",\n            //                     value: EVMParam.EVM_PHASH,\n            //                     notInPayload: true,\n            //                 },\n            //                 {\n            //                     type: \"uint256\",\n            //                     name: \"amount\",\n            //                     value: EVMParam.EVM_AMOUNT,\n            //                     notInPayload: true,\n            //                 },\n            //                 {\n            //                     type: \"bytes32\",\n            //                     name: \"nHash\",\n            //                     value: EVMParam.EVM_NHASH,\n            //                     notInPayload: true,\n            //                 },\n            //                 {\n            //                     type: \"bytes\",\n            //                     name: \"calldata sig\",\n            //                     value: EVMParam.EVM_SIGNATURE,\n            //                     notInPayload: true,\n            //                 },\n            //             ],\n            //         },\n            //     };\n            // }\n            return {\n                chain: network.selector,\n                type: \"contract\",\n                params: {\n                    to: EVMParam.EVM_GATEWAY,\n                    method: \"mint\",\n                    params: [\n                        {\n                            type: \"bytes32\",\n                            name: \"pHash\",\n                            value: EVMParam.EVM_PHASH,\n                            notInPayload: true,\n                        },\n                        {\n                            type: \"uint256\",\n                            name: \"amount\",\n                            value: EVMParam.EVM_AMOUNT,\n                            notInPayload: true,\n                        },\n                        {\n                            type: \"bytes32\",\n                            name: \"nHash\",\n                            value: EVMParam.EVM_NHASH,\n                            notInPayload: true,\n                        },\n                        {\n                            type: \"bytes\",\n                            name: \"sig\",\n                            value: EVMParam.EVM_SIGNATURE,\n                            notInPayload: true,\n                        },\n                    ],\n                },\n            };\n        case OutputType.Release:\n            if (evmParams[EVMParam.EVM_GATEWAY_IS_DEPOSIT_ASSET]) {\n                return undefined;\n            }\n            // if (\n            //     payload.params.address.toLowerCase() !==\n            //         (await evmParams[EVMParam.EVM_ACCOUNT]()).toLowerCase() ||\n            //     evmParams[EVMParam.EVM_ACCOUNT_IS_CONTRACT]\n            // ) {\n            //     return {\n            //         chain: network.selector,\n            //         type: \"contract\",\n            //         params: {\n            //             to: network.addresses.BasicBridge,\n            //             method: \"release\",\n            //             params: [\n            //                 {\n            //                     type: \"string\",\n            //                     name: \"symbol\",\n            //                     value: EVMParam.EVM_ASSET,\n            //                 },\n            //                 {\n            //                     type: \"address\",\n            //                     name: \"recipient\",\n            //                     value: payload.params.address,\n            //                 },\n            //                 {\n            //                     type: \"uint256\",\n            //                     name: \"amount\",\n            //                     value: EVMParam.EVM_AMOUNT,\n            //                     notInPayload: true,\n            //                 },\n            //                 {\n            //                     type: \"bytes32\",\n            //                     name: \"nHash\",\n            //                     value: EVMParam.EVM_NHASH,\n            //                     notInPayload: true,\n            //                 },\n            //                 {\n            //                     type: \"bytes\",\n            //                     name: \"sig\",\n            //                     value: EVMParam.EVM_SIGNATURE,\n            //                     notInPayload: true,\n            //                 },\n            //             ],\n            //         },\n            //     };\n            // }\n            return {\n                chain: network.selector,\n                type: \"contract\",\n                params: {\n                    to: EVMParam.EVM_GATEWAY,\n                    method: \"release\",\n                    params: [\n                        {\n                            type: \"bytes32\",\n                            name: \"pHash\",\n                            value: EVMParam.EVM_PHASH,\n                            notInPayload: true,\n                        },\n                        {\n                            type: \"uint256\",\n                            name: \"amount\",\n                            value: EVMParam.EVM_AMOUNT,\n                            notInPayload: true,\n                        },\n                        {\n                            type: \"bytes32\",\n                            name: \"nHash\",\n                            value: EVMParam.EVM_NHASH,\n                            notInPayload: true,\n                        },\n                        {\n                            type: \"bytes\",\n                            name: \"calldata sig\",\n                            value: EVMParam.EVM_SIGNATURE,\n                            notInPayload: true,\n                        },\n                    ],\n                },\n            };\n        default:\n            throw new Error(`Unable to use .Account() for set-up call.`);\n    }\n});\nexport const accountPayloadHandler = {\n    getSetup: (network, signer, payload, evmParams, getPayloadHandler) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!contractPayloadHandler.getSetup) {\n            throw new Error(`Missing contract payload handler.`);\n        }\n        const contractPayload = yield getContractFromAccount(network, payload, evmParams);\n        if (!contractPayload) {\n            return {};\n        }\n        return yield contractPayloadHandler.getSetup(network, signer, contractPayload, evmParams, getPayloadHandler);\n    }),\n    getPayload: (network, signer, payload, evmParams, getPayloadHandler) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!contractPayloadHandler.getPayload) {\n            throw new Error(`Missing contract payload handler.`);\n        }\n        const contractPayload = yield getContractFromAccount(network, payload, evmParams);\n        if (!contractPayload) {\n            const to = yield replaceRenParam(payload.params.address, evmParams);\n            return {\n                to,\n                toBytes: fromHex(to),\n                payload: Buffer.from([]),\n            };\n        }\n        let p = yield contractPayloadHandler.getPayload(network, signer, contractPayload, evmParams, getPayloadHandler);\n        if (p.to.toLowerCase() ===\n            (yield evmParams[EVMParam.EVM_GATEWAY]()).toLowerCase()) {\n            const to = yield replaceRenParam(payload.params.address, evmParams);\n            p = Object.assign(Object.assign({}, p), { to, toBytes: fromHex(to) });\n        }\n        return p;\n    }),\n    submit: (network, signer, payload, evmParams, overrides, getPayloadHandler) => __awaiter(void 0, void 0, void 0, function* () {\n        const contractPayload = yield getContractFromAccount(network, payload, evmParams);\n        if (!contractPayload) {\n            throw new Error(`Unable to submit empty payload for release to ${payload.params.address}.`);\n        }\n        return contractPayloadHandler.submit(network, signer, contractPayload, evmParams, overrides, getPayloadHandler);\n    }),\n};\nconst resolveEvmApprovalParams = (payload, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n    return Object.assign(Object.assign({}, payload), { params: Object.assign(Object.assign({}, payload.params), { token: yield replaceRenParam(payload.params.token, evmParams), spender: yield replaceRenParam(payload.params.spender, evmParams), amount: yield replaceRenParam(payload.params.amount, evmParams) }) });\n});\nconst getContractFromApproval = (network, payload, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n    const amount = isDefined(payload.params.amount)\n        ? new BigNumber(payload.params.amount)\n            .shiftedBy(payload.params.convertToWei\n            ? yield evmParams[EVMParam.EVM_TOKEN_DECIMALS]()\n            : 0)\n            .toFixed()\n        : undefined;\n    return {\n        chain: network.selector,\n        type: \"contract\",\n        params: {\n            to: payload.params.token,\n            method: \"approve\",\n            params: [\n                {\n                    type: \"address\",\n                    name: \"to\",\n                    value: payload.params.spender,\n                },\n                {\n                    type: \"uint256\",\n                    name: \"amount\",\n                    value: amount,\n                },\n            ],\n        },\n    };\n});\nexport const approvalPayloadHandler = {\n    getSetup: (_network, _signer, payload, _evmParams, _getPayloadHandler) => payload.setup || {},\n    required: (_network, signer, payload, evmParams) => __awaiter(void 0, void 0, void 0, function* () {\n        payload = yield resolveEvmApprovalParams(payload, evmParams);\n        const token = payload.params.token;\n        const erc20Instance = getERC20Instance(signer, token);\n        const account = yield signer.getAddress();\n        const allowance = new BigNumber((yield erc20Instance.allowance(account, payload.params.spender)).toString());\n        return allowance.lt(new BigNumber(payload.params.amount));\n    }),\n    submit: (network, signer, payload, evmParams, overrides, getPayloadHandler) => __awaiter(void 0, void 0, void 0, function* () {\n        payload = yield resolveEvmApprovalParams(payload, evmParams);\n        return contractPayloadHandler.submit(network, signer, yield getContractFromApproval(network, payload, evmParams), evmParams, overrides, getPayloadHandler);\n    }),\n};\n//# sourceMappingURL=evmPayloadHandlers.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { isEvmNetworkConfig, } from \"./types\";\n/**\n * Returns an EvmExplorer with the format `${url}/address/${address}` and\n * `${url}/tx/${txHash}` for addresses and transactions respectively.\n */\nexport const StandardEvmExplorer = (baseUrl) => ({\n    url: baseUrl,\n    address: (address) => `${baseUrl.replace(/\\/$/, \"\")}/address/${address}`,\n    transaction: (txHash) => `${baseUrl.replace(/\\/$/, \"\")}/tx/${txHash || \"\"}`,\n});\nexport const resolveEvmNetworkConfig = (configMap, renNetwork) => {\n    if (!renNetwork) {\n        const defaultNetwork = configMap[RenNetwork.Mainnet] ||\n            configMap[RenNetwork.Testnet] ||\n            configMap[RenNetwork.Devnet];\n        if (!defaultNetwork) {\n            throw new Error(`Must provide network.`);\n        }\n        return defaultNetwork;\n    }\n    let networkConfig;\n    if (renNetwork && isEvmNetworkConfig(renNetwork)) {\n        networkConfig = renNetwork;\n    }\n    else {\n        networkConfig = configMap[renNetwork];\n    }\n    if (!networkConfig) {\n        throw new Error(`Unsupported network '${String(renNetwork\n            ? typeof renNetwork === \"string\"\n                ? renNetwork\n                : renNetwork.selector\n            : renNetwork)}'. Valid options are 'mainnet', 'testnet' or an EvmNetworkConfig object.`);\n    }\n    return networkConfig;\n};\n//# sourceMappingURL=utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Axios from \"axios\";\nimport { SECONDS } from \"@renproject/utils\";\nexport class Filfox {\n    constructor(filfoxApi) {\n        this.fetchDeposits = (address, \n        // paramsFilterBase64: string | undefined = undefined,\n        page = 0, size = 100) => __awaiter(this, void 0, void 0, function* () {\n            const heightURL = `${this.filfoxApi}tipset/recent?count=1`;\n            const heightResponse = (yield Axios.get(heightURL, {\n                timeout: 60 * SECONDS,\n            })).data;\n            if (!Array.isArray(heightResponse)) {\n                throw new Error(`Unable to fetch latest Filecoin height: ${heightResponse.error}`);\n            }\n            const height = heightResponse[0].height;\n            const messagesURL = `${this.filfoxApi}address/${address}/messages?pageSize=${size}&page=${page}&detailed`;\n            const messagesResponse = (yield Axios.get(messagesURL, {\n                timeout: 60 * SECONDS,\n            })).data;\n            if (messagesResponse.error !== undefined) {\n                throw new Error(`Unable to fetch Filecoin messages: ${messagesResponse.error}`);\n            }\n            const { messages, totalCount } = messagesResponse;\n            return {\n                deposits: messages\n                    .filter((message) => message.to === address)\n                    .map((message) => ({\n                    cid: message.cid,\n                    // to: message.to,\n                    amount: message.value,\n                    params: message.params,\n                    confirmations: height - message.height,\n                    nonce: message.nonce,\n                })),\n                // .filter(\n                //     (message) =>\n                //         paramsFilterBase64 === undefined ||\n                //         paramsFilterBase64 === null ||\n                //         message.params === paramsFilterBase64,\n                // ),\n                totalCount,\n            };\n        });\n        this.fetchMessage = (cid) => __awaiter(this, void 0, void 0, function* () {\n            const messagesURL = `${this.filfoxApi}message/${cid}`;\n            const message = (yield Axios.get(messagesURL, {\n                timeout: 60 * SECONDS,\n            })).data;\n            if (message.error !== undefined && message.error !== \"\") {\n                throw new Error(`Unable to fetch Filecoin messages: ${String(message.error)}`);\n            }\n            return {\n                cid: message.cid,\n                // to: message.to,\n                amount: message.value,\n                params: message.params,\n                confirmations: message.confirmations,\n                nonce: message.nonce,\n            };\n        });\n        this.filfoxApi = filfoxApi;\n    }\n}\n//# sourceMappingURL=filfox.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Axios from \"axios\";\nimport BigNumber from \"bignumber.js\";\nimport { SECONDS } from \"@renproject/utils\";\nconst extractDepositsFromTx = (chainHeight) => (tx) => {\n    const msgs = [];\n    try {\n        const decodedMsgs = tx.tx.value.msg;\n        for (let i = 0; i < decodedMsgs.length; i++) {\n            const msg = decodedMsgs[i];\n            if (msg.type === \"bank/MsgSend\") {\n                for (const amount of msg.value.amount) {\n                    msgs.push(Object.assign(Object.assign(Object.assign({}, tx), { messageIndex: i, to_address: msg.value.to_address, from_address: msg.value.from_address }), amount));\n                }\n            }\n        }\n    }\n    catch (_error) {\n        return [];\n    }\n    return msgs.map((msg) => ({\n        hash: msg.txhash,\n        messageIndex: msg.messageIndex,\n        from: msg.from_address,\n        to: msg.to_address,\n        denomination: msg.denom,\n        amount: msg.amount,\n        memo: msg.tx.value.memo,\n        confirmations: msg.height\n            ? chainHeight - parseInt(msg.height, 10)\n            : msg.height, // TODO\n    }));\n};\nconst concat = (x, y) => x.concat(y);\nexport class TerraDev {\n    constructor(terraNetwork) {\n        this.apiUrl = terraNetwork.apiUrl;\n        this.chainId = terraNetwork.chainId;\n    }\n    getHeight() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.apiUrl}/blocks/latest`;\n            const response = (yield Axios.get(url, {\n                timeout: 60 * SECONDS,\n            })).data;\n            return new BigNumber(response.block.header.height);\n        });\n    }\n    fetchDeposits(address, memo = undefined) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Paginated version:\n            // `${this.fcdUrl}/v1/txs?account=${address}&page=${\n            //     page + 1\n            // }&chainId=${this.chainId}`\n            const url = `${this.apiUrl}/v1/txs?account=${address}&chainId=${this.chainId}`;\n            const response = (yield Axios.get(url, {\n                timeout: 60 * SECONDS,\n            })).data;\n            const { txs } = response;\n            const filteredTxs = !memo\n                ? txs\n                : txs.filter((message) => message.tx &&\n                    message.tx.value &&\n                    message.tx.value.memo === memo);\n            // Create an entry for each message. Transactions can contain multiple\n            // messages.\n            // Fetch current height of the chain. Skip if no messages were found.\n            const chainHeight = filteredTxs.length > 0 ? (yield this.getHeight()).toNumber() : 0;\n            return filteredTxs\n                .map(extractDepositsFromTx(chainHeight))\n                .reduce(concat, [])\n                .filter((msg) => msg.to === address);\n        });\n    }\n    fetchConfirmations(hash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.apiUrl}/v1/tx/${hash}`;\n            const tx = (yield Axios.get(url, {\n                timeout: 60 * SECONDS,\n            })).data;\n            if (tx === null) {\n                throw new Error(`Unable to find Terra transaction ${hash}.`);\n            }\n            if (!tx.height) {\n                return new BigNumber(0);\n            }\n            // Fetch current height of the chain.\n            const chainHeight = yield this.getHeight();\n            return chainHeight.minus(tx.height);\n        });\n    }\n}\n//# sourceMappingURL=terraDev.js.map","export const isTerraNetworkConfig = (renNetwork) => !!renNetwork.selector &&\n    !!renNetwork.chainId &&\n    !!renNetwork.nativeAsset &&\n    !!renNetwork.explorer &&\n    !!renNetwork.apiUrl;\n//# sourceMappingURL=types.js.map","/* eslint-disable security/detect-object-injection */\nimport BigNumber from \"bignumber.js\";\n/**\n * Throw an error if the assertion is false.\n */\nexport const assert = (assertion, sentence) => {\n    if (!assertion) {\n        throw new Error(`Failed assertion${sentence ? `: ${sentence}` : \"\"}`);\n    }\n    return true;\n};\n/**\n * The following is a set of rudimentary type validation functions.\n *\n * The main function is `assertType`, which accepts a type and a dictionary of\n * values.\n *\n * The type must be a string that matches the following pattern:\n *\n * ```\n * TYPE:\n *   | TYPE '|' TYPE\n *   | Array<TYPE>\n *   | TYPE[]\n *   | PRIMITIVE_TYPE\n *\n * PRIMITIVE_TYPE:\n *   | \"string\"\n *   | \"number\"\n *   | \"bigint\"\n *   | \"boolean\"\n *   | \"symbol\"\n *   | \"undefined\"\n *   | \"object\"\n *   | \"function\"\n *   | \"null\"\n *   | \"any\"\n *   | \"Buffer\"\n *   | \"BigNumber\"\n * ```\n *\n * Types are matched by a regex so '|' can't be used at multiple levels, e.g.\n * `string | Array<string | number>`.\n */\nexport const assertType = (type, objects) => {\n    if (isArrayType(type)) {\n        return assertArray(type, objects);\n    }\n    if (isUnionType(type)) {\n        return assertTypeUnion(type, objects);\n    }\n    return assertTypeCheck(is(type), objects, type);\n};\nconst typeOf = (v) => v === null\n    ? \"null\"\n    : BigNumber.isBigNumber(v)\n        ? \"BigNumber\"\n        : Buffer.isBuffer(v)\n            ? \"Buffer\"\n            : typeof v;\nconst assertTypeCheck = (type, objects, typeDescription) => {\n    for (const key of Object.keys(objects)) {\n        // eslint-disable-next-line security/detect-object-injection\n        const value = objects[key];\n        if (!type(value, key)) {\n            const readableType = Array.isArray(value) ? \"any[]\" : typeOf(value);\n            throw new Error(`Expected '${key}' to be of type '${typeDescription}', instead got '${readableType}'.`);\n        }\n    }\n    return true;\n};\nconst is = (type) => (v) => type === \"any\" ? true : typeOf(v) === type;\nconst isUnionType = (unionType) => {\n    const types = unionType.split(\" | \");\n    return types.length > 1 ? types : false;\n};\nconst isArrayType = (arrayType) => {\n    // Check with simple string operations to avoid running slow RegExs if there\n    // isn't a match.\n    const isArray = arrayType.slice(0, 6) === \"Array<\" && arrayType.slice(-1) === \">\";\n    if (isArray) {\n        const arrayMatch = /^Array<(.*)>$/.exec(arrayType);\n        if (arrayMatch) {\n            const [, type] = arrayMatch;\n            return type;\n        }\n    }\n    const isBracketArray = arrayType.indexOf(\" \") === -1 && arrayType.slice(-2) === \"[]\";\n    if (isBracketArray) {\n        const bracketMatch = /^([^ ]*)\\[\\]$/.exec(arrayType);\n        if (bracketMatch) {\n            const [, type] = bracketMatch;\n            return type;\n        }\n    }\n    return false;\n};\nconst assertTypeUnion = (unionType, objects) => {\n    const types = unionType.split(\" | \");\n    return assertTypeCheck((v, key) => types.reduce((acc, type) => {\n        if (acc) {\n            return acc;\n        }\n        if (isArrayType(type)) {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                assertArray(type, { [key]: v });\n                return true;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                return false;\n            }\n        }\n        return is(type)(v);\n    }, false), objects, unionType);\n};\nconst assertArray = (arrayType, objects) => {\n    const type = isArrayType(arrayType);\n    if (!type) {\n        /* istanbul ignore next */ /* also checked when assertArray is called */\n        throw new Error(`Invalid array type ${arrayType}`);\n    }\n    for (const key of Object.keys(objects)) {\n        const value = objects[key];\n        assertTypeCheck((v) => Array.isArray(v), { value }, \"any[]\");\n        for (let i = 0; i < value.length; i++) {\n            assertType(type, { [`${key}[${i}]`]: value[i] });\n        }\n    }\n    return true;\n};\nexport const assertObject = (fieldTypes, objects) => {\n    for (const key of Object.keys(objects)) {\n        const value = objects[key];\n        for (const field of Object.keys(fieldTypes)) {\n            if (typeof fieldTypes[field] === \"object\") {\n                assertObject(fieldTypes[field], {\n                    [`${key}[\"${field}\"]`]: value[field],\n                });\n            }\n            else if (typeof fieldTypes[field] === \"string\") {\n                assertType(fieldTypes[field], {\n                    [`${key}[\"${field}\"]`]: value[field],\n                });\n            }\n            else {\n                throw new Error(`Invalid object type definition ${typeof fieldTypes[field]}`);\n            }\n        }\n    }\n    return true;\n};\n//# sourceMappingURL=assert.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport BN from \"bn.js\";\nimport { extractError, RenJSError, withCode } from \"./errors\";\n/**\n * Represents 1 second for functions that accept a parameter in milliseconds.\n */\nexport const SECONDS = 1000;\nexport const MINUTES = 60 * SECONDS;\n/**\n * Pauses the thread for the specified number of milliseconds.\n *\n * @param ms The number of milliseconds to pause for.\n */\nexport const sleep = (ms) => __awaiter(void 0, void 0, void 0, function* () { return new Promise((resolve) => setTimeout(resolve, ms)); });\n/**\n * Attempt to call the provided function and retry if it errors. The function\n * is called up to a maximum `retries` times. If `retries` is `-1` then it\n * will be retried indefinitely.\n */\nexport const tryNTimes = (fnCall, retries, timeout = 1 * SECONDS, // in ms\nlogger) => __awaiter(void 0, void 0, void 0, function* () {\n    if (retries === 0 || typeof retries !== \"number\" || isNaN(retries)) {\n        throw withCode(new Error(`Invalid retry amount '${retries}'.`), RenJSError.PARAMETER_ERROR);\n    }\n    let returnError;\n    const errorMessages = new Set();\n    for (let i = 0; retries === -1 || i < retries; i++) {\n        try {\n            return yield fnCall();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            // Fix error message.\n            const errorMessage = extractError(error);\n            errorMessages.add(errorMessage);\n            returnError = error || returnError;\n            if (i < retries - 1 || retries === -1) {\n                yield sleep(timeout);\n                if (logger) {\n                    logger.warn(error);\n                }\n            }\n        }\n    }\n    if (returnError) {\n        returnError.message = Array.from(errorMessages).join(\", \");\n    }\n    else {\n        returnError = new Error(Array.from(errorMessages).join(\", \"));\n    }\n    throw returnError;\n});\n/**\n * isDefined returns true if the parameter is defined and not null.\n */\nexport const isDefined = (x) => x !== null && x !== undefined;\n/**\n * Returns false if the method throws or returns false - returns true otherwise.\n */\nexport const doesntError = (f) => (...p) => {\n    try {\n        const response = f(...p);\n        return response === undefined || response === true ? true : false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (error) {\n        return false;\n    }\n};\n/**\n * Pad a Buffer to `n` bytes. If the Buffer is longer than `n` bytes, an error\n * is thrown.\n */\nexport const padBuffer = (buffer, n) => {\n    if (buffer.length > n) {\n        throw new Error(`byte array longer than desired length (${String(buffer.length)} > ${String(n)})`);\n    }\n    if (buffer.length < n) {\n        const paddingLength = n - buffer.length;\n        const padding = Array.from(new Array(paddingLength)).map((_) => 0);\n        buffer = Buffer.concat([Buffer.from(padding), buffer]);\n    }\n    return buffer;\n};\n/**\n * Convert a number to a Buffer of length `n`.\n */\nexport const toNBytes = (input, n) => {\n    let buffer;\n    if (Buffer.isBuffer(input)) {\n        buffer = input;\n    }\n    else {\n        let hex = new BigNumber(input).toString(16);\n        hex = hex.length % 2 ? \"0\" + hex : hex;\n        buffer = Buffer.from(hex, \"hex\");\n    }\n    buffer = padBuffer(buffer, n);\n    const bnVersion = new BN(BigNumber.isBigNumber(input) ? input.toFixed() : input).toArrayLike(Buffer, \"be\", n);\n    if (!buffer.equals(bnVersion) || buffer.length !== n) {\n        throw new Error(`Failed to convert to ${String(n)}-length bytes - got ${String(buffer.toString(\"hex\"))} (${String(buffer.length)} bytes), expected ${bnVersion.toString(\"hex\")} (${String(bnVersion.length)} bytes)`);\n    }\n    return buffer;\n};\nexport const decodeRenVMSelector = (selector, assetChain) => {\n    const regex = \n    // Regular Expression to match selectors in the form of\n    // ASSET/fromCHAINtoCHAIN, ASSET/fromCHAIN or ASSET/toCHAIN.\n    // Note: chain names can't have\n    // ^(  ASSET )/[      [from(        CHAIN        )To(   CHAIN  )] OR [from( CHAIN )] OR ( to(  CHAIN  ))]$\n    /^([a-zA-Z]+)\\/(?:(?:(?:from([a-zA-Z]+?(?=To)))(?:To([a-zA-Z]+))?)|(?:from([a-zA-Z]+))|(?:to([a-zA-Z]+)))$/;\n    const match = regex.exec(selector);\n    if (!match) {\n        throw new Error(`Invalid selector format '${selector}'.`);\n    }\n    const [_, asset, burnAndMintFrom, burnAndMintTo, burnFrom, mintTo] = match;\n    return {\n        asset,\n        from: burnAndMintFrom || burnFrom || assetChain,\n        to: burnAndMintTo || mintTo || assetChain,\n    };\n};\n//# sourceMappingURL=common.js.map","import { Contract } from \"ethers\";\nimport { keccak256 } from \"@renproject/utils\";\nimport BasicBridgeJSON from \"./ABIs/BasicBridge.json\";\nimport ERC20JSON from \"./ABIs/ERC20.json\";\nimport GatewayRegistryJSON from \"./ABIs/GatewayRegistryV2.json\";\nimport LockGatewayJSON from \"./ABIs/LockGatewayV3.json\";\nimport MintGatewayJSON from \"./ABIs/MintGatewayV3.json\";\nimport TransferWithLogJSON from \"./ABIs/TransferWithLog.json\";\nexport const BasicBridgeABI = BasicBridgeJSON;\nexport const ERC20ABI = ERC20JSON;\nexport const GatewayRegistryABI = GatewayRegistryJSON;\nexport const LockGatewayABI = LockGatewayJSON;\nexport const MintGatewayABI = MintGatewayJSON;\nexport const TransferWithLogABI = TransferWithLogJSON;\nexport const findABIMethod = (abi, name) => {\n    const first = abi.filter((item) => item.name === name)[0];\n    if (!first) {\n        throw new Error(`No ABI entry found for \"${name}\".`);\n    }\n    return first;\n};\nexport const getEventTopic = (abiItem) => {\n    const parameters = abiItem.inputs && abiItem.inputs.length > 0\n        ? abiItem.inputs.map((input) => input.type).join(\",\")\n        : \"\";\n    const eventSignature = `${abiItem.name}(${parameters})`;\n    return keccak256(Buffer.from(eventSignature));\n};\nexport const getMintGatewayInstance = (signerOrProvider, address) => new Contract(address, MintGatewayABI, signerOrProvider);\nexport const getLockGatewayInstance = (signerOrProvider, address) => new Contract(address, LockGatewayABI, signerOrProvider);\nexport const getGatewayRegistryInstance = (signerOrProvider, address) => new Contract(address, GatewayRegistryABI, signerOrProvider);\nexport const getERC20Instance = (signerOrProvider, address) => new Contract(address, ERC20ABI, signerOrProvider);\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport { utils, } from \"ethers\";\nimport { defaultAbiCoder } from \"ethers/lib/utils\";\nimport { fromHex, isHex, Ox, toNBytes, toURLBase64, } from \"@renproject/utils\";\nimport { findABIMethod, getEventTopic, getMintGatewayInstance, LockGatewayABI, MintGatewayABI, } from \"../contracts\";\nimport { getLockGateway, getMintGateway } from \"./gatewayRegistry\";\nexport const mapBurnLogToInputChainTransaction = (chain, event) => {\n    const [to, amount, burnNonce] = event.args;\n    return Object.assign(Object.assign({}, txHashToChainTransaction(chain, event.transactionHash)), { amount: amount.toString(), toRecipient: to, nonce: toURLBase64(toNBytes(burnNonce.toString(), 32)) });\n};\nexport const mapLockLogToInputChainTransaction = (chain, event) => {\n    const [recipientAddress, recipientChain, recipientPayload, amount, lockNonce,] = event.args;\n    const nonceBuffer = toNBytes(new BigNumber(lockNonce.toString()), 32);\n    if (nonceBuffer.length !== 32) {\n        throw new Error(\"Invalid nonce length\");\n    }\n    return Object.assign(Object.assign({}, txHashToChainTransaction(chain, event.transactionHash)), { amount: amount.toString(), nonce: toURLBase64(nonceBuffer), toRecipient: recipientAddress, toChain: recipientChain, toPayload: toURLBase64(fromHex(recipientPayload)) });\n};\nexport const mapTransferLogToInputChainTransaction = (chain, event) => {\n    const [_from, _to, amount] = event.args;\n    return Object.assign(Object.assign({}, txHashToChainTransaction(chain, event.transactionHash)), { amount: amount.toString() });\n};\n// export const extractBurnDetails = (\n//     chain: string,\n//     receipt: providers.TransactionReceipt,\n// ): InputChainTransaction[] => {\n//     const logBurnABI = findABIMethod(MintGatewayABI, \"LogBurn\");\n//     if (!receipt.blockHash) {\n//         throw new Error(`Transaction not confirmed yet.`);\n//     }\n//     const burnDetails = filterLogs<LogBurnEvent>(receipt.logs, logBurnABI).map(\n//         (e) => mapBurnLogToInputChainTransaction(chain, e),\n//     );\n//     if (burnDetails.length) {\n//         return burnDetails;\n//     }\n//     throw Error(\"No burn found in logs\");\n// };\n// export const findBurnByNonce = async (\n//     network: EvmNetworkConfig,\n//     provider: Provider,\n//     asset: string,\n//     nonce: Buffer,\n//     blockLimit?: number,\n// ): Promise<InputChainTransaction | undefined> => {\n//     const gatewayAddress = await getMintGateway(network, provider, asset);\n//     const logBurnABI = findABIMethod(MintGatewayABI, \"LogBurn\");\n//     const burnLogs = await getPastLogs<LogBurnEvent>(\n//         provider,\n//         gatewayAddress,\n//         logBurnABI,\n//         [Ox(nonce)],\n//         blockLimit,\n//     );\n//     const decodedBurnLogs = burnLogs.map((e) =>\n//         mapBurnLogToInputChainTransaction(network.selector, e),\n//     );\n//     return decodedBurnLogs.length ? decodedBurnLogs[0] : undefined;\n// };\n/**\n * Convert an EVM txHash to a RenVM ChainTransaction struct.\n * The txindex for Ethereum is currently set to 0, and the nonce is used instead\n * to differentiate locks/burns in the same EVM transaction.\n */\nexport const txHashToChainTransaction = (chain, txHash) => ({\n    chain,\n    txidFormatted: txHash,\n    txid: toURLBase64(fromHex(txHash)),\n    txindex: \"0\",\n});\nexport const findMintBySigHash = (network, provider, asset, nHash, sigHash, blockLimit) => __awaiter(void 0, void 0, void 0, function* () {\n    const gatewayAddress = yield getMintGateway(network, provider, asset);\n    const gatewayInstance = getMintGatewayInstance(provider, gatewayAddress);\n    const logMintABI = findABIMethod(MintGatewayABI, \"LogMint\");\n    const mintEvents = (yield getPastLogs(provider, gatewayAddress, logMintABI, [null, null, Ox(nHash)], blockLimit)).map((event) => txHashToChainTransaction(network.selector, event.transactionHash));\n    if (mintEvents.length) {\n        if (mintEvents.length > 1) {\n            console.warn(`Found more than one mint log.`);\n        }\n        return mintEvents[0];\n    }\n    if (sigHash) {\n        // We can skip the `status` check and call `getPastLogs` directly - for now both are called in case\n        // the contract\n        const status = yield gatewayInstance.status(Ox(sigHash));\n        if (status) {\n            return txHashToChainTransaction(network.selector, \"\");\n        }\n    }\n    return undefined;\n});\nexport const findReleaseBySigHash = (network, provider, asset, nHash, blockLimit) => __awaiter(void 0, void 0, void 0, function* () {\n    const gatewayAddress = yield getLockGateway(network, provider, asset);\n    const logLockABI = findABIMethod(LockGatewayABI, \"LogRelease\");\n    const newReleaseEvents = (yield getPastLogs(provider, gatewayAddress, logLockABI, [null, null, Ox(nHash)], blockLimit)).map((event) => txHashToChainTransaction(network.selector, event.transactionHash));\n    if (newReleaseEvents.length > 1) {\n        console.warn(`Found more than one release log.`);\n    }\n    return newReleaseEvents.length ? newReleaseEvents[0] : undefined;\n});\nexport const filterLogs = (logs, eventABI) => {\n    if (!logs) {\n        throw Error(\"No events found in transaction\");\n    }\n    const logTopic = Ox(getEventTopic(eventABI));\n    const logDecoder = new utils.Interface([eventABI]);\n    return logs\n        .filter((event) => event.topics[0] === logTopic)\n        .map((event) => (Object.assign(Object.assign({}, logDecoder.parseLog(event)), { transactionHash: event.transactionHash })));\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getPastLogs = (provider, contractAddress, eventABI, filter, blockLimit) => __awaiter(void 0, void 0, void 0, function* () {\n    let fromBlock = 1;\n    let toBlock = \"latest\";\n    if (blockLimit) {\n        toBlock = new BigNumber((yield provider.getBlockNumber()).toString()).toNumber();\n        fromBlock = toBlock - blockLimit + 1;\n    }\n    const events = yield provider.getLogs({\n        address: contractAddress,\n        fromBlock: fromBlock,\n        toBlock: toBlock,\n        topics: [Ox(getEventTopic(eventABI)), ...filter],\n    });\n    return filterLogs(events, eventABI);\n});\n// /**\n//  * Waits for the receipt of a transaction to be available, retrying every 15\n//  * seconds until it is.\n//  *\n//  * @param web3 A web3 instance.\n//  * @param txHash The hash of the transaction being read.\n//  */\n// export const waitForReceipt = async (\n//     provider: Provider,\n//     txHash: string,\n//     logger?: Logger,\n//     timeout?: number,\n// ): Promise<TransactionReceipt> =>\n//     // eslint-disable-next-line @typescript-eslint/no-misused-promises\n//     new Promise<TransactionReceipt>(async (resolve, reject) => {\n//         assertType<string>(\"string\", { txHash });\n//         // Wait for confirmation\n//         let receipt: TransactionReceipt | undefined;\n//         while (!receipt || !receipt.blockHash) {\n//             if (logger) {\n//                 logger.debug(`Fetching transaction receipt: ${txHash}`);\n//             }\n//             receipt = await provider.getTransactionReceipt(txHash);\n//             if (receipt && receipt.blockHash) {\n//                 break;\n//             }\n//             await sleep(isDefined(timeout) ? timeout : 15 * SECONDS);\n//         }\n//         // Status might be undefined - so check against `false` explicitly.\n//         if (receipt.status === 0) {\n//             reject(\n//                 new Error(\n//                     `Transaction was reverted. { \"transactionHash\": \"${txHash}\" }`,\n//                 ),\n//             );\n//             return;\n//         }\n//         resolve(receipt);\n//         return;\n//     });\n// export const submitToEthereum = async (\n//     chain: string,\n//     signer: Signer,\n//     to: string,\n//     abi: AbiItem,\n//     txConfig: PayableOverrides,\n//     params: unknown[],\n//     eventEmitter: EventEmitterTyped<{\n//         transaction: [ChainTransaction];\n//         confirmation: [number, { status: number }];\n//     }>,\n// ): Promise<ContractReceipt> => {\n//     if (!abi.name) {\n//         throw new Error(`ABI must include method name.`);\n//     }\n//     const contract = new Contract(to, [abi], signer);\n//     const config: PayableOverrides = {\n//         ...txConfig,\n//         ...{\n//             value:\n//                 txConfig && txConfig.value\n//                     ? txConfig.value.toString()\n//                     : undefined,\n//             gasPrice:\n//                 txConfig && txConfig.gasPrice\n//                     ? txConfig.gasPrice.toString()\n//                     : undefined,\n//         },\n//     };\n//     const tx: ContractTransaction = await contract[abi.name](...params, config);\n//     eventEmitter.emit(\"transaction\", txHashToChainTransaction(chain, tx.hash));\n//     const receipt = await tx.wait();\n//     eventEmitter.emit(\"confirmation\", 1, { status: 1 });\n//     return receipt;\n// };\nexport const validateAddress = (address) => {\n    if (/^.+\\.eth$/.exec(address)) {\n        return true;\n    }\n    try {\n        utils.getAddress(address);\n        return true;\n    }\n    catch (_error) {\n        return false;\n    }\n};\nexport const validateTransaction = (transaction) => transaction !== null &&\n    isHex(transaction.txid, { length: 32, prefix: true });\nexport const rawEncode = (types, parameters) => fromHex(defaultAbiCoder.encode(types, parameters));\n//# sourceMappingURL=generic.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport base58 from \"bs58\";\nimport { assertType, fromBase64, fromHex, RenJSError, SECONDS, sleep, toURLBase64, tryNTimes, withCode, } from \"@renproject/utils\";\nimport { CombinedAPI } from \"./APIs/API\";\nimport { createAddressBuffer } from \"./script/index\";\nimport { isBitcoinNetworkConfig, } from \"./utils/types\";\nimport { hash160, validateAddress } from \"./utils/utils\";\n/**\n * A base Bitcoin chain class that is extended by each Bitcoin chain/fork.\n */\nexport class BitcoinBaseChain {\n    constructor(network) {\n        this.assets = {};\n        this.configMap = {};\n        this.api = new CombinedAPI();\n        this.getBalance = (asset, address) => __awaiter(this, void 0, void 0, function* () {\n            this._assertAssetIsSupported(asset);\n            if (!this.validateAddress(address)) {\n                throw new Error(`Invalid address ${address}.`);\n            }\n            // TODO: Implement.\n            return new BigNumber(0);\n        });\n        /**\n         * See [[LockChain.transactionConfidence]].\n         */\n        this.transactionConfidence = (transaction) => __awaiter(this, void 0, void 0, function* () {\n            const { height } = yield this.api.fetchUTXO(this.formattedTransactionHash(transaction), transaction.txindex);\n            if (!height) {\n                return new BigNumber(0);\n            }\n            else {\n                const latestHeight = new BigNumber(yield this.api.fetchHeight());\n                return latestHeight.minus(height).plus(1);\n            }\n        });\n        /**\n         * See [[LockChain.getGatewayAddress]].\n         */\n        this.createGatewayAddress = (asset, fromPayload, shardPublicKey, gHash) => {\n            this._assertAssetIsSupported(asset);\n            if (fromPayload.chain !== this.chain) {\n                throw new Error(`Invalid payload for chain ${fromPayload.chain} instead of ${this.chain}.`);\n            }\n            return this.encodeAddress(createAddressBuffer(hash160(shardPublicKey), gHash, this.network.p2shPrefix));\n        };\n        const networkConfig = isBitcoinNetworkConfig(network)\n            ? network\n            : this.configMap[network];\n        if (!networkConfig) {\n            if (typeof network === \"string\") {\n                throw new Error(`Unknown network ${network}.`);\n            }\n            else {\n                throw new Error(`Invalid network config.`);\n            }\n        }\n        this.network = networkConfig;\n        this.chain = this.network.selector;\n        for (const provider of this.network.providers) {\n            this.withAPI(provider);\n        }\n    }\n    withAPI(api, { priority = 0 } = {}) {\n        this.api.withAPI(api, { priority });\n        return this;\n    }\n    getOutputPayload(asset, _type, toPayload) {\n        this._assertAssetIsSupported(asset);\n        return {\n            to: toPayload.address,\n            toBytes: base58.decode(toPayload.address),\n            payload: Buffer.from([]),\n        };\n    }\n    addressExplorerLink(address) {\n        return this.network.explorer.address(address);\n    }\n    transactionExplorerLink(tx) {\n        return this.network.explorer.transaction(this.formattedTransactionHash(tx));\n    }\n    encodeAddress(bytes) {\n        return base58.encode(bytes);\n    }\n    validateAddress(address) {\n        return validateAddress(address, this.network.nativeAsset.symbol, this.network.isTestnet ? \"testnet\" : \"prod\");\n    }\n    formattedTransactionHash(transaction) {\n        return fromBase64(transaction.txid).reverse().toString(\"hex\");\n    }\n    validateTransaction(transaction) {\n        return (fromBase64(transaction.txid).length === 32 &&\n            !new BigNumber(transaction.txindex).isNaN());\n    }\n    /**\n     * See [[LockChain.isLockAsset]].\n     */\n    isLockAsset(asset) {\n        return asset === this.network.nativeAsset.symbol;\n    }\n    isDepositAsset(asset) {\n        this._assertAssetIsSupported(asset);\n        return true;\n    }\n    _assertAssetIsSupported(asset) {\n        if (!this.isLockAsset(asset)) {\n            throw new Error(`Asset ${asset} not supported on ${this.chain}.`);\n        }\n    }\n    /**\n     * See [[LockChain.assetDecimals]].\n     */\n    assetDecimals(asset) {\n        this._assertAssetIsSupported(asset);\n        return 8;\n    }\n    watchForDeposits(asset, fromPayload, address, onInput, _removeInput, listenerCancelled) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._assertAssetIsSupported(asset);\n            if (fromPayload.chain !== this.chain) {\n                throw new Error(`Invalid payload for chain ${fromPayload.chain} instead of ${this.chain}.`);\n            }\n            try {\n                const txs = yield tryNTimes(() => __awaiter(this, void 0, void 0, function* () { return this.api.fetchTXs(address); }), 2);\n                txs.map((tx) => __awaiter(this, void 0, void 0, function* () {\n                    return onInput({\n                        chain: this.chain,\n                        txid: toURLBase64(fromHex(tx.txid).reverse()),\n                        txidFormatted: tx.txid,\n                        txindex: tx.txindex,\n                        amount: tx.amount,\n                    });\n                }));\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                // Ignore error and fallback to getUTXOs.\n            }\n            while (true) {\n                if (listenerCancelled()) {\n                    return;\n                }\n                try {\n                    const utxos = yield this.api.fetchUTXOs(address);\n                    utxos.map((tx) => __awaiter(this, void 0, void 0, function* () {\n                        return onInput({\n                            chain: this.chain,\n                            txid: toURLBase64(fromHex(tx.txid).reverse()),\n                            txidFormatted: tx.txid,\n                            txindex: tx.txindex,\n                            amount: tx.amount,\n                        });\n                    }));\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    console.error(error);\n                }\n                yield sleep(15 * SECONDS);\n            }\n        });\n    }\n    // Methods for initializing mints and burns ////////////////////////////////\n    /**\n     * When burning, you can call `Bitcoin.Address(\"...\")` to make the address\n     * available to the burn params.\n     *\n     * @category Main\n     */\n    Address(address) {\n        // Type validation\n        assertType(\"string\", { address });\n        if (!this.validateAddress(address)) {\n            throw withCode(new Error(`Invalid ${this.chain} address: ${String(address)}`), RenJSError.PARAMETER_ERROR);\n        }\n        return {\n            chain: this.chain,\n            address,\n        };\n    }\n    /**\n     * When burning, you can call `Bitcoin.Address(\"...\")` to make the address\n     * available to the burn params.\n     *\n     * @category Main\n     */\n    GatewayAddress() {\n        return {\n            chain: this.chain,\n        };\n    }\n    toSats(value) {\n        return new BigNumber(value).shiftedBy(8).decimalPlaces(0).toFixed();\n    }\n    fromSats(value) {\n        return new BigNumber(value).shiftedBy(-8).toFixed();\n    }\n}\nBitcoinBaseChain.chain = \"Bitcoin\";\nBitcoinBaseChain.configMap = {};\n//# sourceMappingURL=base.js.map","import { RenNetwork } from \"@renproject/utils\";\n\nexport const NETWORK: RenNetwork =\n    (process.env.REACT_APP_NETWORK as RenNetwork) || RenNetwork.Testnet;\n","function Accounts() {\n    return <div></div>;\n}\n\nexport default Accounts;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isDefined, SECONDS, tryNTimes } from \"@renproject/utils\";\nimport { TransactionStatus } from \"./gatewayTransaction\";\n/**\n * See [[RenJS.defaultDepositHandler]].\n */\nconst createDepositHandler = (retries = -1) => {\n    const fn = (tx) => __awaiter(void 0, void 0, void 0, function* () {\n        yield tx.fetchStatus();\n        // Loop until the deposit status is `Submitted`.\n        while (tx.status !== TransactionStatus.Submitted) {\n            switch (tx.status) {\n                // The deposit has been seen, but not enough confirmations have\n                // passed yet.\n                case TransactionStatus.Detected:\n                    yield tryNTimes(() => __awaiter(void 0, void 0, void 0, function* () {\n                        tx._config.logger.debug(`Calling .confirmed`);\n                        tx.in.eventEmitter.on(\"status\", (status) => {\n                            if (isDefined(status.confirmations)) {\n                                tx._config.logger.debug(`${status.confirmations}/${status.target} confirmations`);\n                            }\n                            else {\n                                tx._config.logger.debug(`Waiting for ${status.target} confirmations...`);\n                            }\n                        });\n                        yield tx.in.wait();\n                    }), retries, 10 * SECONDS, tx._config.logger);\n                    break;\n                // The deposit as been seen and confirmed, but it hasn't been\n                // signed by RenVM yet.\n                case TransactionStatus.Confirmed:\n                    yield tryNTimes(() => __awaiter(void 0, void 0, void 0, function* () {\n                        try {\n                            tx._config.logger.debug(`Calling .signed`);\n                            tx.renVM.eventEmitter.on(\"status\", (status) => {\n                                tx._config.logger.debug(`status: ${status}`);\n                            });\n                            yield tx.renVM.submit();\n                            yield tx.renVM.wait();\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        }\n                        catch (error) {\n                            if (tx.status === TransactionStatus.Reverted) {\n                                return;\n                            }\n                            throw error;\n                        }\n                    }), retries, 10 * SECONDS, tx._config.logger);\n                    break;\n                // The mint has been signed by RenVM and can be submitted to\n                // the mint-chain.\n                case TransactionStatus.Signed:\n                    yield tryNTimes(() => __awaiter(void 0, void 0, void 0, function* () {\n                        try {\n                            tx._config.logger.debug(`Calling .mint`);\n                            if (!tx.out) {\n                                return;\n                            }\n                            if (tx.out.submit) {\n                                yield tx.out.submit();\n                            }\n                            yield tx.out.wait();\n                            // gateway._config.logger.debug(\n                            //     `txHash: ${\n                            //         gateway.params.toChain.transactionExplorerLink(\n                            //             transaction,\n                            //         ) || \"\"\n                            //     }`,\n                            // );\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        }\n                        catch (error) {\n                            // Ethereum revert message.\n                            if (/(execution reverted)|(Transaction has been reverted)/.exec(error.message || String(error))) {\n                                tx.status = TransactionStatus.Reverted;\n                                tx.revertReason =\n                                    error.message || String(error);\n                                return;\n                            }\n                            throw error;\n                        }\n                    }), retries, 10 * SECONDS, tx._config.logger);\n                    break;\n                // RenVM wasn't able to sign the mint. Potential causes can be\n                // found in `deposit.revertReason`.\n                case TransactionStatus.Reverted:\n                    throw new Error(`RenVM transaction reverted${tx.revertReason ? \": \" + tx.revertReason : \"\"}`);\n            }\n        }\n    });\n    fn.withRetries = (newRetries) => createDepositHandler(newRetries);\n    return fn;\n};\n/**\n * See [[RenJS.defaultDepositHandler]].\n */\nexport const defaultDepositHandler = createDepositHandler();\n//# sourceMappingURL=defaultDepositHandler.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { EventEmitter } from \"events\";\nimport { OrderedMap } from \"immutable\";\nimport { DefaultTxWaiter, extractError, fromBase64, generateGHash, generatePHash, generateSHash, InputType, isContractChain, isDefined, isDepositChain, OutputType, Ox, RenJSError, SECONDS, sleep, toNBytes, toURLBase64, withCode, } from \"@renproject/utils\";\nimport { defaultRenJSConfig } from \"./config\";\nimport { estimateTransactionFee } from \"./fees\";\nimport { GatewayTransaction } from \"./gatewayTransaction\";\nimport { getInputAndOutputTypes } from \"./utils/inputAndOutputTypes\";\nclass TransactionEmitter extends EventEmitter {\n    constructor(getTransactions) {\n        super();\n        this.addListener = (event, callback) => {\n            // Emit previous deposit events.\n            if (event === \"transaction\") {\n                this.getTransactions().map(callback);\n            }\n            super.on(event, callback);\n            return this;\n        };\n        /**\n         * `on` creates a new listener to `\"transaction\"` events, returning\n         * [[GatewayTransaction]] instances.\n         *\n         * `on` extends `EventEmitter.on`, modifying it to immediately return all\n         * previous `\"transaction\"` events, in addition to new events, when a new\n         * listener is created.\n         *\n         * @category Main\n         */\n        // @ts-expect-error EventEmitter and EventEmitterTyped typing issue\n        this.on = (event, callback) => this.addListener(event, callback);\n        this.getTransactions = getTransactions;\n    }\n}\n/**\n *\n *\n * `LockAndMint` extends the EventEmitter class, and emits a `\"transaction\"` event\n * for each new deposit that is observed. Deposits will only be watched for if\n * there is an active listener for the `\"transaction\"` event.\n *\n * A LockAndMint object watches transactions to the [[gatewayAddress]] on the\n * lock-chain.\n *\n * Deposits to the gateway address can be listened to with the `\"transaction\"`\n * event using [[on]], which will return [[GatewayTransaction]] instances.\n *\n * ```ts\n * console.log(`Deposit to ${JSON.stringify(lockAndMint.gatewayAddress)}`);\n *\n * lockAndMint.on(\"transaction\", async (deposit) => {\n *    console.log(`Received deposit`, deposit);\n *    await RenJS.defaultDepositHandler(deposit);\n * });\n * ```\n *\n * @noInheritDoc\n */\nexport class Gateway {\n    /**\n     * @hidden - should be created using [[RenJS.lockAndMint]] instead.\n     */\n    constructor(renVM, fromChain, toChain, params, config = {}) {\n        this.setup = {};\n        /**\n         * Deposits represents the lock deposits that have been detected so far.\n         */\n        this.transactions = OrderedMap();\n        this.eventEmitter = new TransactionEmitter(() => this.transactions\n            // Check that the transaction isn't a promise.\n            // The result of promises will be emitted when they resolve.\n            .filter((tx) => tx.then === undefined)\n            .map((tx) => tx)\n            .valueSeq()\n            .toArray());\n        this.params = params;\n        this.fromChain = fromChain;\n        this.toChain = toChain;\n        this.provider = renVM;\n        this.config = Object.assign(Object.assign({}, defaultRenJSConfig), config);\n        {\n            // Debug log\n            this.config.logger.debug(\"gateway created:\", String(renVM.endpointOrProvider), fromChain.chain, toChain.chain, this.params, config);\n        }\n    }\n    get selector() {\n        return this.getter(\"_selector\") || this._selector;\n    }\n    get gHash() {\n        return this.getter(\"_gHash\") || this._gHash;\n    }\n    get pHash() {\n        return this.getter(\"_pHash\") || this._pHash;\n    }\n    get fees() {\n        return this.getter(\"_fees\") || this._fees;\n    }\n    get outputType() {\n        return this.getter(\"_outputType\") || this._outputType;\n    }\n    get inputType() {\n        return this.getter(\"_inputType\") || this._inputType;\n    }\n    get inConfirmationTarget() {\n        return (this.getter(\"_inConfirmationTarget\") || this._inConfirmationTarget);\n    }\n    /**\n     * @hidden - Called automatically when calling [[RenJS.lockAndMint]]. It has\n     * been split from the constructor because it's asynchronous.\n     */\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { to, asset, from } = this.params;\n            const { inputType, outputType, selector } = yield getInputAndOutputTypes({\n                asset,\n                fromChain: this.fromChain,\n                toChain: this.toChain,\n            });\n            this._inputType = inputType;\n            this._outputType = outputType;\n            this._selector = selector;\n            if (this.outputType === OutputType.Release &&\n                !isContractChain(this.fromChain)) {\n                throw withCode(new Error(`Cannot release from non-contract chain ${this.fromChain.chain}`), RenJSError.PARAMETER_ERROR);\n            }\n            if (this.outputType === OutputType.Mint &&\n                !isContractChain(this.toChain)) {\n                throw withCode(new Error(`Cannot mint ${asset} to non-contract chain ${this.toChain.chain}`), RenJSError.PARAMETER_ERROR);\n            }\n            const [confirmationTarget, shard, payload] = yield Promise.all([\n                this.provider.getConfirmationTarget(this.fromChain.chain),\n                (() => __awaiter(this, void 0, void 0, function* () {\n                    if (isDefined(this.params.shard)) {\n                        return this.params.shard;\n                    }\n                    if (this.inputType === InputType.Lock &&\n                        isDepositChain(this.fromChain) &&\n                        (yield this.fromChain.isDepositAsset(asset))) {\n                        return yield this.provider.selectShard(this.params.asset);\n                    }\n                    else {\n                        return {\n                            gPubKey: \"\",\n                        };\n                    }\n                }))(),\n                this.toChain.getOutputPayload(asset, \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.outputType, to),\n            ]);\n            this.params.shard = shard;\n            this._inConfirmationTarget = confirmationTarget;\n            this._pHash = generatePHash(payload.payload);\n            // const sHash = Ox(generateSHash(this.selector));\n            const sHash = generateSHash(`${this.params.asset}/to${this.params.to.chain}`);\n            if (isDepositChain(this.fromChain) &&\n                (yield this.fromChain.isDepositAsset(this.params.asset))) {\n                try {\n                    if (!isContractChain(this.toChain)) {\n                        throw new Error(`Cannot mint ${asset} to non-contract chain ${this.toChain.chain}.`);\n                    }\n                    if (!this.params.shard) {\n                        throw withCode(new Error(`RenVM shard not selected.`), RenJSError.INTERNAL_ERROR);\n                    }\n                    // Convert nonce to Buffer (using `0` if no nonce is set.)\n                    const nonce = typeof this.params.nonce === \"string\"\n                        ? fromBase64(this.params.nonce)\n                        : toNBytes(this.params.nonce || 0, 32);\n                    const gHash = generateGHash(this.pHash, sHash, payload.toBytes, nonce);\n                    this._gHash = gHash;\n                    const gPubKey = fromBase64(this.params.shard.gPubKey);\n                    this.config.logger.debug(\"gPubKey:\", Ox(gPubKey));\n                    if (!gPubKey || gPubKey.length === 0) {\n                        throw withCode(new Error(\"Unable to fetch RenVM shard public key.\"), RenJSError.NETWORK_ERROR);\n                    }\n                    if (!gHash || gHash.length === 0) {\n                        throw new Error(\"Invalid gateway hash being passed to gateway address generation.\");\n                    }\n                    if (!asset || asset.length === 0) {\n                        throw new Error(\"Invalid asset being passed to gateway address generation.\");\n                    }\n                    this.gatewayAddress = yield this.fromChain.createGatewayAddress(this.params.asset, this.params.from, gPubKey, gHash);\n                    this.config.logger.debug(\"gateway address:\", this.gatewayAddress);\n                    // if (this.renVM.submitGatewayDetails) {\n                    //     const promise = this.renVM.submitGatewayDetails(\n                    //         this.params.this.fromChain(gatewayAddress),\n                    //         {\n                    //             ...(this._state as MintState & MintStatePartial),\n                    //             nHash: Buffer.from(\n                    //                 \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n                    //                 \"base64\",\n                    //             ),\n                    //             payload: fromHex(encodedParameters),\n                    //             nonce: fromHex(nonce),\n                    //             to: strip0x(sendTo),\n                    //             // tags,\n                    //         },\n                    //         5,\n                    //     );\n                    //     if ((promise as { catch?: unknown }).catch) {\n                    //         (promise as Promise<unknown>).catch(console.error);\n                    //     }\n                    // }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    throw error;\n                }\n                // Will fetch deposits as long as there's at least one subscription.\n                this.wait().catch(console.error);\n            }\n            if (isContractChain(this.fromChain)) {\n                const processInput = (input) => {\n                    const nonce = toURLBase64(\n                    // Check if the deposit has an associated nonce. This will\n                    // be true for contract-based inputs.\n                    input.nonce\n                        ? fromBase64(input.nonce)\n                        : // Check if the params have a nonce - this can be\n                            // a base64 string or a number. If no nonce is set,\n                            // default to `0`.\n                            typeof this.params.nonce === \"string\"\n                                ? fromBase64(this.params.nonce)\n                                : toNBytes(this.params.nonce || 0, 32));\n                    const gHash = generateGHash(payload.payload, sHash, payload.toBytes, fromBase64(nonce));\n                    this._gHash = gHash;\n                    if (!gHash || gHash.length === 0) {\n                        throw withCode(new Error(\"Invalid gateway hash being passed to gateway address generation.\"), RenJSError.PARAMETER_ERROR);\n                    }\n                    if (!asset || asset.length === 0) {\n                        throw withCode(new Error(\"Invalid asset being passed to gateway address generation.\"), RenJSError.PARAMETER_ERROR);\n                    }\n                    // TODO: Add to queue instead so that it can be retried on error.\n                    this.processDeposit(input).catch(console.error);\n                };\n                // TODO\n                const removeInput = () => { };\n                this.in = yield this.fromChain.getInputTx(this.inputType, asset, from, () => ({\n                    toChain: to.chain,\n                    toPayload: payload,\n                    gatewayAddress: this.gatewayAddress,\n                }), this.inConfirmationTarget, processInput, removeInput);\n            }\n            this._fees = yield estimateTransactionFee(this.provider, asset, this.fromChain, this.toChain);\n            if (isContractChain(this.fromChain) && this.fromChain.getInputSetup) {\n                this.setup = Object.assign(Object.assign({}, this.setup), (yield this.fromChain.getInputSetup(asset, this.inputType, from, () => ({\n                    toChain: to.chain,\n                    toPayload: payload,\n                    gatewayAddress: this.gatewayAddress,\n                }))));\n            }\n            if (isContractChain(this.toChain) && this.toChain.getOutputSetup) {\n                this.setup = Object.assign(Object.assign({}, this.setup), (yield this.toChain.getOutputSetup(asset, this.outputType, to)));\n            }\n            return this;\n        });\n    }\n    /**\n     * `processDeposit` allows you to manually provide the details of a deposit\n     * and returns a [[GatewayTransaction]] object.\n     *\n     * @param deposit The deposit details in the format defined by the\n     * LockChain. This should be the same format as `deposit.depositDetails` for\n     * a deposit returned from `.on(\"transaction\", ...)`.\n     *\n     * ```ts\n     * lockAndMint\n     *   .processDeposit({\n     *       transaction: {\n     *           cid:\n     *               \"bafy2bzacedvu74e7ohjcwlh4fbx7ddf6li42fiuosajob6metcj2qwkgkgof2\",\n     *           to: \"t1v2ftlxhedyoijv7uqgxfygiziaqz23lgkvks77i\",\n     *           amount: (0.01 * 1e8).toString(),\n     *           params: \"EzGbvVHf8lb0v8CUfjh8y+tLbZzfIFcnNnt/gh6axmw=\",\n     *           confirmations: 1,\n     *           nonce: 7,\n     *       },\n     *       amount: (0.01 * 1e8).toString(),\n     *   })\n     *   .on(deposit => RenJS.defaultDepositHandler)\n     *   .catch(console.error);\n     * ```\n     * @category Main\n     */\n    processDeposit(deposit) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const depositIdentifier = deposit.txid + \"_\" + String(deposit.txindex);\n            const existingTransaction = this.transactions.get(depositIdentifier);\n            // If the transaction hasn't been seen before.\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            if (!existingTransaction) {\n                const createGatewayTransaction = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!this.pHash || !this.gHash) {\n                        throw new Error(\"Gateway address must be generated before calling 'processDeposit'.\");\n                    }\n                    // Determine which nonce to use - converting it to a Buffer\n                    // to ensure it's in a standard format before calling\n                    // toURLBase64 again.\n                    const nonce = toURLBase64(\n                    // Check if the deposit has an associated nonce. This will\n                    // be true for contract-based inputs.\n                    deposit.nonce\n                        ? fromBase64(deposit.nonce)\n                        : // Check if the params have a nonce - this can be\n                            // a base64 string or a number. If no nonce is set,\n                            // default to `0`.\n                            typeof this.params.nonce === \"string\"\n                                ? fromBase64(this.params.nonce)\n                                : toNBytes(this.params.nonce || 0, 32));\n                    const params = {\n                        asset: this.params.asset,\n                        fromTx: deposit,\n                        to: this.params.to,\n                        shard: this.params.shard,\n                        nonce,\n                    };\n                    let inTx = this.in;\n                    if (!inTx) {\n                        inTx = new DefaultTxWaiter({\n                            chainTransaction: deposit,\n                            chain: this.fromChain,\n                            target: this.inConfirmationTarget,\n                        });\n                    }\n                    const transaction = new GatewayTransaction(this.provider, this.fromChain, this.toChain, params, inTx, this.config);\n                    yield transaction.initialize();\n                    // Check if deposit has already been submitted.\n                    this.eventEmitter.emit(\"transaction\", transaction);\n                    // this.deposits.set(deposit);\n                    this.config.logger.debug(\"new deposit:\", deposit);\n                    return transaction;\n                });\n                const promise = createGatewayTransaction();\n                this.transactions = this.transactions.set(depositIdentifier, promise);\n                try {\n                    this.transactions = this.transactions.set(depositIdentifier, yield promise);\n                }\n                catch (error) {\n                    this.transactions = this.transactions.remove(depositIdentifier);\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return (yield existingTransaction);\n        });\n    }\n    on(event, callback) {\n        this.eventEmitter.on(event, callback);\n        return this;\n    }\n    /** PRIVATE METHODS */\n    getter(name) {\n        if (this[name] === undefined) {\n            throw new Error(`Must call 'initialize' before accessing '${name}'.`);\n        }\n        return this[name];\n    }\n    wait() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.gatewayAddress ||\n                !isDepositChain(this.fromChain) ||\n                !this.fromChain.watchForDeposits) {\n                return;\n            }\n            while (true) {\n                const listenerCancelled = () => this.eventEmitter.listenerCount(\"transaction\") === 0;\n                try {\n                    // If there are no listeners, continue. TODO: Exit loop entirely\n                    // until a lister is added again.\n                    if (listenerCancelled()) {\n                        yield sleep(1 * SECONDS);\n                        continue;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    this.config.logger.error(extractError(error));\n                }\n                // Change the return type of `this.processDeposit` to `void`.\n                const onDeposit = (deposit) => {\n                    try {\n                        // TODO: Handle error.\n                        this.processDeposit(deposit).catch(console.error);\n                    }\n                    catch (error) {\n                        this.config.logger.error(error);\n                    }\n                };\n                // TODO: Flag deposits that have been cancelled, updating their status.\n                const cancelDeposit = () => { };\n                try {\n                    yield this.fromChain.watchForDeposits(this.params.asset, this.params.from, this.gatewayAddress, onDeposit, cancelDeposit, listenerCancelled);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    this.config.logger.error(extractError(error));\n                }\n                yield sleep(this.config.networkDelay);\n            }\n        });\n    }\n}\n//# sourceMappingURL=gateway.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport { isDepositChain, RenJSError, withCode } from \"@renproject/utils\";\nexport { Gateway as LockAndMint } from \"./gateway\";\nexport const BIP_DENOMINATOR = 10000;\nexport const estimateTransactionFee = (renVM, asset, fromChain, toChain) => __awaiter(void 0, void 0, void 0, function* () {\n    const blockState = yield renVM.queryBlockState(asset, 5);\n    if (!blockState[asset]) {\n        throw withCode(new Error(`No fee details found for ${asset}`), RenJSError.UNKNOWN_ERROR);\n    }\n    const { gasLimit, gasCap, minimumAmount, dustAmount } = blockState[asset];\n    const mintAndBurnFees = blockState[asset].fees.chains.filter((chainFees) => chainFees.chain === toChain.chain)[0];\n    const isLockAndMint = yield fromChain.isLockAsset(asset);\n    const requiresTransfer = isLockAndMint\n        ? isDepositChain(fromChain) && (yield fromChain.isDepositAsset(asset))\n        : isDepositChain(toChain) && (yield toChain.isDepositAsset(asset));\n    const transferFee = requiresTransfer\n        ? gasLimit.times(gasCap).plus(dustAmount).plus(1)\n        : new BigNumber(0);\n    const mintFee = mintAndBurnFees && mintAndBurnFees.mintFee\n        ? mintAndBurnFees.mintFee.toNumber()\n        : 15;\n    const burnFee = mintAndBurnFees && mintAndBurnFees.burnFee\n        ? mintAndBurnFees.burnFee.toNumber()\n        : 15;\n    /**\n     * Calculate the expected amount a user will receive if they send the input\n     * amount.\n     */\n    const estimateOutput = (input) => {\n        if (isLockAndMint) {\n            return BigNumber.max(new BigNumber(input)\n                .minus(transferFee)\n                .times(BIP_DENOMINATOR - mintFee)\n                .dividedBy(BIP_DENOMINATOR)\n                .decimalPlaces(0), 0);\n        }\n        return BigNumber.max(new BigNumber(input)\n            .times(BIP_DENOMINATOR - burnFee)\n            .dividedBy(BIP_DENOMINATOR)\n            .minus(transferFee)\n            .decimalPlaces(0), 0);\n    };\n    const minimumDeposit = minimumAmount\n        .plus(transferFee)\n        .times((isLockAndMint ? mintFee : burnFee) + BIP_DENOMINATOR)\n        .dividedBy(BIP_DENOMINATOR)\n        .decimalPlaces(0);\n    return {\n        lock: transferFee,\n        release: transferFee,\n        mint: mintFee,\n        burn: burnFee,\n        minimumAmount: minimumDeposit,\n        estimateOutput,\n    };\n});\n//# sourceMappingURL=fees.js.map","export * from \"@renproject/chains-bitcoin\";\nexport * from \"@renproject/chains-ethereum\";\nexport * from \"@renproject/chains-filecoin\";\nexport * from \"@renproject/chains-terra\";\n// export * from \"@renproject/chains-solana\";\nimport { Bitcoin, BitcoinCash, DigiByte, Dogecoin, Zcash, } from \"@renproject/chains-bitcoin\";\nimport { Arbitrum, Avalanche, BinanceSmartChain, Ethereum, Fantom, Goerli, Polygon, } from \"@renproject/chains-ethereum\";\nimport { Filecoin } from \"@renproject/chains-filecoin\";\nimport { Terra } from \"@renproject/chains-terra\";\n// import { Solana } from \"@renproject/chains-solana\";\nexport const chains = {\n    Arbitrum,\n    Avalanche,\n    BinanceSmartChain,\n    Bitcoin,\n    BitcoinCash,\n    DigiByte,\n    Dogecoin,\n    Ethereum,\n    Fantom,\n    Filecoin,\n    Goerli,\n    Polygon,\n    // Solana,\n    Terra,\n    Zcash,\n};\nexport var Asset;\n(function (Asset) {\n    Asset[\"ArbETH\"] = \"ArbETH\";\n    Asset[\"AVAX\"] = \"AVAX\";\n    Asset[\"BADGER\"] = \"BADGER\";\n    Asset[\"BCH\"] = \"BCH\";\n    Asset[\"BNB\"] = \"BNB\";\n    Asset[\"BTC\"] = \"BTC\";\n    Asset[\"BUSD\"] = \"BUSD\";\n    Asset[\"CRV\"] = \"CRV\";\n    Asset[\"DAI\"] = \"DAI\";\n    Asset[\"DGB\"] = \"DGB\";\n    Asset[\"DOGE\"] = \"DOGE\";\n    Asset[\"ETH\"] = \"ETH\";\n    Asset[\"EURT\"] = \"EURT\";\n    Asset[\"FIL\"] = \"FIL\";\n    Asset[\"FTM\"] = \"FTM\";\n    Asset[\"FTT\"] = \"FTT\";\n    Asset[\"gETH\"] = \"gETH\";\n    Asset[\"KNC\"] = \"KNC\";\n    Asset[\"LINK\"] = \"LINK\";\n    Asset[\"LUNA\"] = \"LUNA\";\n    Asset[\"MATIC\"] = \"MATIC\";\n    Asset[\"MIM\"] = \"MIM\";\n    Asset[\"REN\"] = \"REN\";\n    Asset[\"ROOK\"] = \"ROOK\";\n    Asset[\"SUSHI\"] = \"SUSHI\";\n    Asset[\"UNI\"] = \"UNI\";\n    Asset[\"USDC\"] = \"USDC\";\n    Asset[\"USDT\"] = \"USDT\";\n    Asset[\"ZEC\"] = \"ZEC\";\n})(Asset || (Asset = {}));\nexport const assets = Object.values(chains).reduce((acc, chain) => acc.concat(Object.values(chain.assets)), []);\n/* eslint-disable @typescript-eslint/no-shadow */\nexport var Chain;\n(function (Chain) {\n    Chain[\"Arbitrum\"] = \"Arbitrum\";\n    Chain[\"Avalanche\"] = \"Avalanche\";\n    Chain[\"BinanceSmartChain\"] = \"BinanceSmartChain\";\n    Chain[\"Bitcoin\"] = \"Bitcoin\";\n    Chain[\"BitcoinCash\"] = \"BitcoinCash\";\n    Chain[\"DigiByte\"] = \"DigiByte\";\n    Chain[\"Dogecoin\"] = \"Dogecoin\";\n    Chain[\"Ethereum\"] = \"Ethereum\";\n    Chain[\"Fantom\"] = \"Fantom\";\n    Chain[\"Filecoin\"] = \"Filecoin\";\n    Chain[\"Goerli\"] = \"Goerli\";\n    Chain[\"Polygon\"] = \"Polygon\";\n    // Solana = \"Solana\",\n    Chain[\"Terra\"] = \"Terra\";\n    Chain[\"Zcash\"] = \"Zcash\";\n})(Chain || (Chain = {}));\nexport default chains;\n//# sourceMappingURL=index.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const arbitrumMainnetConfig = {\n    selector: \"Arbitrum\",\n    asset: \"ArbETH\",\n    network: {\n        chainId: \"0xa4b1\",\n        chainName: \"Arbitrum One\",\n        nativeCurrency: { name: \"Ether\", symbol: \"AETH\", decimals: 18 },\n        rpcUrls: [\n            \"https://arb1.arbitrum.io/rpc\",\n            \"https://arbitrum-mainnet.infura.io/v3/${INFURA_API_KEY}\",\n            \"https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}\",\n            \"wss://arb1.arbitrum.io/ws\",\n        ],\n        blockExplorerUrls: [\n            \"https://arbiscan.io\",\n            \"https://explorer.arbitrum.io\",\n        ],\n    },\n    logRequestLimit: 20000,\n    addresses: {\n        GatewayRegistry: \"0xf36666C230Fa12333579b9Bd6196CB634D6BC506\",\n        BasicBridge: \"0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5\",\n    },\n};\nexport const arbitrumTestnetConfig = {\n    selector: \"Arbitrum\",\n    asset: \"ArbETH\",\n    isTestnet: true,\n    network: {\n        chainId: \"0x66eeb\",\n        chainName: \"Arbitrum Testnet Rinkeby\",\n        nativeCurrency: {\n            name: \"Arbitrum Rinkeby Ether\",\n            symbol: \"ARETH\",\n            decimals: 18,\n        },\n        rpcUrls: [\n            \"https://rinkeby.arbitrum.io/rpc\",\n            \"wss://rinkeby.arbitrum.io/ws\",\n        ],\n        blockExplorerUrls: [\n            \"https://testnet.arbiscan.io/\",\n            \"https://rinkeby-explorer.arbitrum.io\",\n        ],\n    },\n    logRequestLimit: 20000,\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\n/**\n * Arbitrum/arbETH configuration.\n */\nexport class Arbitrum extends EthereumBaseChain {\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(Arbitrum.configMap, network), web3Provider, config);\n        this.configMap = Arbitrum.configMap;\n        this.assets = Arbitrum.assets;\n    }\n}\nArbitrum.chain = \"Arbitrum\";\nArbitrum.configMap = {\n    [RenNetwork.Testnet]: arbitrumTestnetConfig,\n    [RenNetwork.Mainnet]: arbitrumMainnetConfig,\n};\nArbitrum.assets = {\n    ArbETH: \"ArbETH\",\n};\n//# sourceMappingURL=arbitrum.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const avalancheMainnetConfig = {\n    selector: \"Avalanche\",\n    asset: \"AVAX\",\n    network: {\n        chainId: \"0xa86a\",\n        chainName: \"Avalanche Mainnet\",\n        nativeCurrency: { name: \"Avalanche\", symbol: \"AVAX\", decimals: 18 },\n        rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n        blockExplorerUrls: [\"https://snowtrace.io/\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0xf36666C230Fa12333579b9Bd6196CB634D6BC506\",\n        BasicBridge: \"0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5\",\n    },\n};\nexport const avalancheTestnetConfig = {\n    selector: \"Avalanche\",\n    asset: \"AVAX\",\n    isTestnet: true,\n    network: {\n        chainId: \"0xa869\",\n        chainName: \"Avalanche Fuji Testnet\",\n        nativeCurrency: { name: \"Avalanche\", symbol: \"AVAX\", decimals: 18 },\n        rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n        blockExplorerUrls: [\"https://testnet.snowtrace.io/\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\n/**\n * Avalanche/AVAX configuration.\n */\nexport class Avalanche extends EthereumBaseChain {\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(Avalanche.configMap, network), web3Provider, config);\n        this.configMap = Avalanche.configMap;\n        this.assets = Avalanche.assets;\n    }\n}\nAvalanche.chain = \"Avalanche\";\nAvalanche.configMap = {\n    [RenNetwork.Testnet]: avalancheTestnetConfig,\n    [RenNetwork.Mainnet]: avalancheMainnetConfig,\n};\nAvalanche.assets = {\n    AVAX: \"AVAX\",\n};\n//# sourceMappingURL=avalanche.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const fantomMainnetConfig = {\n    selector: \"Fantom\",\n    asset: \"FTM\",\n    network: {\n        chainId: \"0xfa\",\n        chainName: \"Fantom Opera\",\n        nativeCurrency: { name: \"Fantom\", symbol: \"FTM\", decimals: 18 },\n        rpcUrls: [\"https://rpc.ftm.tools\"],\n        blockExplorerUrls: [\"https://ftmscan.com\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0xf36666C230Fa12333579b9Bd6196CB634D6BC506\",\n        BasicBridge: \"0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5\",\n    },\n};\nexport const fantomTestnetConfig = {\n    selector: \"Fantom\",\n    asset: \"FTM\",\n    network: {\n        chainId: \"0xfa2\",\n        chainName: \"Fantom Testnet\",\n        nativeCurrency: { name: \"Fantom\", symbol: \"FTM\", decimals: 18 },\n        rpcUrls: [\"https://rpc.testnet.fantom.network\"],\n        blockExplorerUrls: [\"https://testnet.ftmscan.com/\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\nexport const fantomDevnetConfig = Object.assign(Object.assign({}, fantomTestnetConfig), { addresses: {\n        GatewayRegistry: \"0xD881213F5ABF783d93220e6bD3Cc21706A8dc1fC\",\n        BasicBridge: \"0xD087b0540e172553c12DEEeCDEf3dFD21Ec02066\",\n    } });\nexport class Fantom extends EthereumBaseChain {\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(Fantom.configMap, network), web3Provider, config);\n        this.configMap = Fantom.configMap;\n        this.assets = Fantom.assets;\n    }\n}\nFantom.chain = \"Fantom\";\nFantom.configMap = {\n    [RenNetwork.Testnet]: fantomTestnetConfig,\n    [RenNetwork.Mainnet]: fantomMainnetConfig,\n};\nFantom.assets = {\n    FTM: \"FTM\",\n};\n//# sourceMappingURL=fantom.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const goerliConfig = {\n    selector: \"Goerli\",\n    asset: \"gETH\",\n    network: {\n        chainId: \"0x5\",\n        chainName: \"Ethereum Testnet Görli\",\n        nativeCurrency: { name: \"Görli Ether\", symbol: \"GOR\", decimals: 18 },\n        rpcUrls: [\n            \"https://rpc.goerli.mudit.blog/\",\n            \"https://rpc.slock.it/goerli \",\n            \"https://goerli.prylabs.net/\",\n        ],\n        blockExplorerUrls: [\"https://goerli.infura.io\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\nexport class Goerli extends EthereumBaseChain {\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(Goerli.configMap, network), web3Provider, config);\n        this.configMap = Goerli.configMap;\n        this.assets = Goerli.assets;\n    }\n}\nGoerli.chain = \"Goerli\";\nGoerli.configMap = {\n    [RenNetwork.Testnet]: goerliConfig,\n};\nGoerli.assets = {\n    gETH: \"gETH\",\n};\n//# sourceMappingURL=goerli.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const polygonMainnetConfig = {\n    selector: \"Polygon\",\n    asset: \"MATIC\",\n    network: {\n        chainId: \"0x89\",\n        chainName: \"Matic(Polygon) Mainnet\",\n        nativeCurrency: { name: \"Matic\", symbol: \"MATIC\", decimals: 18 },\n        rpcUrls: [\n            \"https://rpc-mainnet.maticvigil.com\",\n            \"https://rpc-mainnet.matic.network\",\n            \"wss://ws-mainnet.matic.network\",\n            \"https://rpc-mainnet.matic.quiknode.pro\",\n            \"https://matic-mainnet.chainstacklabs.com\",\n        ],\n        blockExplorerUrls: [\"https://polygonscan.com\"],\n    },\n    logRequestLimit: 1000,\n    addresses: {\n        GatewayRegistry: \"0xf36666C230Fa12333579b9Bd6196CB634D6BC506\",\n        BasicBridge: \"0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5\",\n    },\n};\nexport const polygonTestnetConfig = {\n    selector: \"Polygon\",\n    asset: \"MATIC\",\n    isTestnet: true,\n    network: {\n        chainId: \"0x13881\",\n        chainName: \"Matic(Polygon) Testnet Mumbai\",\n        nativeCurrency: { name: \"Matic\", symbol: \"tMATIC\", decimals: 18 },\n        rpcUrls: [\n            \"https://rpc-mumbai.maticvigil.com\",\n            \"https://rpc-mumbai.matic.today\",\n            \"wss://ws-mumbai.matic.today\",\n        ],\n        blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n    },\n    logRequestLimit: 1000,\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\nexport class Polygon extends EthereumBaseChain {\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(Polygon.configMap, network), web3Provider, config);\n        this.configMap = Polygon.configMap;\n        this.assets = Polygon.assets;\n    }\n}\nPolygon.chain = \"Polygon\";\nPolygon.configMap = {\n    [RenNetwork.Testnet]: polygonTestnetConfig,\n    [RenNetwork.Mainnet]: polygonMainnetConfig,\n};\nPolygon.assets = {\n    MATIC: \"MATIC\",\n};\n//# sourceMappingURL=polygon.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const bscMainnetConfig = {\n    selector: \"BinanceSmartChain\",\n    asset: \"BNB\",\n    network: {\n        chainId: \"0x38\",\n        chainName: \"Binance Smart Chain Mainnet\",\n        nativeCurrency: {\n            name: \"Binance Chain Native Token\",\n            symbol: \"BNB\",\n            decimals: 18,\n        },\n        rpcUrls: [\n            \"https://bsc-dataseed1.binance.org\",\n            \"https://bsc-dataseed2.binance.org\",\n            \"https://bsc-dataseed3.binance.org\",\n            \"https://bsc-dataseed4.binance.org\",\n            \"https://bsc-dataseed1.defibit.io\",\n            \"https://bsc-dataseed2.defibit.io\",\n            \"https://bsc-dataseed3.defibit.io\",\n            \"https://bsc-dataseed4.defibit.io\",\n            \"https://bsc-dataseed1.ninicoin.io\",\n            \"https://bsc-dataseed2.ninicoin.io\",\n            \"https://bsc-dataseed3.ninicoin.io\",\n            \"https://bsc-dataseed4.ninicoin.io\",\n            \"wss://bsc-ws-node.nariox.org\",\n        ],\n        blockExplorerUrls: [\"https://bscscan.com\"],\n    },\n    logRequestLimit: 5000,\n    addresses: {\n        GatewayRegistry: \"0xf36666C230Fa12333579b9Bd6196CB634D6BC506\",\n        BasicBridge: \"0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5\",\n    },\n};\nexport const bscTestnetConfig = {\n    selector: \"BinanceSmartChain\",\n    asset: \"BNB\",\n    isTestnet: true,\n    network: {\n        chainId: \"0x61\",\n        chainName: \"Binance Smart Chain Testnet\",\n        nativeCurrency: {\n            name: \"Binance Chain Native Token\",\n            symbol: \"tBNB\",\n            decimals: 18,\n        },\n        rpcUrls: [\n            \"https://data-seed-prebsc-1-s1.binance.org:8545\",\n            \"https://data-seed-prebsc-2-s1.binance.org:8545\",\n            \"https://data-seed-prebsc-1-s2.binance.org:8545\",\n            \"https://data-seed-prebsc-2-s2.binance.org:8545\",\n            \"https://data-seed-prebsc-1-s3.binance.org:8545\",\n            \"https://data-seed-prebsc-2-s3.binance.org:8545\",\n        ],\n        blockExplorerUrls: [\"https://testnet.bscscan.com\"],\n    },\n    logRequestLimit: 5000,\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\nexport const bscDevnetConfig = Object.assign(Object.assign({}, bscTestnetConfig), { addresses: {\n        GatewayRegistry: \"0x87e83f957a2F3A2E5Fe16d5C6B22e38FD28bdc06\",\n        BasicBridge: \"0x105435a9b0f375B179e5e43A16228C04F01Fb2ee\",\n    } });\nexport class BinanceSmartChain extends EthereumBaseChain {\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(BinanceSmartChain.configMap, network), web3Provider, config);\n        this.configMap = BinanceSmartChain.configMap;\n        this.assets = BinanceSmartChain.assets;\n    }\n}\nBinanceSmartChain.chain = \"BinanceSmartChain\";\nBinanceSmartChain.configMap = {\n    [RenNetwork.Mainnet]: bscMainnetConfig,\n    [RenNetwork.Testnet]: bscTestnetConfig,\n    [RenNetwork.Devnet]: bscDevnetConfig,\n};\nBinanceSmartChain.assets = {\n    BNB: \"BNB\",\n};\n//# sourceMappingURL=bsc.js.map","import { RenNetwork } from \"@renproject/utils\";\nimport { EthereumBaseChain } from \"./base\";\nimport { resolveEvmNetworkConfig } from \"./utils/utils\";\nexport const ethereumMainnet = {\n    selector: \"Ethereum\",\n    asset: \"ETH\",\n    network: {\n        chainId: \"0x1\",\n        chainName: \"Ethereum Mainnet\",\n        nativeCurrency: { name: \"Ether\", symbol: \"ETH\", decimals: 18 },\n        rpcUrls: [\n            \"https://cloudflare-eth.com\",\n            \"https://mainnet.infura.io/v3/${INFURA_API_KEY}\",\n            \"wss://mainnet.infura.io/ws/v3/${INFURA_API_KEY}\",\n            \"https://api.mycryptoapi.com/eth\",\n        ],\n        blockExplorerUrls: [\"https://etherscan.io\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0xf36666C230Fa12333579b9Bd6196CB634D6BC506\",\n        BasicBridge: \"0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5\",\n    },\n};\nexport const ethereumTestnet = {\n    selector: \"Ethereum\",\n    asset: \"ETH\",\n    isTestnet: true,\n    network: {\n        chainId: \"0x2a\",\n        chainName: \"Ethereum Testnet Kovan\",\n        nativeCurrency: { name: \"Kovan Ether\", symbol: \"KOV\", decimals: 18 },\n        rpcUrls: [\n            \"https://kovan.poa.network\",\n            \"http://kovan.poa.network:8545\",\n            \"https://kovan.infura.io/v3/${INFURA_API_KEY}\",\n            \"wss://kovan.infura.io/ws/v3/${INFURA_API_KEY}\",\n            \"ws://kovan.poa.network:8546\",\n        ],\n        blockExplorerUrls: [\"https://kovan.etherscan.io\"],\n    },\n    addresses: {\n        GatewayRegistry: \"0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701\",\n        BasicBridge: \"0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518\",\n    },\n};\nexport const ethereumDevnet = Object.assign(Object.assign({}, ethereumTestnet), { addresses: {\n        GatewayRegistry: \"0x5045E727D9D9AcDe1F6DCae52B078EC30dC95455\",\n        BasicBridge: \"0xFABDB1F53Ef8B080332621cBc9F820a39e7A1B83\",\n    } });\n/**\n * The Ethereum RenJS implementation.\n */\nexport class Ethereum extends EthereumBaseChain {\n    /**\n     *\n     * @param network\n     * @param web3Provider a Web3 or Ethers.js provider.\n     * @param config pass optional configurations, e.g. a logger\n     */\n    constructor(network, web3Provider, config = {}) {\n        super(resolveEvmNetworkConfig(Ethereum.configMap, network), web3Provider, config);\n        this.configMap = Ethereum.configMap;\n        this.assets = Ethereum.assets;\n    }\n}\nEthereum.chain = \"Ethereum\";\nEthereum.configMap = {\n    [RenNetwork.Mainnet]: ethereumMainnet,\n    [RenNetwork.Testnet]: ethereumTestnet,\n    [RenNetwork.Devnet]: ethereumDevnet,\n};\nEthereum.assets = {\n    ETH: \"ETH\",\n    DAI: \"DAI\",\n    REN: \"REN\",\n    USDC: \"USDC\",\n    USDT: \"USDT\",\n    EURT: \"EURT\",\n    BUSD: \"BUSD\",\n    MIM: \"MIM\",\n    CRV: \"CRV\",\n    LINK: \"LINK\",\n    UNI: \"UNI\",\n    SUSHI: \"SUSHI\",\n    FTT: \"FTT\",\n    ROOK: \"ROOK\",\n    BADGER: \"BADGER\",\n    KNC: \"KNC\",\n};\n//# sourceMappingURL=ethereum.js.map","import { providers } from \"ethers\";\n\nimport { Bitcoin } from \"@renproject/chains-bitcoin\";\nimport {\n    Arbitrum,\n    Avalanche,\n    BinanceSmartChain,\n    Ethereum,\n    EthereumBaseChain,\n    EthProvider,\n    EvmNetworkConfig,\n    Fantom,\n    Polygon,\n} from \"@renproject/chains-ethereum\";\nimport RenJS, { Gateway } from \"@renproject/ren\";\nimport { Chain, RenNetwork } from \"@renproject/utils\";\n\nimport { NETWORK } from \"./constants\";\n\nexport interface AssetOption {\n    chain: string;\n    asset: string;\n    assetOrigin: string;\n    toAddressRequired?: boolean;\n}\n\nexport interface CreateGatewayParams {\n    amount?: string;\n    toAddress?: string;\n\n    asset?: string;\n    from?: AssetOption;\n    to?: AssetOption;\n}\n\nexport interface ChainInstance {\n    chain: Chain;\n    connectionRequired?: boolean;\n    accounts?: string[];\n}\n\ninterface EVMConstructor<EVM> {\n    configMap: {\n        [network in RenNetwork]?: EvmNetworkConfig;\n    };\n\n    new (renNetwork: RenNetwork, web3Provider: EthProvider): EVM;\n}\n\nexport const getEVMChain = <EVM extends EthereumBaseChain>(\n    ChainClass: EVMConstructor<EVM>,\n    network: RenNetwork\n): ChainInstance & {\n    chain: EVM;\n} => {\n    const config = ChainClass.configMap[network];\n    if (!config) {\n        throw new Error(\n            `No configuration for ${ChainClass.name} on ${network}.`\n        );\n    }\n\n    let rpcUrl = config.network.rpcUrls[0];\n    if (process.env.REACT_APP_INFURA_KEY) {\n        for (const url of config.network.rpcUrls) {\n            if (url.match(/^https:\\/\\/.*\\$\\{INFURA_API_KEY\\}/)) {\n                rpcUrl = url.replace(\n                    /\\$\\{INFURA_API_KEY\\}/,\n                    process.env.REACT_APP_INFURA_KEY\n                );\n                break;\n            }\n        }\n    }\n\n    const provider = new providers.JsonRpcProvider(rpcUrl);\n\n    return {\n        chain: new ChainClass(network, {\n            provider,\n        }),\n        connectionRequired: true,\n        accounts: [],\n    };\n};\n\nexport const defaultChains = (): { [chain: string]: ChainInstance } => {\n    const ethereum = getEVMChain(Ethereum, NETWORK);\n    const binanceSmartChain = getEVMChain(BinanceSmartChain, NETWORK);\n    const polygon = getEVMChain(Polygon, NETWORK);\n    const avalanche = getEVMChain(Avalanche, NETWORK);\n    const fantom = getEVMChain(Fantom, NETWORK);\n    const arbitrum = getEVMChain(Arbitrum, NETWORK);\n    const bitcoin = {\n        chain: new Bitcoin(NETWORK),\n    };\n\n    return {\n        [Ethereum.chain]: ethereum,\n        [BinanceSmartChain.chain]: binanceSmartChain,\n        [Polygon.chain]: polygon,\n        [Avalanche.chain]: avalanche,\n        [Arbitrum.chain]: arbitrum,\n        [Fantom.chain]: fantom,\n        [Bitcoin.chain]: bitcoin,\n    };\n};\n\nexport const createGateway = async (\n    renJS: RenJS,\n    newGatewayState: CreateGatewayParams,\n    chains: { [chain: string]: ChainInstance }\n): Promise<Gateway> => {\n    if (!newGatewayState.from || !newGatewayState.to) {\n        throw new Error(`Missing gateway field.`);\n    }\n\n    const asset = newGatewayState.from.asset;\n\n    let from;\n    switch (newGatewayState.from.chain) {\n        case Ethereum.chain:\n        case BinanceSmartChain.chain:\n        case Polygon.chain:\n        case Avalanche.chain:\n        case Arbitrum.chain:\n        case Fantom.chain:\n            from = (\n                chains[newGatewayState.from.chain].chain as Ethereum\n            ).Account({ amount: newGatewayState.amount, convertToWei: true });\n            break;\n        case Bitcoin.chain:\n            from = (\n                chains[newGatewayState.from.chain].chain as Bitcoin\n            ).GatewayAddress();\n            break;\n        default:\n            throw new Error(`Unknown chain ${newGatewayState.from.chain}`);\n    }\n\n    let to;\n    switch (newGatewayState.to.chain) {\n        case Ethereum.chain:\n        case BinanceSmartChain.chain:\n        case Polygon.chain:\n        case Avalanche.chain:\n        case Arbitrum.chain:\n        case Fantom.chain:\n            to = (chains[newGatewayState.to.chain].chain as Ethereum).Account();\n            break;\n        case Bitcoin.chain:\n            if (!newGatewayState.toAddress) {\n                throw new Error(`No recipient address provided.`);\n            }\n            to = (chains[newGatewayState.to.chain].chain as Bitcoin).Address(\n                newGatewayState.toAddress\n            );\n            break;\n        default:\n            throw new Error(`Unknown chain ${newGatewayState.to.chain}`);\n    }\n\n    return await renJS.gateway({\n        asset,\n        from,\n        to,\n    });\n};\n","import { ethers } from \"ethers\";\nimport { List } from \"immutable\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { createContainer } from \"unstated-next\";\n\nimport RenJS, { GatewayTransaction } from \"@renproject/ren\";\n\nimport { TransactionParams } from \"../../../ren-js-v3/packages/ren/build/main/gatewayTransaction\";\nimport { NETWORK } from \"../lib/constants\";\nimport { defaultChains } from \"../lib/renJS\";\n\n// Source: https://usehooks.com/useLocalStorage/\nfunction useLocalStorage<T>(\n    key: string,\n    initialValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState<T>(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.error(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value: T | ((value: T) => T)) => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.error(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n\nfunction useRenState() {\n    const [renJS] = useState<RenJS>(() => new RenJS(NETWORK));\n    const [chains, setChains] = useState(() => defaultChains());\n    const [localTxs, setLocalTxs] = useLocalStorage<{\n        [web3Address: string]: {\n            [key: string]: {\n                params: TransactionParams;\n                done: boolean;\n                timestamp: number;\n            };\n        };\n    }>(`ren-js-demo-v3:${NETWORK}:txs`, {});\n    const [localTxsLoaded, setLocalTxsLoaded] = useState(false);\n    const [loadingLocalTxs, setLoadingLocalTxs] = useState(false);\n\n    const [transactions, setTransactions] = useState<GatewayTransaction[]>([]);\n\n    // TODO: make chain-generic\n    const [injectedWeb3, setInjectedWeb3] = useState<any | undefined>();\n    const [injectedWeb3Address, setInjectedWeb3Address] = useState<\n        string | undefined\n    >();\n\n    const addTransaction = useCallback(\n        (tx: GatewayTransaction) => {\n            setTransactions((txs) => [tx, ...txs]);\n            if (injectedWeb3Address) {\n                setLocalTxs((txs) => ({\n                    ...txs,\n                    [injectedWeb3Address.toLowerCase()]: {\n                        ...txs[injectedWeb3Address.toLowerCase()],\n                        [tx.hash]: {\n                            params: tx.params,\n                            done: false,\n                            timestamp:\n                                (\n                                    (txs[injectedWeb3Address.toLowerCase()] ||\n                                        {})[tx.hash] || {}\n                                ).timestamp || Date.now(),\n                        },\n                    },\n                }));\n            }\n        },\n        [setLocalTxs, injectedWeb3Address]\n    );\n\n    const transactionDoneCallback = useCallback(\n        (tx: GatewayTransaction) => {\n            if (injectedWeb3Address) {\n                setLocalTxs((txs) => ({\n                    ...txs,\n                    [injectedWeb3Address.toLowerCase()]: {\n                        ...txs[injectedWeb3Address.toLowerCase()],\n                        [tx.hash]: {\n                            ...(txs[injectedWeb3Address.toLowerCase()] || {})[\n                                tx.hash\n                            ],\n                            done: true,\n                        },\n                    },\n                }));\n            }\n        },\n        [setLocalTxs, injectedWeb3Address]\n    );\n\n    useEffect(() => {\n        renJS.withChains(...Object.values(chains).map((chain) => chain.chain));\n    }, [renJS, chains]);\n\n    const connect = useCallback(\n        (chain: string, provider: any, address: string) => {\n            const chainObject = chains[chain];\n            if (chainObject.chain.withProvider) {\n                chainObject.chain.withProvider(provider);\n            }\n            chains[chain].accounts = [...(chainObject.accounts || []), address];\n            chains[chain].connectionRequired = false;\n            setChains(chains);\n        },\n        [chains]\n    );\n\n    const setInjectedWeb3AndConnect = useCallback(\n        async (provider: any) => {\n            try {\n                setInjectedWeb3(provider);\n                const signer = new ethers.providers.Web3Provider(\n                    provider,\n                    \"any\"\n                ).getSigner();\n                const address = await signer.getAddress();\n                setInjectedWeb3Address(address);\n                chains[\"Ethereum\"].chain.withProvider!({\n                    signer,\n                });\n                chains[\"BinanceSmartChain\"].chain.withProvider!({\n                    signer,\n                });\n                chains[\"Polygon\"].chain.withProvider!({\n                    signer,\n                });\n                chains[\"Fantom\"].chain.withProvider!({\n                    signer,\n                });\n                chains[\"Avalanche\"].chain.withProvider!({\n                    signer,\n                });\n                chains[\"Arbitrum\"].chain.withProvider!({\n                    signer,\n                });\n\n                try {\n                    if (!localTxsLoaded) {\n                        setLocalTxsLoaded(true);\n                        let toLoad = localTxs[address.toLowerCase()];\n                        if (toLoad && Object.values(toLoad).length > 0) {\n                            setLoadingLocalTxs(true);\n                            Promise.allSettled(\n                                List(\n                                    Object.values(\n                                        localTxs[address.toLowerCase()] || {}\n                                    )\n                                )\n                                    .sortBy((tx) => tx.timestamp || 0)\n                                    .map(async (tx) => {\n                                        if (!tx.done) {\n                                            return await renJS.gatewayTransaction(\n                                                tx.params || tx\n                                            );\n                                        }\n                                    })\n                                    .toArray()\n                            )\n                                .then((results) => {\n                                    results.forEach((result) => {\n                                        if (\n                                            result &&\n                                            result.status === \"fulfilled\"\n                                        ) {\n                                            const value = result.value;\n                                            if (value) {\n                                                setTransactions((txs) => [\n                                                    value,\n                                                    ...txs,\n                                                ]);\n                                            }\n                                        }\n                                    });\n                                })\n                                .finally(() => {\n                                    setLoadingLocalTxs(false);\n                                });\n                        }\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            } catch (error) {\n                console.error(error);\n                throw error;\n            }\n        },\n        [chains, addTransaction, localTxs, localTxsLoaded, renJS]\n    );\n\n    return {\n        renJS,\n        chains,\n        connect,\n        injectedWeb3,\n        injectedWeb3Address,\n        setInjectedWeb3: setInjectedWeb3AndConnect,\n        transactions,\n        addTransaction,\n        loadingLocalTxs,\n        transactionDoneCallback,\n    };\n}\n\nexport const RenState = createContainer(useRenState);\n","export interface Props {\n    web3Account: string | undefined;\n    connectWeb3Account: () => Promise<void>;\n}\n\nfunction AccountList({ web3Account, connectWeb3Account }: Props) {\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"shadow rounded-md w-full\">\n                <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6 w-full h-full rounded-md\">\n                    <h2 className=\"font-bold\">Accounts</h2>\n                </div>\n            </div>\n            <div className=\"w-full py-6 px-4\">\n                <div className=\"flex content-center items-center\">\n                    <span>Web3 account:</span>\n                    {web3Account ? (\n                        <span className=\"ml-4\">\n                            <a\n                                className=\"text-indigo-600\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={`https://blockscan.com/address/${web3Account}`}\n                            >\n                                {web3Account}\n                            </a>\n                        </span>\n                    ) : (\n                        <button\n                            className=\"group ml-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-black bg-gray-300 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-200 disabled:opacity-50\"\n                            onClick={connectWeb3Account}\n                        >\n                            Connect\n                        </button>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AccountList;\n","import { useCallback } from \"react\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport { RenState } from \"../../state/renState\";\nimport AccountList from \"../views/AccountList\";\n\nconst AccountSection = () => {\n    const { injectedWeb3Address, setInjectedWeb3 } = RenState.useContainer();\n\n    const connectWeb3 = useCallback(async () => {\n        const provider: any = await detectEthereumProvider();\n        if (provider) {\n            await provider.enable();\n            await setInjectedWeb3(provider);\n        } else {\n            throw new Error(`Please install MetaMask.`);\n        }\n    }, [setInjectedWeb3]);\n\n    return (\n        <AccountList\n            web3Account={injectedWeb3Address}\n            connectWeb3Account={connectWeb3}\n        />\n    );\n};\n\nexport default AccountSection;\n","import { Fragment } from \"react\";\n\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon, XIcon } from \"@heroicons/react/solid\";\n\ninterface Option<T = any> {\n    value: T;\n    label: string;\n}\n\ninterface Props<T = any> {\n    option?: Option<T>;\n\n    validOptions: Array<Option<T>>;\n\n    onSelectOption: (options: Option<T>) => void;\n    onCancelOption: () => void;\n}\n\nconst classNames = (...classes: string[]) => {\n    return classes.filter(Boolean).join(\" \");\n};\n\nexport const Dropdown = ({\n    option,\n    validOptions,\n    onSelectOption,\n    onCancelOption,\n}: Props) => {\n    return (\n        <div className=\"w-full flex items-center\">\n            <Menu as=\"div\" className=\"w-full relative inline-block text-left\">\n                <div>\n                    <Menu.Button\n                        disabled={validOptions.length === 0}\n                        className=\"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\"\n                    >\n                        {option ? <>{option.label}</> : <>Select a token</>}\n                        <ChevronDownIcon\n                            className=\"-mr-1 ml-2 h-5 w-5\"\n                            aria-hidden=\"true\"\n                        />\n                    </Menu.Button>\n                </div>\n\n                <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                >\n                    <Menu.Items className=\"origin-top-right absolute mt-2 w-full rounded-md border-2 border-indigo-600 shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50\">\n                        <div className=\"py-1\">\n                            {validOptions.map((validOption) => {\n                                const onClick = () =>\n                                    onSelectOption(validOption);\n                                return (\n                                    <Menu.Item\n                                        onClick={onClick}\n                                        key={validOption.label}\n                                    >\n                                        {({ active }) => (\n                                            <span\n                                                className={classNames(\n                                                    active\n                                                        ? \"bg-gray-100 text-gray-900\"\n                                                        : \"text-gray-700\",\n                                                    \"block px-4 py-2 text-sm\"\n                                                )}\n                                            >\n                                                {validOption.label}\n                                            </span>\n                                        )}\n                                    </Menu.Item>\n                                );\n                            })}\n                        </div>\n                    </Menu.Items>\n                </Transition>\n            </Menu>\n            <div className=\"ml-2 w-5\">\n                {option ? (\n                    <button onClick={onCancelOption}>\n                        <XIcon\n                            className=\"text-indigo-600 -mb-1 h-5 w-5\"\n                            aria-hidden=\"true\"\n                        />\n                    </button>\n                ) : null}\n            </div>\n        </div>\n    );\n};\n","import { Dropdown } from \"./Dropdown\";\n\ninterface Props {\n    option?: string;\n\n    validOptions: Array<string>;\n\n    onSelectOption: (options: string) => void;\n    onCancelOption: () => void;\n}\n\nexport const AssetSelection = ({\n    option,\n    validOptions,\n    onSelectOption,\n    onCancelOption,\n}: Props) => {\n    return (\n        <Dropdown\n            option={\n                option\n                    ? {\n                          value: option,\n                          label: option,\n                      }\n                    : undefined\n            }\n            validOptions={validOptions.map((option) => ({\n                value: option,\n                label: option,\n            }))}\n            onSelectOption={(option) => onSelectOption(option.value)}\n            onCancelOption={onCancelOption}\n        />\n    );\n};\n","export const Spinner = ({ className }: { className?: string }) => {\n    return (\n        <svg\n            className={\n                \"animate-spin -ml-1 mr-3 h-5 w-5 text-white \" +\n                (className || \"\")\n            }\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n        >\n            <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n            ></circle>\n            <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            ></path>\n        </svg>\n    );\n};\n","import { AssetOption } from \"../../lib/renJS\";\nimport { Dropdown } from \"./Dropdown\";\n\ninterface Props {\n    option?: AssetOption;\n\n    validOptions: Array<AssetOption>;\n\n    onSelectOption: (options: AssetOption) => void;\n    onCancelOption: () => void;\n}\n\nexport const TokenSelection = ({\n    option,\n    validOptions,\n    onSelectOption,\n    onCancelOption,\n}: Props) => {\n    return (\n        <Dropdown\n            option={\n                option\n                    ? {\n                          value: option,\n                          label: `${option.chain}`,\n                      }\n                    : option\n            }\n            validOptions={validOptions.map((option) => ({\n                value: option,\n                label: `${option.chain}`,\n            }))}\n            onSelectOption={(option) => onSelectOption(option.value)}\n            onCancelOption={onCancelOption}\n        />\n    );\n};\n","import { useCallback, useState } from \"react\";\n\nimport { CheckIcon } from \"@heroicons/react/solid\";\n\nimport { AssetOption, CreateGatewayParams } from \"../../lib/renJS\";\nimport { AssetSelection } from \"./AssetSelection\";\nimport { Spinner } from \"./Spinner\";\nimport { TokenSelection } from \"./TokenSelection\";\n\ninterface Props {\n    connectFrom?: () => Promise<void>;\n\n    createGatewayParams: CreateGatewayParams;\n\n    assets: string[];\n    validFromOptions: Array<AssetOption>;\n    validToOptions: Array<AssetOption>;\n\n    updateCreateGatewayParams: (state: CreateGatewayParams) => void;\n    handleCreateGateway: () => Promise<void>;\n}\n\nfunction CreateGateway({\n    connectFrom,\n    // connectTo,\n\n    assets,\n    createGatewayParams,\n    validFromOptions,\n    validToOptions,\n    updateCreateGatewayParams,\n    handleCreateGateway,\n}: Props) {\n    const [connectingFrom, setConnectingFrom] = useState(false);\n    const [connectingFromError, setConnectingFromError] = useState<Error>();\n    const [creatingGateway, setCreatingGateway] = useState(false);\n    const [errorCreatingGateway, setErrorCreatingGateway] = useState<\n        Error | undefined\n    >();\n    const [connectedFrom, setConnectedFrom] = useState(false);\n\n    const onSelectAssetOption = useCallback(\n        (asset: string) => {\n            updateCreateGatewayParams({\n                ...createGatewayParams,\n                asset,\n                from: undefined,\n                to: undefined,\n            });\n        },\n        [createGatewayParams, updateCreateGatewayParams]\n    );\n\n    const onSelectFromOption = useCallback(\n        (from: { asset: string; chain: string; assetOrigin: string }) => {\n            updateCreateGatewayParams({\n                ...createGatewayParams,\n                from,\n            });\n        },\n        [createGatewayParams, updateCreateGatewayParams]\n    );\n\n    const onSelectToOption = useCallback(\n        (to: { asset: string; chain: string; assetOrigin: string }) => {\n            updateCreateGatewayParams({\n                ...createGatewayParams,\n                to,\n            });\n        },\n        [createGatewayParams, updateCreateGatewayParams]\n    );\n\n    const onCancelAssetOption = useCallback(() => {\n        updateCreateGatewayParams({\n            ...createGatewayParams,\n            asset: undefined,\n            from: undefined,\n            to: undefined,\n        });\n    }, [createGatewayParams, updateCreateGatewayParams]);\n\n    const onCancelFromOption = useCallback(() => {\n        updateCreateGatewayParams({\n            ...createGatewayParams,\n            from: undefined,\n        });\n    }, [createGatewayParams, updateCreateGatewayParams]);\n\n    const onCancelToOption = useCallback(() => {\n        updateCreateGatewayParams({\n            ...createGatewayParams,\n            to: undefined,\n        });\n    }, [createGatewayParams, updateCreateGatewayParams]);\n\n    const onConnectFrom = useCallback(async () => {\n        if (!connectFrom) {\n            return;\n        }\n\n        setConnectingFrom(true);\n        try {\n            await connectFrom();\n            setConnectedFrom(true);\n        } catch (error: any) {\n            console.error(error);\n            setConnectingFromError(error);\n        }\n        setConnectingFrom(false);\n    }, [connectFrom]);\n\n    const onAmountChange: React.ChangeEventHandler<HTMLInputElement> =\n        useCallback(\n            (e) => {\n                updateCreateGatewayParams({\n                    ...createGatewayParams,\n                    amount: e.target.value,\n                });\n            },\n            [updateCreateGatewayParams, createGatewayParams]\n        );\n\n    const onToAddressChange: React.ChangeEventHandler<HTMLInputElement> =\n        useCallback(\n            (e) => {\n                updateCreateGatewayParams({\n                    ...createGatewayParams,\n                    toAddress: e.target.value,\n                });\n            },\n            [updateCreateGatewayParams, createGatewayParams]\n        );\n\n    const onCreateGateway = useCallback(async () => {\n        setCreatingGateway(true);\n        try {\n            await handleCreateGateway();\n        } catch (error: any) {\n            console.error(error);\n            setErrorCreatingGateway(error);\n        }\n        setCreatingGateway(false);\n    }, [handleCreateGateway]);\n\n    return (\n        <div className=\"flex flex-col w-full space-y-4\">\n            <h3 className=\"font-bold\">Create Gateway</h3>\n            <div className=\"flex items-center\">\n                <span className=\"mr-2\">Asset:</span>\n                <AssetSelection\n                    option={createGatewayParams.asset}\n                    validOptions={assets}\n                    onSelectOption={onSelectAssetOption}\n                    onCancelOption={onCancelAssetOption}\n                />\n            </div>\n            <div className=\"flex items-center\">\n                <span className=\"mr-2\">From:</span>\n                <TokenSelection\n                    option={createGatewayParams.from}\n                    validOptions={validFromOptions}\n                    onSelectOption={onSelectFromOption}\n                    onCancelOption={onCancelFromOption}\n                />\n            </div>\n            <div className=\"flex items-center\">\n                <span className=\"mr-2\">To:</span>\n                <TokenSelection\n                    option={createGatewayParams.to}\n                    validOptions={validToOptions}\n                    onSelectOption={onSelectToOption}\n                    onCancelOption={onCancelToOption}\n                />\n            </div>\n\n            {createGatewayParams.to?.toAddressRequired ? (\n                <div className=\"flex items-center\">\n                    <span className=\"mr-2\">Address:</span>\n                    <input\n                        type=\"text\"\n                        className=\"p-2 mt-1 border focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                        value={createGatewayParams.toAddress}\n                        onChange={onToAddressChange}\n                    />\n                </div>\n            ) : null}\n\n            <div className=\"flex items-center\">\n                <span className=\"mr-2\">Amount:</span>\n                <input\n                    type=\"text\"\n                    className=\"p-2 mt-1 border focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                    value={createGatewayParams.amount}\n                    onChange={onAmountChange}\n                />\n                <div className=\"ml-2 w-5\"></div>\n            </div>\n\n            {/* {connectFrom || connectTo ? ( */}\n            {connectFrom ? (\n                <div className=\"flex flex-col\">\n                    {/* {connectFrom ? ( */}\n                    <button\n                        disabled={connectingFrom}\n                        onClick={onConnectFrom}\n                        className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                    >\n                        {connectingFrom ? (\n                            <>\n                                <Spinner /> Connecting{\" \"}\n                                {/* {createGatewayParams.from?.chain} wallet */}\n                                Web3 wallet\n                            </>\n                        ) : (\n                            <>\n                                {/* Connect {createGatewayParams.from?.chain} wallet */}\n                                Connect Web3 wallet\n                            </>\n                        )}\n                    </button>\n                    {connectingFromError ? (\n                        <p className=\"text-red-500 break-words\">\n                            {String(connectingFromError.message)}\n                        </p>\n                    ) : null}\n                    {/* ) : null} */}\n\n                    {/* {connectTo ? (\n                        <button\n                            onClick={connectTo}\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                        >\n                            Connect {createGatewayParams.to?.chain} wallet\n                        </button>\n                    ) : null} */}\n                </div>\n            ) : (\n                <div>\n                    <button\n                        disabled={\n                            !createGatewayParams.from ||\n                            !createGatewayParams.to ||\n                            creatingGateway ||\n                            (createGatewayParams.to?.toAddressRequired &&\n                                !createGatewayParams.toAddress)\n                        }\n                        onClick={onCreateGateway}\n                        className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                    >\n                        {creatingGateway ? (\n                            <>\n                                <Spinner /> Creating gateway\n                            </>\n                        ) : (\n                            <>\n                                {connectedFrom ? (\n                                    <>\n                                        Connected\n                                        <CheckIcon className=\"text-white h-5 w-5 inline-block ml-2\" />\n                                        <span className=\"mx-4\">-</span>\n                                    </>\n                                ) : null}\n                                Create gateway\n                            </>\n                        )}\n                    </button>\n                    {errorCreatingGateway ? (\n                        <p className=\"text-red-500 break-words\">\n                            {String(errorCreatingGateway.message)}\n                        </p>\n                    ) : null}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default CreateGateway;\n","export interface Props {\n    fromAsset: string;\n    fromChain: string;\n    toAsset: string;\n    toChain: string;\n    amount?: string;\n}\n\nconst GatewaySummary = ({\n    amount,\n    fromAsset,\n    fromChain,\n    toAsset,\n    toChain,\n}: Props) => {\n    const conversion = fromAsset === toAsset;\n\n    return (\n        <div>\n            <div className=\"font-bold\">\n                {conversion ? \"Move\" : \"Convert\"}\n                {amount ? <> {amount}</> : <></>} {fromAsset} from {fromChain}{\" \"}\n                to {conversion ? <>{toAsset} on</> : null} {toChain}\n            </div>\n        </div>\n    );\n};\n\nexport default GatewaySummary;\n","export interface Props {\n    gatewayAddress: string;\n    fromAsset: string;\n    fromChain: string;\n    toAsset: string;\n    toChain: string;\n}\n\nconst ViewDepositGateway = ({\n    gatewayAddress,\n    fromAsset,\n    fromChain,\n    toAsset,\n    toChain,\n}: Props) => {\n    const conversion = fromAsset === toAsset;\n\n    return (\n        <div>\n            <div>\n                {conversion ? \"Move\" : \"Convert\"} {fromAsset} from {fromChain}{\" \"}\n                to {conversion ? <>{toAsset} on</> : null} {toChain}\n                <div>\n                    <p>\n                        Deposit {fromAsset} to {gatewayAddress}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ViewDepositGateway;\n","import BigNumber from \"bignumber.js\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { CheckIcon } from \"@heroicons/react/solid\";\nimport { Ethereum } from \"@renproject/chains-ethereum\";\nimport {\n    ChainTransactionStatus,\n    isDefined,\n    TxSubmitter,\n    TxWaiter,\n} from \"@renproject/utils\";\n\nimport { RenVMCrossChainTxSubmitter } from \"../../../../ren-js-v3/packages/ren/build/main/renVMTxSubmitter\";\nimport { RenState } from \"../../state/renState\";\nimport { Spinner } from \"../views/Spinner\";\n\nexport interface Props {\n    tx: TxSubmitter | TxWaiter;\n    target?: number;\n    autoSubmit?: boolean;\n    onDone: () => void;\n}\n\nconst ChainTxHandler = ({ tx, target, autoSubmit, onDone }: Props) => {\n    const { injectedWeb3, chains } = RenState.useContainer();\n\n    const [submitting, setSubmitting] = useState(autoSubmit ? true : false);\n    const [waiting, setWaiting] = useState(false);\n\n    const [errorSubmitting, setErrorSubmitting] = useState<Error | undefined>();\n    const [errorWaiting, setErrorWaiting] = useState<Error | undefined>();\n\n    const [wrongNetwork, setWrongNetwork] = useState<boolean | undefined>();\n    const [switchedNetwork, setSwitchedNetwork] = useState<boolean>(false);\n\n    const [confirmations, setConfirmations] = useState<number>();\n\n    const wait = useCallback(async () => {\n        setErrorSubmitting(undefined);\n        setErrorWaiting(undefined);\n\n        try {\n            setWaiting(true);\n            await tx.wait(target).on(\"status\", (status) => {\n                setConfirmations(status.confirmations);\n            });\n            onDone();\n        } catch (error: any) {\n            console.error(error);\n            setErrorWaiting(error);\n        }\n        setWaiting(false);\n    }, [tx, onDone, target]);\n\n    const submit = useCallback(async () => {\n        setErrorSubmitting(undefined);\n        setErrorWaiting(undefined);\n\n        if (tx.submit && tx.status.status === ChainTransactionStatus.Ready) {\n            try {\n                setSubmitting(true);\n                await tx.submit({\n                    txConfig: {\n                        gasLimit: 500000,\n                    },\n                });\n                wait().catch(console.error);\n            } catch (error: any) {\n                console.error(error);\n                setErrorSubmitting(error);\n            }\n            setSubmitting(false);\n        }\n    }, [tx, wait]);\n\n    const [calledWait, setCalledWait] = useState(false);\n\n    useEffect(() => {\n        if (!calledWait) {\n            setCalledWait(true);\n            if (autoSubmit) {\n                submit().catch(console.error);\n            }\n            if (tx.status.status !== ChainTransactionStatus.Ready) {\n                wait().catch(console.error);\n            }\n        }\n    }, [calledWait, setCalledWait, submit, autoSubmit, wait, tx.status.status]);\n\n    useEffect(() => {\n        (async () => {\n            if (tx.chain === \"RenVM\") {\n                setWrongNetwork(false);\n                return;\n            }\n\n            const chainID = new BigNumber(\n                await injectedWeb3.request({\n                    method: \"eth_chainId\",\n                })\n            ).toNumber();\n            if (\n                chainID !==\n                new BigNumber(\n                    (\n                        chains[tx.chain].chain as Ethereum\n                    ).network.network?.chainId\n                ).toNumber()\n            ) {\n                setWrongNetwork(true);\n            } else {\n                setWrongNetwork(false);\n            }\n        })().catch(console.error);\n    });\n\n    const switchNetwork = useCallback(async () => {\n        if (tx.chain === \"RenVM\") {\n            return;\n        }\n\n        try {\n            await injectedWeb3.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [\n                    {\n                        chainId: (chains[tx.chain].chain as Ethereum).network\n                            .network.chainId,\n                    },\n                ],\n            });\n            setSwitchedNetwork(true);\n        } catch (error) {\n            await injectedWeb3.request({\n                method: \"wallet_addEthereumChain\",\n                params: [(chains[tx.chain].chain as Ethereum).network.network],\n            });\n        }\n        setWrongNetwork(false);\n    }, [injectedWeb3, chains, tx]);\n\n    if (wrongNetwork === undefined) {\n        return (\n            <div>\n                <Spinner /> Loading...\n            </div>\n        );\n    }\n\n    const gatewayTarget = isDefined(target) ? target : tx.status.target;\n\n    switch (tx.status.status) {\n        case ChainTransactionStatus.Done:\n            return (\n                <p>\n                    Transaction done!{\" \"}\n                    <button className=\"test-indigo-600\" onClick={onDone}>\n                        Continue\n                    </button>\n                </p>\n            );\n        case ChainTransactionStatus.Reverted:\n            return <p>Transaction reverted: {tx.status.revertReason}</p>;\n        default:\n            return (\n                <>\n                    {errorSubmitting ? (\n                        <p>\n                            <span className=\"text-red-500 break-words\">\n                                Error submitting:{\" \"}\n                                {String(errorSubmitting.message)}\n                            </span>{\" \"}\n                            <button\n                                onClick={submit}\n                                className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                            >\n                                Retry submitting to {tx.chain}\n                            </button>\n                        </p>\n                    ) : errorWaiting ? (\n                        <p>\n                            <span className=\"text-red-500 break-words\">\n                                Error waiting for {tx.chain} transaction\n                                confirmations: {String(errorWaiting.message)}.\n                            </span>{\" \"}\n                            <button\n                                onClick={wait}\n                                className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                            >\n                                Retry\n                            </button>\n                        </p>\n                    ) : submitting ? (\n                        <button\n                            disabled={true}\n                            className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                        >\n                            <Spinner /> Submitting to {tx.chain}\n                        </button>\n                    ) : waiting ? (\n                        <button\n                            disabled={true}\n                            className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                        >\n                            <Spinner /> Waiting for {tx.chain}{\" \"}\n                            {isDefined(gatewayTarget) && gatewayTarget === 1\n                                ? \"confirmation\"\n                                : \"confirmations\"}\n                            ...\n                            {(tx as RenVMCrossChainTxSubmitter).status.response\n                                ?.txStatus ? (\n                                <>\n                                    {\" \"}\n                                    (\n                                    {\n                                        (tx as RenVMCrossChainTxSubmitter)\n                                            .status.response?.txStatus\n                                    }\n                                    )\n                                </>\n                            ) : isDefined(confirmations) &&\n                              isDefined(gatewayTarget) &&\n                              gatewayTarget > 1 ? (\n                                <>\n                                    {\" \"}\n                                    ({confirmations}/{gatewayTarget})\n                                </>\n                            ) : null}\n                        </button>\n                    ) : wrongNetwork ? (\n                        <button\n                            onClick={switchNetwork}\n                            className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                        >\n                            Switch to {tx.chain} in MetaMask\n                        </button>\n                    ) : (\n                        <button\n                            onClick={submit}\n                            className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                        >\n                            {switchedNetwork ? (\n                                <>\n                                    Switched\n                                    <CheckIcon className=\"text-white h-5 w-5 inline-block ml-2\" />\n                                    <span className=\"mx-4\">-</span>\n                                </>\n                            ) : null}\n                            Submit to {tx.chain}\n                        </button>\n                    )}\n                </>\n            );\n    }\n};\n\nexport default ChainTxHandler;\n","import { BigNumber } from \"bignumber.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { CheckIcon, XIcon } from \"@heroicons/react/solid\";\nimport { Gateway } from \"@renproject/ren\";\nimport { ChainTransactionStatus } from \"@renproject/utils\";\n\nimport { Ethereum } from \"../../../../ren-js-v3/packages/chains/chains-ethereum/build/main\";\nimport GatewaySummary from \"../views/GatewaySummary\";\nimport { Spinner } from \"../views/Spinner\";\nimport ViewDepositGateway from \"../views/ViewDepositGateway\";\nimport ChainTxHandler from \"./ChainTxHandler\";\n\nexport interface Props {\n    gateway: Gateway;\n    amount: string | undefined;\n    onDone: () => void;\n}\n\nfunction CurrentGateway({ gateway, amount, onDone }: Props) {\n    const [done, setDone] = useState(false);\n    const [approved, setApproved] = useState(false);\n    const [transactionDetected, setTransactionDetected] = useState(false);\n    const [balance, setBalance] = useState<string>();\n    const [outputAmount, setOutputAmount] = useState<BigNumber>();\n    const [minimumAmount, setMinimumAmount] = useState<string>();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const decimals = await (\n                    gateway.fromChain as Ethereum\n                ).assetDecimals(gateway.params.asset);\n                const balance = await (\n                    gateway.fromChain as Ethereum\n                ).getBalance(gateway.params.asset);\n                setBalance(balance.shiftedBy(-decimals).toFixed());\n                if (amount) {\n                    setOutputAmount(\n                        gateway.fees\n                            .estimateOutput(\n                                new BigNumber(amount).shiftedBy(decimals)\n                            )\n                            .shiftedBy(-decimals)\n                    );\n                }\n                setMinimumAmount(\n                    gateway.fees.minimumAmount.shiftedBy(-decimals).toFixed()\n                );\n            } catch (error) {\n                console.error(error);\n            }\n        })().catch(console.error);\n    }, [gateway.params.asset, gateway.fromChain]);\n\n    const fromAsset = gateway.params.asset;\n    const fromChain = gateway.fromChain.chain;\n    const toAsset = gateway.params.asset;\n    const toChain = gateway.toChain.chain;\n\n    const onGatewayDone = useCallback(() => {\n        setDone(true);\n    }, []);\n\n    const onApprovalDone = useCallback(() => {\n        setApproved(true);\n    }, []);\n\n    useEffect(() => {\n        gateway.on(\"transaction\", (tx) => {\n            setTransactionDetected(true);\n        });\n    }, [gateway]);\n\n    return (\n        <div>\n            <div className=\"flex justify-between\">\n                <GatewaySummary\n                    fromAsset={fromAsset}\n                    fromChain={fromChain}\n                    toAsset={toAsset}\n                    toChain={toChain}\n                />\n                <button className=\"h-5 w-5 -mt-4 -mr-4\" onClick={onDone}>\n                    <XIcon className=\"text-black h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n            </div>\n            {done ? (\n                !transactionDetected ? (\n                    <div className=\"mt-4\">\n                        <p className=\"text-sm font-medium\">\n                            <Spinner className=\"text-indigo-600 inline-block\" />{\" \"}\n                            Loading transaction...\n                        </p>\n                    </div>\n                ) : (\n                    <div className=\"mt-4\">\n                        <p className=\"text-sm font-medium\">\n                            Submitted - view your in-progress transaction under\n                            Transactions.\n                        </p>\n                        <button\n                            className=\"group w-full mt-4 relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-black bg-gray-300 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-200 disabled:opacity-50\"\n                            onClick={onDone}\n                        >\n                            Return\n                        </button>\n                    </div>\n                )\n            ) : !approved &&\n              gateway.setup.approval &&\n              gateway.setup.approval.status.status !==\n                  ChainTransactionStatus.Done ? (\n                <div className=\"mt-4\">\n                    Step 1: Approve {gateway.params.asset}\n                    <ChainTxHandler\n                        tx={gateway.setup.approval}\n                        target={1}\n                        onDone={onApprovalDone}\n                    />\n                </div>\n            ) : outputAmount && outputAmount.isZero() ? (\n                <>\n                    <p>Invalid amount - minimum amount: {minimumAmount}</p>\n                </>\n            ) : gateway.in ? (\n                <>\n                    {gateway.setup.approval ? (\n                        <div className=\"mt-4\">\n                            Step 1: Approve {gateway.params.asset}{\" \"}\n                            <CheckIcon className=\"text-indigo-600 h-5 w-5 inline-block\" />\n                        </div>\n                    ) : null}\n                    <div className=\"mt-4\">\n                        {gateway.setup.approval ? \"Step 2: \" : \"\"}Submit gateway\n                        <ChainTxHandler\n                            tx={gateway.in}\n                            onDone={onGatewayDone}\n                            target={1}\n                        />\n                    </div>\n                </>\n            ) : gateway.gatewayAddress ? (\n                <>\n                    <ViewDepositGateway\n                        gatewayAddress={gateway.gatewayAddress}\n                        fromAsset={fromAsset}\n                        fromChain={fromChain}\n                        toAsset={toAsset}\n                        toChain={toChain}\n                    />\n                </>\n            ) : null}\n            {balance ? (\n                <p className=\"text-sm text-gray-600 mt-4\">\n                    Balance: {balance} {gateway.params.asset}\n                </p>\n            ) : null}\n            {outputAmount ? (\n                <p className=\"text-sm text-gray-600 mt-4\">\n                    Receive amount: {outputAmount.toFixed()}{\" \"}\n                    {gateway.params.asset}\n                </p>\n            ) : null}\n        </div>\n    );\n}\n\nexport default CurrentGateway;\n","import { useCallback, useState } from \"react\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Chains from \"@renproject/chains\";\nimport { Gateway } from \"@renproject/ren\";\n\nimport {\n    AssetOption,\n    createGateway,\n    CreateGatewayParams,\n} from \"../../lib/renJS\";\nimport { RenState } from \"../../state/renState\";\nimport CreateGateway from \"../views/CreateGateway\";\nimport CurrentGateway from \"./CurrentGateway\";\n\nconst mintChains = [\n    \"Ethereum\",\n    \"BinanceSmartChain\",\n    \"Polygon\",\n    \"Fantom\",\n    \"Avalanche\",\n    \"Arbitrum\",\n];\n\nconst assets = Object.values(Chains)\n    .reduce(\n        (acc, chain) => [\n            ...acc,\n            ...Object.values(chain.assets).map((asset) => ({\n                asset,\n                lockChain: chain.chain,\n                mintChains: mintChains.filter(\n                    (mintChain) => mintChain !== chain.chain\n                ),\n            })),\n        ],\n        [] as Array<{\n            asset: string;\n            lockChain: string;\n            mintChains: string[];\n        }>\n    )\n    .filter(\n        (asset) => mintChains.includes(asset.lockChain) || asset.asset === \"BTC\"\n    );\n\nconst fromOptions = assets.reduce(\n    (acc, asset) => [\n        ...acc,\n        {\n            asset: asset.asset,\n            chain: asset.lockChain,\n            assetOrigin: asset.lockChain,\n            toAddressRequired: !mintChains.includes(asset.lockChain),\n        },\n        ...asset.mintChains.map(\n            (mintChain) => ({\n                asset: asset.asset,\n                chain: mintChain,\n                assetOrigin: asset.lockChain,\n            }),\n            [] as AssetOption[]\n        ),\n    ],\n    [] as AssetOption[]\n);\n\nconst toOptions = fromOptions;\n\nfunction GatewaySection() {\n    const { renJS, chains, injectedWeb3, setInjectedWeb3, addTransaction } =\n        RenState.useContainer();\n\n    // Current gateway\n    let [currentGateway, setCurrentGateway] = useState<Gateway | undefined>();\n    const onDone = useCallback(() => {\n        if (currentGateway) {\n            currentGateway.eventEmitter.removeListener(\n                \"transaction\",\n                addTransaction\n            );\n        }\n        setCurrentGateway(undefined);\n    }, [addTransaction, currentGateway, setCurrentGateway]);\n\n    // const [connecting, setConnecting] = useState<string | undefined>();\n\n    // New gateway\n    const [createGatewayParams, setCreateGatewayParams] =\n        useState<CreateGatewayParams>({\n            amount: \"1.5\",\n            from: undefined,\n            to: undefined,\n        });\n    const [validFromOptions, setValidFromOptions] = useState<AssetOption[]>([]);\n    const [validToOptions, setValidToOptions] = useState<AssetOption[]>([]);\n\n    const handleCreateGateway = useCallback(async () => {\n        const gateway = await createGateway(renJS, createGatewayParams, chains);\n        setCurrentGateway(gateway);\n        gateway.on(\"transaction\", addTransaction);\n    }, [renJS, chains, createGatewayParams, addTransaction]);\n\n    const connectFrom = useCallback(async () => {\n        const provider: any = await detectEthereumProvider();\n        if (provider) {\n            await provider.enable();\n            await setInjectedWeb3(provider);\n        } else {\n            throw new Error(`Please install MetaMask.`);\n        }\n    }, [setInjectedWeb3]);\n\n    const updateCreateGatewayParams = useCallback(\n        (newParams: CreateGatewayParams) => {\n            setCreateGatewayParams(newParams);\n\n            let newFromOptions = fromOptions;\n            newFromOptions = newFromOptions.filter(\n                (x) =>\n                    x.asset === newParams.asset &&\n                    (newParams.to\n                        ? x.asset === newParams.to.asset &&\n                          x.chain !== newParams.to.chain &&\n                          (newParams.to.chain === newParams.to.assetOrigin ||\n                              x.chain === newParams.to.assetOrigin)\n                        : true)\n            );\n\n            let newToOptions = toOptions;\n            newToOptions = newToOptions.filter(\n                (x) =>\n                    x.asset === newParams.asset &&\n                    (newParams.from\n                        ? x.asset === newParams.from.asset &&\n                          x.chain !== newParams.from.chain &&\n                          (newParams.from.chain ===\n                              newParams.from.assetOrigin ||\n                              x.chain === newParams.from.assetOrigin)\n                        : true)\n            );\n\n            setValidFromOptions(newFromOptions);\n            setValidToOptions(newToOptions);\n        },\n        []\n    );\n\n    return (\n        <div>\n            {/* {connecting ? <Connect chain={connecting} /> : null} */}\n\n            {currentGateway ? (\n                <CurrentGateway\n                    amount={createGatewayParams.amount}\n                    gateway={currentGateway}\n                    onDone={onDone}\n                />\n            ) : (\n                <CreateGateway\n                    createGatewayParams={createGatewayParams}\n                    assets={assets.map((asset) => asset.asset)}\n                    validFromOptions={validFromOptions}\n                    validToOptions={validToOptions}\n                    updateCreateGatewayParams={updateCreateGatewayParams}\n                    handleCreateGateway={handleCreateGateway}\n                    connectFrom={\n                        !injectedWeb3 && createGatewayParams.from\n                            ? connectFrom\n                            : undefined\n                    }\n                />\n            )}\n        </div>\n    );\n}\n\nexport default GatewaySection;\n","import {\n    ChainTransactionStatus,\n    TxSubmitter,\n    TxWaiter,\n} from \"@renproject/utils\";\n\nimport { NETWORK } from \"../../lib/constants\";\nimport { RenState } from \"../../state/renState\";\nimport ChainTxHandler from \"../controllers/ChainTxHandler\";\n\nexport interface Props {\n    txHash: string;\n\n    fromAsset?: string;\n    fromChain?: string;\n    toChain?: string;\n\n    inTxDone: boolean;\n    inTx?: TxSubmitter | TxWaiter;\n\n    renVMDone: boolean;\n    renVM?: TxSubmitter;\n\n    outTxDone: boolean;\n    outTx?: TxSubmitter | TxWaiter;\n\n    onInDone: () => void;\n    onRenVMDone: () => void;\n    onOutDone: () => void;\n}\n\nconst GatewayTx = ({\n    fromAsset,\n    fromChain,\n    toChain,\n    txHash,\n    inTxDone,\n    inTx,\n    renVMDone,\n    renVM,\n    outTxDone,\n    outTx,\n    onInDone,\n    onRenVMDone,\n    onOutDone,\n}: Props) => {\n    // TODO: refactor\n    const { chains } = RenState.useContainer();\n\n    return (\n        <div\n            className={`rounded-md w-full mt-5 ${\n                outTxDone ||\n                (outTx && outTx.status.status === ChainTransactionStatus.Done)\n                    ? \"opacity-60\"\n                    : \"\"\n            }`}\n        >\n            <div className=\"px-4 py-5 space-y-2 sm:p-6 w-full h-full bg-white rounded-md p-4 flex flex-col border border-gray-300\">\n                <h3 className=\"font-bold truncate\">\n                    {fromAsset} on {fromChain} to {toChain}\n                </h3>\n                <p className=\"truncate\">\n                    RenVM Hash:{\" \"}\n                    <a\n                        className=\"text-indigo-600\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={`https://explorer${\n                            NETWORK !== \"mainnet\" ? `-${NETWORK}` : \"\"\n                        }.renproject.io/#/tx/${txHash}`}\n                    >\n                        {txHash}\n                    </a>\n                </p>\n                {inTx && inTx.status.transaction ? (\n                    <p className=\"truncate\">\n                        {inTx.chain} tx:{\" \"}\n                        <a\n                            className=\"text-indigo-600\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={chains[\n                                inTx.chain\n                            ].chain.transactionExplorerLink(\n                                inTx.status.transaction\n                            )}\n                        >\n                            {inTx.status.transaction.txidFormatted}\n                        </a>\n                    </p>\n                ) : null}\n                {outTx && outTx.status.transaction ? (\n                    <p className=\"truncate\">\n                        {outTx.chain} tx:{\" \"}\n                        <a\n                            className=\"text-indigo-600\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={chains[\n                                outTx.chain\n                            ].chain.transactionExplorerLink(\n                                outTx.status.transaction\n                            )}\n                        >\n                            {outTx.status.transaction.txidFormatted}\n                        </a>\n                    </p>\n                ) : null}\n\n                {!inTxDone &&\n                inTx &&\n                inTx.status.status !== ChainTransactionStatus.Done ? (\n                    <ChainTxHandler key={\"in\"} tx={inTx} onDone={onInDone} />\n                ) : !renVMDone &&\n                  renVM &&\n                  renVM.status.status !== ChainTransactionStatus.Done ? (\n                    <ChainTxHandler\n                        key={\"renVM\"}\n                        tx={renVM}\n                        onDone={onRenVMDone}\n                        autoSubmit={true}\n                    />\n                ) : !outTxDone &&\n                  outTx &&\n                  outTx.status.status !== ChainTransactionStatus.Done ? (\n                    <ChainTxHandler key={\"out\"} tx={outTx} onDone={onOutDone} />\n                ) : null}\n            </div>\n        </div>\n    );\n};\n\nexport default GatewayTx;\n","import { useState } from \"react\";\n\nimport { GatewayTransaction } from \"@renproject/ren\";\n\nimport { RenState } from \"../../state/renState\";\nimport GatewayTx from \"../views/GatewayTx\";\n\nexport interface Props {\n    transaction: GatewayTransaction;\n}\n\nconst GatewayTxController = ({ transaction }: Props) => {\n    const { transactionDoneCallback } = RenState.useContainer();\n\n    const [inDone, setInDone] = useState(false);\n    const [renVMDone, setRenVMDone] = useState(false);\n    const [outDone, setOutDone] = useState(false);\n\n    const onInDone = () => {\n        setInDone(true);\n    };\n\n    const onRenVMDone = () => {\n        setRenVMDone(true);\n    };\n\n    const onOutDone = () => {\n        setOutDone(true);\n        transactionDoneCallback(transaction);\n    };\n\n    return (\n        <GatewayTx\n            fromAsset={transaction.params.asset}\n            fromChain={transaction.fromChain.chain}\n            toChain={transaction.toChain.chain}\n            inTx={transaction.in}\n            renVM={transaction.renVM}\n            outTx={transaction.out}\n            inTxDone={inDone}\n            renVMDone={renVMDone}\n            outTxDone={outDone}\n            txHash={transaction.hash}\n            onInDone={onInDone}\n            onRenVMDone={onRenVMDone}\n            onOutDone={onOutDone}\n        />\n    );\n};\n\nexport default GatewayTxController;\n","import { GatewayTransaction } from \"@renproject/ren\";\n\nimport GatewayTxController from \"../controllers/GatewayTxController\";\nimport { Spinner } from \"./Spinner\";\n\nexport interface Props {\n    transactions: GatewayTransaction[];\n    loadingLocalTxs: boolean;\n}\n\nfunction GatewayTxList({ transactions, loadingLocalTxs }: Props) {\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"shadow rounded-md w-full\">\n                <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6 w-full h-full rounded-md\">\n                    <h2 className=\"font-bold\">Transactions</h2>\n                </div>\n            </div>\n            <div className=\"w-full\">\n                {loadingLocalTxs ? (\n                    <div className=\"text-sm font-medium m-4\">\n                        <Spinner className=\"text-indigo-600 inline-block\" />{\" \"}\n                        Loading account transactions...\n                    </div>\n                ) : null}\n                {transactions.length ? (\n                    transactions.map((transaction) => (\n                        <GatewayTxController\n                            key={transaction.hash}\n                            transaction={transaction}\n                        />\n                    ))\n                ) : !loadingLocalTxs ? (\n                    <p className=\"text-sm font-medium m-4\">No transactions</p>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n\nexport default GatewayTxList;\n","import { RenState } from \"../../state/renState\";\nimport GatewayTxList from \"../views/GatewayTxList\";\n\nconst TransactionsSection = () => {\n    const { transactions, loadingLocalTxs } = RenState.useContainer();\n\n    return (\n        <GatewayTxList\n            transactions={transactions}\n            loadingLocalTxs={loadingLocalTxs}\n        />\n    );\n};\n\nexport default TransactionsSection;\n","import { NETWORK } from \"../../lib/constants\";\nimport Accounts from \"./Accounts\";\nimport AccountSection from \"./AccountSection\";\nimport GatewaySection from \"./GatewaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nfunction App() {\n    return (\n        <div className=\"antialiased font-sans bg-gray-100 min-h-screen min-w-screen flex justify-center py-8 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-screen-2xl flex flex-col w-full\">\n                <div className=\"pb-4 w-full flex justify-between flex-wrap\">\n                    <h1 className=\"font-bold\">\n                        RenJS v3 Demo ({NETWORK} -{\" \"}\n                        <a\n                            className=\"text-indigo-900\"\n                            href={\n                                NETWORK === \"mainnet\"\n                                    ? \"https://renproject.github.io/ren-js-v3-demo/\"\n                                    : \"https://renproject.github.io/ren-js-v3-demo-mainnet/\"\n                            }\n                        >\n                            switch network\n                        </a>\n                        ){\" \"}\n                    </h1>\n                    <span>\n                        {NETWORK === \"mainnet\" ? (\n                            <span className=\"text-yellow-500\">\n                                DEMO SOFTWARE - ONLY SEND SMALL AMOUNTS\n                            </span>\n                        ) : null}\n                    </span>\n                </div>\n                <div className=\"flex w-full flex-col h-full md:flex-row md:justify-center\">\n                    <div className=\"shadow rounded-md w-full md:w-2/5 \">\n                        <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6 w-full h-full rounded-md\">\n                            <GatewaySection />\n                        </div>\n                    </div>\n                    <div className=\"w-full mt-4 md:w-3/5 md:ml-5 md:mt-0\">\n                        <AccountSection />\n                        <br />\n                        <TransactionsSection />\n                    </div>\n                    <Accounts />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/controllers/App\";\nimport { RenState } from \"./state/renState\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <RenState.Provider>\n            <App />\n        </RenState.Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from \"bignumber.js\";\nimport { DefaultTxWaiter, fromBase64, generateGHash, generateNHash, generatePHash, generateSHash, isContractChain, isDefined, isDepositChain, keccak256, sleep, toNBytes, toURLBase64, TxStatus, } from \"@renproject/utils\";\nimport { defaultRenJSConfig } from \"./config\";\nimport { RenVMCrossChainTxSubmitter } from \"./renVMTxSubmitter\";\nimport { getInputAndOutputTypes } from \"./utils/inputAndOutputTypes\";\nexport var TransactionStatus;\n(function (TransactionStatus) {\n    TransactionStatus[\"FetchingStatus\"] = \"fetching-status\";\n    TransactionStatus[\"Detected\"] = \"detected\";\n    TransactionStatus[\"Confirmed\"] = \"confirmed\";\n    TransactionStatus[\"Signed\"] = \"signed\";\n    TransactionStatus[\"Reverted\"] = \"reverted\";\n    TransactionStatus[\"Submitted\"] = \"submitted\";\n})(TransactionStatus || (TransactionStatus = {}));\nexport const TransactionStatusIndex = {\n    [TransactionStatus.Detected]: 0,\n    [TransactionStatus.Confirmed]: 1,\n    [TransactionStatus.Signed]: 2,\n    [TransactionStatus.Reverted]: 3,\n    [TransactionStatus.Submitted]: 4,\n};\nexport class GatewayTransaction {\n    /** @hidden */\n    constructor(renVM, fromChain, toChain, params, fromTxWaiter, config) {\n        /**\n         * `queryTx` fetches the RenVM transaction details of the deposit.\n         *\n         * ```ts\n         * await deposit.queryTx();\n         * // > { to: \"...\", hash: \"...\", status: \"done\", in: {...}, out: {...} }\n         */\n        this.queryTx = (retries = 2) => __awaiter(this, void 0, void 0, function* () {\n            if (this.queryTxResult &&\n                this.queryTxResult.txStatus === TxStatus.TxStatusDone) {\n                return this.queryTxResult;\n            }\n            const response = yield this.provider.queryTx(this.hash, retries);\n            this.queryTxResult = response;\n            // Update status.\n            if (response.tx.out &&\n                response.tx.out.revert &&\n                response.tx.out.revert.length > 0 &&\n                response.tx.out.sig &&\n                response.tx.out.sig.length > 0) {\n                this.onSignatureReady(response);\n            }\n            return response;\n        });\n        /**\n         * `fetchStatus` fetches the deposit's status on the mint-chain, RenVM\n         * and lock-chain to calculate it's [[TransactionStatus]].\n         *\n         * ```ts\n         * await deposit.fetchStatus();\n         * // > \"signed\"\n         * ```\n         */\n        this.fetchStatus = (initializing) => __awaiter(this, void 0, void 0, function* () {\n            const getStatus = () => __awaiter(this, void 0, void 0, function* () {\n                let queryTxResult;\n                // Fetch sighash.\n                try {\n                    queryTxResult = yield this.queryTx(1);\n                }\n                catch (_error) {\n                    // Ignore error.\n                    queryTxResult = null;\n                }\n                try {\n                    // Check if the transaction has been submitted to the mint-chain.\n                    const transaction = this.out && this.out.status;\n                    if (transaction !== undefined) {\n                        return TransactionStatus.Submitted;\n                    }\n                }\n                catch (_error) {\n                    // Ignore error.\n                }\n                try {\n                    queryTxResult =\n                        queryTxResult === undefined\n                            ? yield this.queryTx(1)\n                            : queryTxResult;\n                    if (queryTxResult &&\n                        queryTxResult.txStatus === TxStatus.TxStatusDone) {\n                        // Check if transaction was reverted.\n                        if (queryTxResult.tx.out &&\n                            queryTxResult.tx.out.revert &&\n                            queryTxResult.tx.out.revert !== \"\") {\n                            this.status = TransactionStatus.Reverted;\n                            this.revertReason =\n                                queryTxResult.tx.out.revert.toString();\n                        }\n                        else {\n                            return TransactionStatus.Signed;\n                        }\n                    }\n                }\n                catch (_error) {\n                    // Ignore error.\n                }\n                try {\n                    if (isDefined(this.in.status.confirmations) &&\n                        this.in.status.confirmations >= this.in.status.target) {\n                        return TransactionStatus.Confirmed;\n                    }\n                }\n                catch (_error) {\n                    // Ignore error.\n                }\n                return TransactionStatus.Detected;\n            });\n            if (initializing) {\n                // TODO: Throw an error after a certain amount of retries, and\n                // update status accordingly.\n                while (true) {\n                    try {\n                        this.status = yield getStatus();\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                    catch (error) {\n                        this._config.logger.error(error);\n                        yield sleep(this._config.networkDelay);\n                    }\n                }\n            }\n            else {\n                this.status = yield getStatus();\n            }\n            return this.status;\n        });\n        this.onSignatureReady = (txWithStatus) => {\n            this.queryTxResult = txWithStatus;\n            const { tx } = txWithStatus;\n            if (tx.out && tx.out.revert && tx.out.revert !== \"\") {\n                this.status = TransactionStatus.Reverted;\n                this.revertReason = tx.out.revert;\n                return;\n            }\n            this.status = TransactionStatus.Signed;\n            if (tx.out && tx.out.txid && tx.out.txid.length > 0) {\n                // The transaction has already been submitted by RenVM.\n                const txid = toURLBase64(tx.out.txid);\n                const txindex = tx.out.txindex.toFixed();\n                this.out.setTransaction({\n                    chain: this.toChain.chain,\n                    txid,\n                    txindex,\n                    txidFormatted: this.toChain.formattedTransactionHash({\n                        txid,\n                        txindex,\n                    }),\n                });\n            }\n        };\n        this.provider = renVM;\n        this.params = params;\n        this._config = Object.assign(Object.assign({}, defaultRenJSConfig), config);\n        this.fromChain = fromChain;\n        this.toChain = toChain;\n        // `processDeposit` will call `fetchStatus` which will set the proper\n        // status.\n        this.status = TransactionStatus.FetchingStatus;\n        // Set hash to \"\" rather than undefined so that it's type is always\n        // `string`. The hash will be set in `_initialize` which should be\n        // called immediately after the constructor.\n        this.hash = \"\";\n        const nonce = isDefined(params.nonce)\n            ? fromBase64(params.nonce)\n            : toNBytes(0, 32);\n        this.nHash = generateNHash(nonce, fromBase64(params.fromTx.txid), params.fromTx.txindex);\n        if (fromTxWaiter) {\n            this.in = fromTxWaiter;\n        }\n        else {\n            this.in = undefined;\n        }\n        // TODO: Throw error if this.out is accessed before this.signed().\n        this.selector = undefined;\n        this.out = undefined;\n        this.pHash = undefined;\n        this.gHash = undefined;\n        this.renVM = undefined;\n    }\n    /** @hidden */\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { inputType, outputType, selector } = yield getInputAndOutputTypes({\n                asset: this.params.asset,\n                fromChain: this.fromChain,\n                toChain: this.toChain,\n            });\n            this.inputType = inputType;\n            this.outputType = outputType;\n            this.selector = selector;\n            const { asset, nonce, to } = this.params;\n            const payload = yield this.toChain.getOutputPayload(asset, this.outputType, to);\n            const sHash = generateSHash(`${this.params.asset}/to${this.params.to.chain}`);\n            this.pHash = generatePHash(payload.payload);\n            const nonceBuffer = nonce\n                ? Buffer.isBuffer(nonce)\n                    ? nonce\n                    : fromBase64(nonce)\n                : toNBytes(0, 32);\n            this.gHash = generateGHash(this.pHash, sHash, payload.toBytes, nonceBuffer);\n            const gPubKey = this.params.shard\n                ? fromBase64(this.params.shard.gPubKey)\n                : Buffer.from([]);\n            if (!this.in) {\n                this.in = new DefaultTxWaiter({\n                    chainTransaction: this.params.fromTx,\n                    chain: this.fromChain,\n                    target: yield this.provider.getConfirmationTarget(this.fromChain.chain),\n                });\n            }\n            this.renVM = new RenVMCrossChainTxSubmitter(this.provider, this.selector, {\n                txid: fromBase64(this.params.fromTx.txid),\n                txindex: new BigNumber(this.params.fromTx.txindex),\n                amount: new BigNumber(this.params.fromTx.amount),\n                payload: payload.payload,\n                phash: this.pHash,\n                to: payload.to,\n                nonce: nonceBuffer,\n                nhash: this.nHash,\n                gpubkey: gPubKey,\n                ghash: this.gHash, // Buffer;\n            }, this.onSignatureReady);\n            this.hash = this.renVM._hash;\n            this.renVM.eventEmitter.on(\"status\", (status) => {\n                this.queryTxResult = status.response;\n            });\n            // if (this.outputType === OutputType.Mint) {\n            if (isDepositChain(this.toChain) &&\n                (yield this.toChain.isDepositAsset(this.params.asset))) {\n                this.out = new DefaultTxWaiter({\n                    chain: this.toChain,\n                    target: 0,\n                });\n            }\n            else if (isContractChain(this.toChain)) {\n                this.out = yield this.toChain.getOutputTx(this.outputType, this.params.asset, this.params.to, () => ({\n                    amount: this.queryTxResult && this.queryTxResult.tx.out\n                        ? this.queryTxResult.tx.out.amount\n                        : undefined,\n                    nHash: this.nHash,\n                    sHash: keccak256(Buffer.from(this.selector)),\n                    pHash: this.pHash,\n                    sigHash: this.queryTxResult && this.queryTxResult.tx.out\n                        ? this.queryTxResult.tx.out.sighash\n                        : undefined,\n                    signature: this.queryTxResult && this.queryTxResult.tx.out\n                        ? this.queryTxResult.tx.out.sig\n                        : undefined,\n                }), 1);\n            }\n            else {\n                throw new Error(`Error setting 'out' transaction submitter.`);\n            }\n            return this;\n        });\n    }\n}\n//# sourceMappingURL=gatewayTransaction.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport BigNumber from \"bignumber.js\";\nimport { DEFAULT_TIMEOUT, fixUTXO, fixUTXOs, sortUTXOs, } from \"./API\";\nexport var SoChainNetwork;\n(function (SoChainNetwork) {\n    SoChainNetwork[\"BTC\"] = \"BTC\";\n    SoChainNetwork[\"LTC\"] = \"LTC\";\n    SoChainNetwork[\"ZEC\"] = \"ZEC\";\n    SoChainNetwork[\"DOGE\"] = \"DOGE\";\n    SoChainNetwork[\"DASH\"] = \"DASH\";\n    SoChainNetwork[\"BTCTEST\"] = \"BTCTEST\";\n    SoChainNetwork[\"LTCTEST\"] = \"LTCTEST\";\n    SoChainNetwork[\"ZECTEST\"] = \"ZECTEST\";\n    SoChainNetwork[\"DOGETEST\"] = \"DOGETEST\";\n    SoChainNetwork[\"DASHTEST\"] = \"DASHTEST\";\n})(SoChainNetwork || (SoChainNetwork = {}));\nexport class SoChain {\n    constructor(network = SoChainNetwork.BTC) {\n        this.fetchHeight = () => __awaiter(this, void 0, void 0, function* () {\n            return (yield axios.get(`https://sochain.com/api/v2/get_info/${this.network}`, {\n                timeout: DEFAULT_TIMEOUT,\n            })).data.blocks.toString();\n        });\n        this.fetchUTXO = (txid, txindex) => __awaiter(this, void 0, void 0, function* () {\n            const url = `https://sochain.com/api/v2/get_tx/${this.network}/${txid}`;\n            const response = yield axios.get(url, { timeout: DEFAULT_TIMEOUT });\n            const tx = response.data.data;\n            const height = new BigNumber(yield this.fetchHeight());\n            return fixUTXO({\n                txid: tx.txid,\n                amount: tx.outputs[parseInt(txindex, 10)].value.toString(),\n                txindex: txindex,\n                height: tx.confirmations && tx.confirmations > 0\n                    ? height.minus(tx.confirmations).plus(1).toFixed()\n                    : null,\n            }, 8);\n        });\n        this.fetchUTXOs = (address) => __awaiter(this, void 0, void 0, function* () {\n            const url = `https://sochain.com/api/v2/get_tx_unspent/${this.network}/${address}/${0}`;\n            const response = yield axios.get(url, { timeout: DEFAULT_TIMEOUT });\n            const height = new BigNumber(yield this.fetchHeight());\n            return fixUTXOs(response.data.data.txs.map((utxo) => ({\n                txid: utxo.txid,\n                txindex: utxo.output_no.toString(),\n                amount: utxo.value.toString(),\n                height: utxo.confirmations && utxo.confirmations > 0\n                    ? height.minus(utxo.confirmations).plus(1).toFixed()\n                    : null,\n            })), 8).sort(sortUTXOs);\n        });\n        this.fetchTXs = (address) => __awaiter(this, void 0, void 0, function* () {\n            const url = `https://sochain.com/api/v2/get_tx_received/${this.network}/${address}/${0}`;\n            const response = yield axios.get(url, { timeout: DEFAULT_TIMEOUT });\n            const height = new BigNumber(yield this.fetchHeight());\n            return fixUTXOs(response.data.data.txs.map((utxo) => ({\n                txid: utxo.txid,\n                amount: utxo.value.toString(),\n                // scriptPubKey: utxo.script_hex,\n                txindex: utxo.output_no.toString(),\n                height: utxo.confirmations && utxo.confirmations > 0\n                    ? height.minus(utxo.confirmations).plus(1).toFixed()\n                    : null,\n            })), 8).sort(sortUTXOs);\n        });\n        this.broadcastTransaction = (txHex) => __awaiter(this, void 0, void 0, function* () {\n            const response = yield axios.post(`https://sochain.com/api/v2/send_tx/${this.network}`, { tx_hex: txHex }, { timeout: DEFAULT_TIMEOUT });\n            return response.data.data.txid;\n        });\n        this.network = network;\n    }\n}\n//# sourceMappingURL=sochain.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { DEFAULT_TIMEOUT, sortUTXOs } from \"./API\";\nexport var BlockchairNetwork;\n(function (BlockchairNetwork) {\n    BlockchairNetwork[\"BITCOIN\"] = \"bitcoin\";\n    BlockchairNetwork[\"BITCOIN_CASH\"] = \"bitcoin-cash\";\n    BlockchairNetwork[\"DOGECOIN\"] = \"dogecoin\";\n    BlockchairNetwork[\"ZCASH\"] = \"zcash\";\n    // LITECOIN = \"litecoin\",\n    // BITCOIN_SV = \"bitcoin-sv\",\n    // DASH = \"dash\",\n    // GROESTLCOIN = \"groestlcoin\",\n    BlockchairNetwork[\"BITCOIN_TESTNET\"] = \"bitcoin/testnet\";\n})(BlockchairNetwork || (BlockchairNetwork = {}));\nexport class Blockchair {\n    constructor(network = BlockchairNetwork.BITCOIN) {\n        this.network = network;\n    }\n    endpoint() {\n        return `https://api.blockchair.com/${this.network}`;\n    }\n    fetchHeight() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint()}/stats`;\n            const response = (yield axios.get(`${url}`, {\n                timeout: DEFAULT_TIMEOUT,\n            })).data;\n            return response.data.best_block_height.toString();\n        });\n    }\n    fetchUTXO(txid, txindex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint()}/dashboards/transaction/${txid}`;\n            const response = (yield axios.get(`${url}`, {\n                timeout: DEFAULT_TIMEOUT,\n            })).data;\n            if (!response.data[txid]) {\n                throw new Error(`Transaction not found.`);\n            }\n            const tx = response.data[txid];\n            let latestBlock = response.context.state;\n            if (latestBlock === 0) {\n                const statsUrl = `${this.endpoint()}/stats`;\n                const statsResponse = (yield axios.get(statsUrl, { timeout: DEFAULT_TIMEOUT })).data;\n                latestBlock = statsResponse.data.blocks - 1;\n            }\n            return {\n                txid: txid,\n                txindex: txindex,\n                amount: tx.outputs[parseInt(txindex, 10)].value.toString(),\n                height: tx.transaction.block_id && tx.transaction.block_id > 0\n                    ? tx.transaction.block_id.toString()\n                    : null,\n            };\n        });\n    }\n    fetchUTXOs(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint()}/dashboards/address/${address}?limit=0,100`;\n            const response = (yield axios.get(url, { timeout: DEFAULT_TIMEOUT })).data;\n            let latestBlock = response.context.state;\n            if (latestBlock === 0) {\n                const statsUrl = `${this.endpoint()}/stats`;\n                const statsResponse = (yield axios.get(statsUrl, { timeout: DEFAULT_TIMEOUT })).data;\n                latestBlock = statsResponse.data.blocks - 1;\n            }\n            return response.data[address].utxo\n                .map((utxo) => ({\n                txid: utxo.transaction_hash,\n                amount: utxo.value.toString(),\n                txindex: utxo.index.toString(),\n                height: utxo.block_id && utxo.block_id > 0\n                    ? utxo.block_id.toString()\n                    : null,\n            }))\n                .sort(sortUTXOs);\n        });\n    }\n    fetchTXs(address, limit = 25) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint()}/dashboards/address/${address}?limit=${limit},0`;\n            const response = (yield axios.get(url, { timeout: DEFAULT_TIMEOUT })).data;\n            // let latestBlock = response.context.state;\n            // if (latestBlock === 0) {\n            //     const statsUrl = `${this.endpoint()}/stats`;\n            //     const statsResponse = (\n            //         await axios.get(statsUrl, { timeout: DEFAULT_TIMEOUT })\n            //     ).data;\n            //     latestBlock = statsResponse.data.blocks - 1;\n            // }\n            const txHashes = response.data[address].transactions;\n            let txDetails = {};\n            // Fetch in sets of 10\n            for (let i = 0; i < Math.ceil(txHashes.length / 10); i++) {\n                const txUrl = `${this.endpoint()}/dashboards/transactions/${txHashes\n                    .slice(i * 10, (i + 1) * 10)\n                    .join(\",\")}`;\n                const txResponse = (yield axios.get(txUrl, {\n                    timeout: DEFAULT_TIMEOUT,\n                })).data;\n                txDetails = Object.assign(Object.assign({}, txDetails), txResponse.data);\n            }\n            const received = [];\n            for (const txHash of txHashes) {\n                const tx = txDetails[txHash];\n                for (let i = 0; i < tx.outputs.length; i++) {\n                    const output = tx.outputs[i];\n                    if (output.recipient === address) {\n                        received.push({\n                            txid: tx.transaction.hash,\n                            amount: output.value.toString(),\n                            txindex: i.toString(),\n                            height: output.block_id && output.block_id > 0\n                                ? output.block_id.toString()\n                                : null,\n                        });\n                    }\n                }\n            }\n            return received.sort(sortUTXOs);\n        });\n    }\n    broadcastTransaction(txHex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${this.endpoint()}/push/transaction`;\n            const response = yield axios.post(url, { data: txHex }, { timeout: DEFAULT_TIMEOUT });\n            if (response.data.error) {\n                throw new Error(response.data.error);\n            }\n            return response.data.data.transaction_hash;\n        });\n    }\n}\n//# sourceMappingURL=blockchair.js.map"],"sourceRoot":""}